dp[, 1:3] <- as.character(dp[, 1:3])
View(dp)
dp <- data.frame("data" = c("SAAT", "wind", "biotemp", "RH"),
"id" = c("DP1.00002.001", "DP1.00001.001", "DP1.00005.001", "DP1.00098.001"),
"value" = c("tempSingleMean", "windSpeedMean", "bioTempMean", "RHMean"))
dp[] <- lapply(dp, as.character)
value <- dp$value[[i]]
neon_data_sub <- neon_data[colnames(neon_data) %in% c("verticalPosition", "startDateTime", value)]
?loadByProduct
dp <- data.frame("data" = c("SAAT", "wind", "biotemp", "RH"),
"id" = c("DP1.00002.001", "DP1.00001.001", "DP1.00005.001", "DP1.00098.001"),
"value" = c("tempSingleMean", "windSpeedMean", "bioTempMean", "RHMean"))
library(neonUtilities)
library(plotly)
dp[] <- lapply(dp, as.character)
for (i in seq(along=1:4)){
value <- dp$value[[i]]
neon_tower <- loadByProduct(dpID=dp$id[[i]],
site=c("SCBI"),
package="basic", avg=30,
check.size = FALSE,
#(use TRUE outside loop to see how big the dowloads are)
startdate="2018-03",
enddate="2018-10")
neon_data <- neon_tower[[1]]
neon_data_sub <- neon_data[colnames(neon_data) %in% c("verticalPosition", "startDateTime", value)]
neon_data_sub <- neon_data_sub[neon_data_sub$tempSingleMean > -10, ]
assign(paste0(dp$data[[i]], "_plot"),
plot_ly(data = neon_data_sub, x = ~startDateTime, y = ~neon_data_sub[value], type = "scatter", color = ~verticalPosition))
}
View(neon_tower)
neon_data_sub <- neon_data[colnames(neon_data) %in% c("verticalPosition", "startDateTime", value)]
for (i in seq(along=1:4)){
value <- dp$value[[i]]
neon_tower <- loadByProduct(dpID=dp$id[[i]],
site=c("SCBI"),
package="basic", avg=30,
check.size = FALSE,
#(use TRUE outside loop to see how big the dowloads are)
startdate="2018-03",
enddate="2018-10")
neon_data <- neon_tower[[1]]
neon_data_sub <- neon_data[colnames(neon_data) %in% c("verticalPosition", "startDateTime", value)]
neon_data_sub <- ifelse("tempSingleMean" %in% colnames(neon_data_sub),
neon_data_sub[neon_data_sub$tempSingleMean > -10, ],
neon_data_sub))
assign(paste0(dp$data[[i]], "_plot"),
plot_ly(data = neon_data_sub, x = ~startDateTime, y = ~neon_data_sub[value], type = "scatter", color = ~verticalPosition))
}
for (i in seq(along=1:4)){
value <- dp$value[[i]]
neon_tower <- loadByProduct(dpID=dp$id[[i]],
site=c("SCBI"),
package="basic", avg=30,
check.size = FALSE,
#(use TRUE outside loop to see how big the dowloads are)
startdate="2018-03",
enddate="2018-10")
neon_data <- neon_tower[[1]]
neon_data_sub <- neon_data[colnames(neon_data) %in% c("verticalPosition", "startDateTime", value)]
neon_data_sub <- ifelse("tempSingleMean" %in% colnames(neon_data_sub),
neon_data_sub[neon_data_sub$tempSingleMean > -10, ],
neon_data_sub)
assign(paste0(dp$data[[i]], "_plot"),
plot_ly(data = neon_data_sub, x = ~startDateTime, y = ~neon_data_sub[value], type = "scatter", color = ~verticalPosition))
}
for (i in seq(along=1:4)){
value <- dp$value[[i]]
neon_tower <- loadByProduct(dpID=dp$id[[i]],
site=c("SCBI"),
package="basic", avg=30,
check.size = FALSE,
#(use TRUE outside loop to see how big the dowloads are)
startdate="2018-03",
enddate="2018-10")
neon_data <- neon_tower[[1]]
neon_data_sub <- neon_data[colnames(neon_data) %in% c("verticalPosition", "startDateTime", value)]
assign(paste0(dp$data[[i]], "_plot"),
plot_ly(data = neon_data_sub, x = ~startDateTime, y = ~neon_data_sub[value], type = "scatter", color = ~verticalPosition))
}
SAAT_plot
neon_data_sub[value]
RH_plot
assign(paste0(dp$data[[i]], "_plot"),
plot_ly(data = neon_data_sub, x = ~startDateTime, y = ~value, type = "scatter", color = ~verticalPosition))
RH_plot
assign(paste0(dp$data[[i]], "_plot"),
plot_ly(data = neon_data_sub, x = ~startDateTime, y = ~RHMean, type = "scatter", color = ~verticalPosition))
RH_plot
View(neon_data_sub)
unique(neon_data$verticalPosition)
View(neon_data_sub)
neon_data_sub$startDateTime <- as.numeric(neon_data_sub$startDateTime)
View(neon_data_sub)
neon_data_sub <- neon_data[colnames(neon_data) %in% c("verticalPosition", "startDateTime", value)]
neon_data_sub$startDateTime <- as.date(neon_data_sub$startDateTime)
library(lubridate)
?mdy
?mdy_hms
View(neon_data_sub)
class(neon_data_sub$startDateTime)
neon_data_sub$startDateTime <- ymd_hms(neon_data_sub$startDateTime)
View(neon_data_sub)
assign(paste0(dp$data[[i]], "_plot"),
plot_ly(data = neon_data_sub, x = ~startDateTime, y = ~RHMean, type = "scatter", color = ~verticalPosition))
RH_plot
View(neon_data_sub)
assign(paste0(dp$data[[i]], "_plot"),
plot_ly(data = neon_data_sub, x = ~startDateTime, y = ~value, type = "scatter", color = ~verticalPosition))
RH_plot
assign(paste0(dp$data[[i]], "_plot"),
plot_ly(data = neon_data_sub, x = ~startDateTime, y = ~neon_data_sub[value], type = "scatter", color = ~verticalPosition))
RH_plot
value
gsub(\", "", value)
as.name(value)
paste0("~", as.name(value))
assign(paste0(dp$data[[i]], "_plot"),
plot_ly(data = neon_data_sub, x = ~startDateTime, y = paste0("~", as.name(value)), type = "scatter", color = ~verticalPosition))
RH_plot
assign(paste0(dp$data[[i]], "_plot"),
plot_ly(data = neon_data_sub, x = startDateTime, y = as.name(value), type = "scatter", color = verticalPosition))
~as.name(value)
paste0(~, as.name(value))
assign(paste0(dp$data[[i]], "_plot"),
plot_ly(data = neon_data_sub, x = ~startDateTime, y = ~neon_data_sub[, value], type = "scatter", color = ~verticalPosition))
RH_plot
dp <- data.frame("data" = c("SAAT", "wind", "biotemp", "RH"),
"id" = c("DP1.00002.001", "DP1.00001.001", "DP1.00005.001", "DP1.00098.001"),
"value" = c("tempSingleMean", "windSpeedMean", "bioTempMean", "RHMean"))
dp[] <- lapply(dp, as.character)
for (i in seq(along=1:4)){
value <- dp$value[[i]]
neon_tower <- loadByProduct(dpID=dp$id[[i]],
site=c("SCBI"),
package="basic", avg=30,
check.size = FALSE,
#(use TRUE outside loop to see how big the dowloads are)
startdate="2018-03",
enddate="2018-10")
neon_data <- neon_tower[[1]]
neon_data_sub <- neon_data[colnames(neon_data) %in% c("verticalPosition", "startDateTime", value)]
neon_data_sub$startDateTime <- ymd_hms(neon_data_sub$startDateTime)
assign(paste0(dp$data[[i]], "_plot"),
plot_ly(data = neon_data_sub, x = ~startDateTime, y = ~neon_data_sub[, value], type = "scatter", color = ~verticalPosition, mode = "markers"))
}
SAAT_plot
wind_plot
biotemp_plot
RH_plot
i=1
value <- dp$value[[i]]
neon_tower <- loadByProduct(dpID=dp$id[[i]],
site=c("SCBI"),
package="basic", avg=30,
check.size = FALSE,
#(use TRUE outside loop to see how big the dowloads are)
startdate="2018-03",
enddate="2018-10")
neon_data <- neon_tower[[1]]
neon_data_sub <- neon_data[colnames(neon_data) %in% c("verticalPosition", "startDateTime", value)]
neon_data_sub$startDateTime <- ymd_hms(neon_data_sub$startDateTime)
View(neon_data_sub)
assign(paste0(dp$data[[i]], "_plot"),
plot_ly(data = neon_data_sub, x = ~startDateTime, y = ~neon_data_sub[, value], type = "scatter", color = ~verticalPosition, mode = "markers"))
SAAT_plot
neon_data_sub <- neon_data[colnames(neon_data) %in% c("verticalPosition", "startDateTime", value)]
View(neon_data)
?as.date
?as.Date
neon_data <- neon_tower[[1]]
neon_data_sub <- neon_data[colnames(neon_data) %in% c("verticalPosition", "startDateTime", value)]
assign(paste0(dp$data[[i]], "_plot"),
plot_ly(data = neon_data_sub, x = ~startDateTime, y = ~neon_data_sub[, value], type = "scatter", color = ~verticalPosition, mode = "markers"))
SAAT_plot
neon_data_sub$startDateTime <- ymd_hms(as.character(neon_data_sub$startDateTime))
assign(paste0(dp$data[[i]], "_plot"),
plot_ly(data = neon_data_sub, x = ~startDateTime, y = ~neon_data_sub[, value], type = "scatter", color = ~verticalPosition, mode = "markers"))
SAAT_plot
View(neon_data)
neon_data_sub <- neon_data[colnames(neon_data) %in% c("verticalPosition", "startDateTime", value)]
neon_data_sub$startDateTime <- as.Date(neon_data_sub$startDateTime)
View(neon_data_sub)
?as.Date
neon_data_sub <- neon_data[colnames(neon_data) %in% c("verticalPosition", "startDateTime", value)]
neon_data_sub$startDateTime <- as.Date(neon_data_sub$startDateTime, format ="%Y-%m-%d %H:%m%s")
neon_data_sub <- neon_data[colnames(neon_data) %in% c("verticalPosition", "startDateTime", value)]
neon_data_sub$startDateTime <- as.Date(neon_data_sub$startDateTime, format ="%Y-%m-%d %H:%m:%s")
View(neon_data_sub)
?as.POSIXct
neon_data_sub <- neon_data[colnames(neon_data) %in% c("verticalPosition", "startDateTime", value)]
neon_data_sub$startDateTime <- as.POSIXct(as.character(neon_data_sub$startDateTime))
View(neon_data_sub)
neon_data_sub <- neon_data[colnames(neon_data) %in% c("verticalPosition", "startDateTime", value)]
neon_data_sub$startDateTime <- as.POSIXct(as.character(neon_data_sub$startDateTime), format = "%Y-%m-%d %H:%M:%OS")
View(neon_data_sub)
neon_data_sub <- neon_data[colnames(neon_data) %in% c("verticalPosition", "startDateTime", value)]
neon_data_sub$startDateTime <- as.POSIXct(as.character(neon_data_sub$startDateTime), format = "%Y-%m-%d%H:%M:%OS")
View(neon_data_sub)
neon_data_sub <- neon_data[colnames(neon_data) %in% c("verticalPosition", "startDateTime", value)]
neon_data_sub$startDateTime <- as.character(neon_data_sub$startDateTime)
neon_data_sub$startDateTime <- gsub("T", " ", neon_data_sub$startDateTime)
neon_data_sub$startDateTime <- as.POSIXct(neon_data_sub$startDateTime, format = "%Y-%m-%d %H:%M:%OS")
View(neon_data_sub)
assign(paste0(dp$data[[i]], "_plot"),
plot_ly(data = neon_data_sub, x = ~startDateTime, y = ~neon_data_sub[, value], type = "scatter", color = ~verticalPosition, mode = "markers"))
SAAT_plot
class(neon_data_sub$startDateTime)
dp <- data.frame("data" = c("SAAT", "wind", "biotemp", "RH"),
"id" = c("DP1.00002.001", "DP1.00001.001", "DP1.00005.001", "DP1.00098.001"),
"value" = c("tempSingleMean", "windSpeedMean", "bioTempMean", "RHMean"))
dp[] <- lapply(dp, as.character)
for (i in seq(along=1:4)){
value <- dp$value[[i]]
neon_tower <- loadByProduct(dpID=dp$id[[i]],
site=c("SCBI"),
package="basic", avg=30,
check.size = FALSE,
#(use TRUE outside loop to see how big the dowloads are)
startdate="2018-03",
enddate="2018-10")
neon_data <- neon_tower[[1]]
neon_data_sub <- neon_data[colnames(neon_data) %in% c("verticalPosition", "startDateTime", value)]
# neon_data_sub$startDateTime <- ymd_hms(as.character(neon_data_sub$startDateTime))
neon_data_sub$startDateTime <- as.character(neon_data_sub$startDateTime)
neon_data_sub$startDateTime <- gsub("T", " ", neon_data_sub$startDateTime)
neon_data_sub$startDateTime <- as.POSIXct(neon_data_sub$startDateTime, format = "%Y-%m-%d %H:%M:%OS")
assign(paste0(dp$data[[i]], "_plot"),
plot_ly(data = neon_data_sub, x = ~startDateTime, y = ~neon_data_sub[, value], type = "scatter", color = ~verticalPosition, mode = "markers"))
}
library(neonUtilities)
library(plotly)
library(lubridate)
for (i in seq(along=1:4)){
value <- dp$value[[i]]
neon_tower <- loadByProduct(dpID=dp$id[[i]],
site=c("SCBI"),
package="basic", avg=30,
check.size = FALSE,
#(use TRUE outside loop to see how big the dowloads are)
startdate="2018-03",
enddate="2018-10")
neon_data <- neon_tower[[1]]
neon_data_sub <- neon_data[colnames(neon_data) %in% c("verticalPosition", "startDateTime", value)]
# neon_data_sub$startDateTime <- ymd_hms(as.character(neon_data_sub$startDateTime))
neon_data_sub$startDateTime <- as.character(neon_data_sub$startDateTime)
neon_data_sub$startDateTime <- gsub("T", " ", neon_data_sub$startDateTime)
neon_data_sub$startDateTime <- as.POSIXct(neon_data_sub$startDateTime, format = "%Y-%m-%d %H:%M:%OS")
assign(paste0(dp$data[[i]], "_plot"),
plot_ly(data = neon_data_sub, x = ~startDateTime, y = ~neon_data_sub[, value], type = "scatter", color = ~verticalPosition, mode = "markers"))
}
SAAT_plot
View(SAAT_plot)
i=1
value <- dp$value[[i]]
neon_tower <- loadByProduct(dpID=dp$id[[i]],
site=c("SCBI"),
package="basic", avg=30,
check.size = FALSE,
#(use TRUE outside loop to see how big the dowloads are)
startdate="2018-03",
enddate="2018-10")
assign(paste0(dp$data[[i]], "_graph"),
ggplot(data = neon_data_sub) +
aes(x = startDateTime, y = neon_data_sub[, value]) +
geom_point(color = "#0c4c8a") +
theme_minimal())
SAAT_graph
assign(paste0(dp$data[[i]], "_graph"),
ggplot(data = neon_data_sub) +
aes(x = startDateTime, y = value) +
geom_point(color = "#0c4c8a") +
theme_minimal())
SAAT_graph
neon_data_sub[, value]
neon_data_sub[value]
neon_data_sub[, value]
assign(paste0(dp$data[[i]], "_graph"),
ggplot(data = neon_data_sub) +
aes_string(x = colnames(neon_data_sub)[2], y = colnames(neon_data_sub)[3]) +
geom_point(color = "#0c4c8a") +
theme_minimal())
SAAT_graph
assign(paste0(dp$data[[i]], "_graph"),
ggplot(data = neon_data_sub) +
aes_string(x = colnames(neon_data_sub)[2], y = colnames(neon_data_sub)[3]) +
geom_point(aes(group=verticalPosition, color=verticalPosition)) +
theme_minimal())
SAAT_graph
neon_data_sub$verticalPosition <- as.character(neon_data_sub$verticalPosition)
assign(paste0(dp$data[[i]], "_graph"),
ggplot(data = neon_data_sub) +
aes_string(x = colnames(neon_data_sub)[2], y = colnames(neon_data_sub)[3]) +
geom_point(aes(group=verticalPosition, color=verticalPosition)) +
theme_minimal())
SAAT_graph
i=4
value <- dp$value[[i]]
neon_tower <- loadByProduct(dpID=dp$id[[i]],
site=c("SCBI"),
package="basic", avg=30,
check.size = FALSE,
#(use TRUE outside loop to see how big the dowloads are)
startdate="2018-03",
enddate="2018-10")
neon_data <- neon_tower[[1]]
neon_data_sub <- neon_data[colnames(neon_data) %in% c("verticalPosition", "startDateTime", value)]
neon_data_sub$startDateTime <- as.character(neon_data_sub$startDateTime)
neon_data_sub$startDateTime <- gsub("T", " ", neon_data_sub$startDateTime)
neon_data_sub$startDateTime <- as.POSIXct(neon_data_sub$startDateTime, format = "%Y-%m-%d %H:%M:%OS")
assign(paste0(dp$data[[i]], "_plot"),
plot_ly(data = neon_data_sub, x = ~startDateTime, y = ~neon_data_sub[, value], type = "scatter", color = ~verticalPosition, mode = "markers"))
RH_plot
i=1
value <- dp$value[[i]]
neon_tower <- loadByProduct(dpID=dp$id[[i]],
site=c("SCBI"),
package="basic", avg=30,
check.size = FALSE,
#(use TRUE outside loop to see how big the dowloads are)
startdate="2018-03",
enddate="2018-10")
neon_data <- neon_tower[[1]]
neon_data_sub <- neon_data[colnames(neon_data) %in% c("verticalPosition", "startDateTime", value)]
neon_data_sub$startDateTime <- as.character(neon_data_sub$startDateTime)
neon_data_sub$startDateTime <- gsub("T", " ", neon_data_sub$startDateTime)
neon_data_sub$startDateTime <- as.POSIXct(neon_data_sub$startDateTime, format = "%Y-%m-%d %H:%M:%OS")
assign(paste0(dp$data[[i]], "_plot"),
plot_ly(data = neon_data_sub, x = ~startDateTime, y = ~neon_data_sub[, value], type = "scatter", color = ~verticalPosition, mode = "markers"))
SAAT_plot
i=3
value <- dp$value[[i]]
neon_tower <- loadByProduct(dpID=dp$id[[i]],
site=c("SCBI"),
package="basic", avg=30,
check.size = FALSE,
#(use TRUE outside loop to see how big the dowloads are)
startdate="2018-03",
enddate="2018-10")
neon_data <- neon_tower[[1]]
neon_data_sub <- neon_data[colnames(neon_data) %in% c("verticalPosition", "startDateTime", value)]
neon_data_sub$startDateTime <- as.character(neon_data_sub$startDateTime)
neon_data_sub$startDateTime <- gsub("T", " ", neon_data_sub$startDateTime)
neon_data_sub$startDateTime <- as.POSIXct(neon_data_sub$startDateTime, format = "%Y-%m-%d %H:%M:%OS")
assign(paste0(dp$data[[i]], "_plot"),
plot_ly(data = neon_data_sub, x = ~startDateTime, y = ~neon_data_sub[, value], type = "scatter", color = ~verticalPosition, mode = "markers"))
biotemp_plot
unique(neon_data$verticalPosition)
i=2
value <- dp$value[[i]]
neon_tower <- loadByProduct(dpID=dp$id[[i]],
site=c("SCBI"),
package="basic", avg=30,
check.size = FALSE,
#(use TRUE outside loop to see how big the dowloads are)
startdate="2018-05",
enddate="2018-08")
neon_data <- neon_tower[[1]]
neon_data_sub <- neon_data[colnames(neon_data) %in% c("verticalPosition", "startDateTime", value)]
neon_data_sub$startDateTime <- as.character(neon_data_sub$startDateTime)
neon_data_sub$startDateTime <- gsub("T", " ", neon_data_sub$startDateTime)
neon_data_sub$startDateTime <- as.POSIXct(neon_data_sub$startDateTime, format = "%Y-%m-%d %H:%M:%OS")
assign(paste0(dp$data[[i]], "_plot"),
plot_ly(data = neon_data_sub, x = ~startDateTime, y = ~neon_data_sub[, value], type = "scatter", color = ~verticalPosition, mode = "markers") %>%
layout(yaxis = value))
wind_plot
y <- list(title = value, titlefont = f)
y <- list(title = value)
assign(paste0(dp$data[[i]], "_plot"),
plot_ly(data = neon_data_sub, x = ~startDateTime, y = ~neon_data_sub[, value], type = "scatter", color = ~verticalPosition, mode = "markers") %>%
layout(yaxis = y))
wind_plot
dp <- data.frame("data" = c("SAAT", "wind", "biotemp", "RH", "SR"),
"id" = c("DP1.00002.001", "DP1.00001.001", "DP1.00005.001", "DP1.00098.001", "DP1.00022.001"),
"value" = c("tempSingleMean", "windSpeedMean", "bioTempMean", "RHMean", "x"))
i=5
dp[] <- lapply(dp, as.character)
value <- dp$value[[i]]
neon_tower <- loadByProduct(dpID=dp$id[[i]],
site=c("SCBI"),
package="basic", avg=30,
check.size = FALSE,
#(use TRUE outside loop to see how big the dowloads are)
startdate="2018-05",
enddate="2018-08")
View(neon_tower)
dp <- data.frame("data" = c("SAAT", "wind", "biotemp", "RH", "SR"),
"id" = c("DP1.00002.001", "DP1.00001.001", "DP1.00005.001", "DP1.00098.001", "DP1.00022.001"),
"value" = c("tempSingleMean", "windSpeedMean", "bioTempMean", "RHMean", "shortRadMean"))
dp[] <- lapply(dp, as.character)
value <- dp$value[[i]]
neon_data <- neon_tower[[1]]
neon_data_sub <- neon_data[colnames(neon_data) %in% c("verticalPosition", "startDateTime", value)]
neon_data_sub$startDateTime <- as.character(neon_data_sub$startDateTime)
neon_data_sub$startDateTime <- gsub("T", " ", neon_data_sub$startDateTime)
neon_data_sub$startDateTime <- as.POSIXct(neon_data_sub$startDateTime, format = "%Y-%m-%d %H:%M:%OS")
y <- list(title = value)
assign(paste0(dp$data[[i]], "_plot"),
plot_ly(data = neon_data_sub, x = ~startDateTime, y = ~neon_data_sub[, value], type = "scatter", color = ~verticalPosition, mode = "markers") %>%
layout(yaxis = y))
SR_plot
boxplot(neon_data_sub$shortRadMean)
boxplot(max(neon_data_sub$shortRadMean))
library(esquisse)
esquisser()
neon_data_sub$day <- ymd(neon_data_sub$startDateTime)
neon_data_sub$day <- gsub("[[:digit:]]:*$, "", neon_data_sub$startDateTime)
neon_data_sub$day <- gsub("[[:digit:]]:*$", "", neon_data_sub$startDateTime)
View(neon_data_sub)
neon_data_sub$day <- gsub("[[:digit:]]:[[:digit:]]*$", "", neon_data_sub$startDateTime)
View(neon_data_sub)
neon_data_sub$day <- gsub("[[:digit:]]*:[[:digit:]]*$", "", neon_data_sub$startDateTime)
View(neon_data_sub)
neon_data_sub$day <- gsub("[[:digit:]]{3}$", "", neon_data_sub$startDateTime)
View(neon_data_sub)
neon_data_sub$day <- gsub("[[:digit:]]*{3}", "", neon_data_sub$startDateTime)
View(neon_data_sub)
neon_data_sub$day <- gsub("[[:digit:]]:*{3}", "", neon_data_sub$startDateTime)
View(neon_data_sub)
neon_data_sub$day <- gsub("[[:digit:]]:{3}", "", neon_data_sub$startDateTime)
View(neon_data_sub)
neon_data_sub$day <- gsub("[[:digit:]]*:{3}", "", neon_data_sub$startDateTime)
View(neon_data_sub)
neon_data_sub$day <- gsub("[[:digit:]]*:{2}", "", neon_data_sub$startDateTime)
View(neon_data_sub)
neon_data_sub$day <- gsub("[[:digit:]]:{2}", "", neon_data_sub$startDateTime)
View(neon_data_sub)
neon_data_sub$day <- gsub("[[:digit:]]:*{2}", "", neon_data_sub$startDateTime)
View(neon_data_sub)
neon_data_sub$day <- gsub("[[:digit:]]:.*, "", neon_data_sub$startDateTime)
neon_data_sub$day <- gsub("[[:digit:]]:.*", "", neon_data_sub$startDateTime)
neon_data_sub$day <- gsub("[:digit:]:.*", "", neon_data_sub$startDateTime)
View(neon_data_sub)
neon_data_sub$day <- gsub("[:digit:]*:.*", "", neon_data_sub$startDateTime)
View(neon_data_sub)
neon_data_sub$day <- gsub("[:digit:]+:.*", "", neon_data_sub$startDateTime)
View(neon_data_sub)
neon_data_sub$day <- gsub("[:digit:]*:.$*", "", neon_data_sub$startDateTime)
View(neon_data_sub)
neon_data_sub$day <- gsub("^[:digit:]*:.$*", "", neon_data_sub$startDateTime)
View(neon_data_sub)
neon_data_sub$day <- gsub("^[:digit:]*:.*", "", neon_data_sub$startDateTime)
View(neon_data_sub)
neon_data_sub$day <- gsub("[:digit:]*:.*", "", neon_data_sub$startDateTime)
neon_data_sub$day <- substr(neon_data_sub$startDateTime, 1, nchar(neon_data_sub$startDateTime)-9)
View(neon_data_sub)
neon_data_sub$day <- substr(neon_data_sub$startDateTime, 1, nchar(neon_data_sub$startDateTime)-0)
View(neon_data_sub)
neon_data_sub %>%
group_by(day) %>%
summarize(max(shortRadMean))
library(dplyr)
neon_data_sub %>%
group_by(day) %>%
summarize(max(shortRadMean))
q <- neon_data_sub %>%
group_by(day) %>%
summarize(max(shortRadMean))
plot(q$day, q$`max(shortRadMean`)
View(q)
plot(q$day, q$`max(shortRadMean)`)
plot(q$day, q$`max(shortRadMean)`, na.rm=TRUE)
esquisser()
View(q)
ggplot(q) +
aes(x = day, y = shortRadMean) +
geom_point(color = "#0c4c8a") +
theme_minimal()
ggplot(q) +
aes(x = day, y = max(shortRadMean)) +
geom_point(color = "#0c4c8a") +
theme_minimal()
ggplot(q) +
aes(x = day, y = `max(shortRadMean)`) +
geom_point(color = "#0c4c8a") +
theme_minimal()
boxplot(q$`max(shortRadMean)`)
q <- neon_data_sub %>%
group_by(day) %>%
summarize(sum(shortRadMean))
boxplot(q$`max(shortRadMean)`)
View(q)
boxplot(q$`sum(shortRadMean)`)
colnames(q[, 2]) <- "total_RadMean"
esquisser()
colnames(q[2]) <- "total_RadMean"
View(q)
colnames(q[2])
colnames(q[2]) <- "total_RadMean"
View(q)
View(q)
library(data.table)
q <- neon_data_sub %>%
group_by(day) %>%
summarize(total_Rad = sum(shortRadMean))
boxplot(q$total_Rad)
esquisser()
View(q)
esquisser()
rep(2018, 4)
date <- data.frame("year" = c(rep(2018, 4), rep(2017, 4), rep(2016, 4), rep(2015, 4),
"month" = c(rep(4:7, 4))))
View(date)
date <- data.frame("year" = c(rep(2018, 4), rep(2017, 4), rep(2016, 4), rep(2015, 4)),
"month" = c(rep(4:7, 4)))
View(date)
date <- data.frame("year" = c(rep(2018, 4), rep(2017, 4), rep(2016, 4), rep(2015, 4)),
"month" = c(rep(5:8, 4)))
ggplot(q) +
aes(x = day, y = total_Rad) +
geom_point(color = "#0c4c8a") +
theme_minimal()
