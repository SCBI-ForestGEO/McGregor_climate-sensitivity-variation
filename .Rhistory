coeff <- rbind(r,coeff)
coeff_list[[paste0("coeff_", names(model_df[j]))]] <- coeff
}
if (names(lmm_all[z]) %in% var_aic$Modnames){
#run the best model alone with REML=TRUE
fit1 <- lmer(formula_vec[[z]], data = model_df[[j]], REML=FALSE,
control = lmerControl(optimizer ="Nelder_Mead"))
#get coefficients and put in table
coeff <- data.frame(coef(summary(fit1))[ , "Estimate"]) ##2
coeff[,2] <- rownames(coeff)
coeff[,1] <- round(coeff[,1], 3)
coeff$comb <- paste0(coeff[,2], " (", coeff[,1], ")")
for (g in seq(along=1:nrow(top))){
if(rownames(top)[[g]] == z){
top$coef[[g]] <- paste(unlist(coeff$comb), collapse=", ")
}
}
}
}
#INDIVIDUAL YEARS
} else if (j == i){
response <- "resist.value"
effects <- best_mod_full_year
#create all combinations of random / fixed effects
effects_comb <-
unlist( sapply( seq_len(length(effects)),
function(i) {
apply( combn(effects,i), 2, function(x) paste(x, collapse = "+"))
}))
var_comb <- expand.grid(response, effects_comb)
var_comb <- var_comb[grepl("1", var_comb$Var2), ] #only keep in fixed/random combos
var_comb$Var2 <- as.character(var_comb$Var2)
#can't have height and TWI separately when the interaction is in
for (q in seq(along=var_comb$Var2)){
cell <- var_comb$Var2[[q]]
if(grepl("\\*", cell)){
if(grepl("\\+TWI.ln", cell)){
var_comb$Var2[[q]] <- gsub("\\+TWI.ln", "", var_comb$Var2[[q]])
}
if(grepl("\\+height.ln.m", cell)){
var_comb$Var2[[q]] <- gsub("\\+height.ln.m\\+", "\\+", var_comb$Var2[[q]])
}
}
}
var_comb <- unique(var_comb[,1:2])
formula_vec <- sprintf("%s ~ %s", var_comb$Var1, var_comb$Var2)
lmm_all <- lapply(formula_vec, function(x){
fit1 <- lmer(x, data = model_df[[j]], REML=FALSE,
control = lmerControl(optimizer ="Nelder_Mead"))
return(fit1)
})
names(lmm_all) <- formula_vec
var_aic <- aictab(lmm_all, second.ord=TRUE, sort=TRUE) #rank based on AICc
var_aic$Modnames <- as.character(var_aic$Modnames)
best_mod_traits$best_model[[i]] <- var_aic$Modnames[[1]]
#get all mods <2 dAIC
var_aic <- var_aic[var_aic$Delta_AICc <= 2, ]
top <- var_aic[,c(1,4)]
top$Delta_AICc <- round(top$Delta_AICc, 2)
top$scenario <- mods[[i]]
top$coef <- NA
for (z in seq(along = lmm_all)){
if (names(lmm_all[z]) == var_aic$Modnames[[1]]){
#run the best model alone with REML=TRUE
fit1 <- lmer(formula_vec[[z]], data = model_df[[j]], REML=TRUE,
control = lmerControl(optimizer ="Nelder_Mead"))
#get coefficients and put in table
coeff <- data.frame(coef(summary(fit1))[ , "Estimate"]) ##2
coeff[,2] <- rownames(coeff)
coeff[,1] <- round(coeff[,1], 3)
colnames(coeff) <- c(names(model_df[j]), "model_var")
#put r2 in table
r <- rsquared(fit1) #gives R^2 values for models. "Marginal" is the R^2 for just the fixed effects, "Conditional" is the R^2 for everything.
r <- data.frame(r[,6])
colnames(r) <- names(model_df[j])
r$model_var <- "r^2"
r[,1] <- round(r[,1], 2)
coeff <- rbind(r,coeff)
coeff_list[[paste0("coeff_", names(model_df[j]))]] <- coeff
}
if (names(lmm_all[z]) %in% var_aic$Modnames){
#run the best model alone with REML=TRUE
fit1 <- lmer(formula_vec[[z]], data = model_df[[j]], REML=FALSE,
control = lmerControl(optimizer ="Nelder_Mead"))
#get coefficients and put in table
coeff <- data.frame(coef(summary(fit1))[ , "Estimate"]) ##2
coeff[,2] <- rownames(coeff)
coeff[,1] <- round(coeff[,1], 3)
coeff$comb <- paste0(coeff[,2], " (", coeff[,1], ")")
for (g in seq(along=1:nrow(top))){
if(rownames(top)[[g]] == z){
top$coef[[g]] <- paste(unlist(coeff$comb), collapse=", ")
}
}
}
}
}
}
top_models <- rbind(top_models, top)
}
View(top_models)
top_models$Modnames
write.csv(best_mod_traits, "manuscript/tables_figures/tested_traits_best.csv", row.names=FALSE)
write.csv(top_models, "manuscript/tables_figures/top_models_dAIC.csv", row.names=FALSE)
duplicated(top_models$Modnames)
trees_all <- read.csv("tables_figures/trees_all.csv", stringsAsFactors = FALSE)
trees_all <- read.csv("manuscript/tables_figures/trees_all.csv", stringsAsFactors = FALSE)
View(trees_all)
traits <- trees_all[,c(2,6:10)]
traits <- traits[unique(traits$sp), ]
View(traits)
traits <- trees_all[,c(2,6:10)]
traits <- traits[!duplicated(traits$sp), ]
View(traits)
source('D:/Dropbox (Smithsonian)/Github_Ian/McGregor_climate-sensitivity-variation/scripts/tables_for_manuscript.R', echo=TRUE)
table2 <- merge(table2, traits, by=sp)
View(table2)
View(traits)
View(table2)
?merge
table2 <- base::merge(table2, traits, by=sp)
table2 <- base::merge(table2, traits, by="sp")
View(table2)
table2[,c(8:11)] <- round(table2[,c(8:11)], 2)
View(species)
View(table)
View(species)
dbh_cored <- species[,c(1:9)]
View(dbh_cored)
dbh_cored <- species %>%
group_by(sp) %>%
summarize(mean_dbh = mean(dbh2018)) %>%
summarize(range_dbh = max(dbh2018) - min(dbh2018))
dbh_cored <- dbh_cored %>%
group_by(sp) %>%
summarize(mean_dbh = mean(dbh2018)) %>%
summarize(range_dbh = max(dbh2018) - min(dbh2018))
?summarize
dbh_cored %>%
group_by(sp) %>%
summarize(mean_dbh = mean(dbh2018)) %>%
summarize(range_dbh = max(dbh2018) - min(dbh2018))
dbh_cored <-
dbh_cored %>%
group_by(sp) %>%
summarize(mean = mean(dbh2018)) %>%
summarize(range = max(dbh2018) - min(dbh2018))
dbh_cored <-
dbh_cored %>%
group_by(sp) %>%
summarize(mean = mean(dbh2018, na.rm=TRUE)) %>%
summarize(range = max(dbh2018) - min(dbh2018))
dbh_cored$dbh2018
library(RCurl)
library(dplyr)
library(data.table)
species <- read.csv("data/core_list_for_neil.csv", stringsAsFactors = FALSE)
table <- species[, c(1:3,6,17)]
positions <- read.csv(text=getURL("https://raw.githubusercontent.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/master/tree_dimensions/tree_crowns/cored_dendroband_crown_position_data/dendro_cored_full.csv"))
table$position_all <- positions$crown.position[match(table$tag, positions$tag)]
table$position_all <- gsub("D", "dominant", table$position_all)
table$position_all <- gsub("C", "co-dominant", table$position_all)
table$position_all <- gsub("I", "intermediate", table$position_all)
table$position_all <- gsub("S", "suppressed", table$position_all)
table1 <- table %>%
group_by(sp) %>%
summarize(n_cores=n())
table2 <- table %>%
group_by(sp, position_all) %>%
summarize(count=n())
table2 <- spread(table2, key=position_all, value=count)
setnames(table2, old="<NA>", new="prior dead")
table2$n_cores <- table1$n_cores[match(table2$sp, table1$sp)]
table2 <- table2[, c(1,7,3,2,4:6)]
table2 <- table2[!table2$sp %in% c("frni", "pist"), ]
#bring in trait values
trees_all <- read.csv("manuscript/tables_figures/trees_all.csv", stringsAsFactors = FALSE)
traits <- trees_all[,c(2,6:10)]
traits <- traits[!duplicated(traits$sp), ]
table2 <- merge(table2, traits, by="sp")
table2[,c(8:11)] <- round(table2[,c(8:11)], 2)
#bring in mean DBH and DBH range for each species
dbh_cored <- species[,c(1:9)]
library(tidyr)
#Table 2 ####
library(RCurl)
library(dplyr)
library(tidyr)
library(data.table)
species <- read.csv("data/core_list_for_neil.csv", stringsAsFactors = FALSE)
table <- species[, c(1:3,6,17)]
positions <- read.csv(text=getURL("https://raw.githubusercontent.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/master/tree_dimensions/tree_crowns/cored_dendroband_crown_position_data/dendro_cored_full.csv"))
table$position_all <- positions$crown.position[match(table$tag, positions$tag)]
table$position_all <- gsub("D", "dominant", table$position_all)
table$position_all <- gsub("C", "co-dominant", table$position_all)
table$position_all <- gsub("I", "intermediate", table$position_all)
table$position_all <- gsub("S", "suppressed", table$position_all)
table1 <- table %>%
group_by(sp) %>%
summarize(n_cores=n())
table2 <- table %>%
group_by(sp, position_all) %>%
summarize(count=n())
table2 <- spread(table2, key=position_all, value=count)
setnames(table2, old="<NA>", new="prior dead")
table2$n_cores <- table1$n_cores[match(table2$sp, table1$sp)]
table2 <- table2[, c(1,7,3,2,4:6)]
table2 <- table2[!table2$sp %in% c("frni", "pist"), ]
#bring in trait values
trees_all <- read.csv("manuscript/tables_figures/trees_all.csv", stringsAsFactors = FALSE)
traits <- trees_all[,c(2,6:10)]
traits <- traits[!duplicated(traits$sp), ]
table2 <- merge(table2, traits, by="sp")
table2[,c(8:11)] <- round(table2[,c(8:11)], 2)
#bring in mean DBH and DBH range for each species
dbh_cored <- species[,c(1:9)]
dbh_cored <-
dbh_cored %>%
group_by(sp) %>%
summarize(mean = mean(dbh2018, na.rm=TRUE)) %>%
summarize(range = max(dbh2018) - min(dbh2018))
dbh_cored <-
dbh_cored %>%
group_by(sp) %>%
dplyr::summarize(mean = mean(dbh2018, na.rm=TRUE)) %>%
dplyr::summarize(range = max(dbh2018) - min(dbh2018))
dbh_cored %>%
group_by(sp) %>%
dplyr::summarize(mean = mean(dbh2018, na.rm=TRUE)) %>%
dplyr::summarize(range = max(dbh2018) - min(dbh2018))
dbh_cored %>%
group_by(sp) %>%
summarize(mean = mean(dbh_cored$dbh2018)) %>%
summarize(range = max(dbh2018) - min(dbh2018))
dbh_cored %>%
group_by(sp) %>%
summarize(mean = mean(dbh_cored$dbh2018)) %>%
summarize(range = max(dbh_cored$dbh2018) - min(dbh_cored$dbh2018))
dbh_cored <- dbh_cored %>%
group_by(sp) %>%
summarize(mean = mean(dbh_cored$dbh2018)) %>%
summarize(range = max(dbh_cored$dbh2018) - min(dbh_cored$dbh2018))
dbh_cored <- species[,c(1:9)]
dbh_cored <- dbh_cored %>%
group_by(dbh_cored$sp) %>%
summarize(mean = mean(dbh_cored$dbh2018)) %>%
summarize(range = max(dbh_cored$dbh2018) - min(dbh_cored$dbh2018))
View(dbh_cored)
dbh_cored <- species[,c(1:9)]
#Table 2 ####
library(RCurl)
library(tidyr)
library(dplyr)
library(data.table)
#Table 2 ####
library(RCurl)
library(tidyr)
library(dplyr)
library(data.table)
#Table 2 ####
library(RCurl)
library(tidyr)
library(data.table)
library(dplyr)
species <- read.csv("data/core_list_for_neil.csv", stringsAsFactors = FALSE)
table <- species[, c(1:3,6,17)]
positions <- read.csv(text=getURL("https://raw.githubusercontent.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/master/tree_dimensions/tree_crowns/cored_dendroband_crown_position_data/dendro_cored_full.csv"))
table$position_all <- positions$crown.position[match(table$tag, positions$tag)]
table$position_all <- gsub("D", "dominant", table$position_all)
table$position_all <- gsub("C", "co-dominant", table$position_all)
table$position_all <- gsub("I", "intermediate", table$position_all)
table$position_all <- gsub("S", "suppressed", table$position_all)
table1 <- table %>%
group_by(sp) %>%
summarize(n_cores=n())
table2 <- table %>%
group_by(sp, position_all) %>%
summarize(count=n())
table2 <- spread(table2, key=position_all, value=count)
setnames(table2, old="<NA>", new="prior dead")
table2$n_cores <- table1$n_cores[match(table2$sp, table1$sp)]
table2 <- table2[, c(1,7,3,2,4:6)]
table2 <- table2[!table2$sp %in% c("frni", "pist"), ]
#bring in trait values
trees_all <- read.csv("manuscript/tables_figures/trees_all.csv", stringsAsFactors = FALSE)
traits <- trees_all[,c(2,6:10)]
traits <- traits[!duplicated(traits$sp), ]
table2 <- merge(table2, traits, by="sp")
table2[,c(8:11)] <- round(table2[,c(8:11)], 2)
dbh_cored <- species[,c(1:9)]
dbh_cored <- dbh_cored %>%
group_by(sp) %>%
summarize(mean = mean(dbh2018)) %>%
summarize(range = max(dbh2018) - min(dbh2018))
cars <- mtcars
mtcars %>%
group_by(cyl) %>%
summarise(mean = mean(disp), n = n())
View(cars)
dbh_cored <- dbh_cored %>%
group_by(sp) %>%
summarize(mean = mean("dbh2018")) %>%
summarize(range = max("dbh2018") - min("dbh2018"))
dbh_cored <- dbh_cored %>%
group_by(sp) %>%
summarize(mean = mean(dbh2018)) %>%
summarize(range = max(dbh2018) - min(dbh2018))
dbh_cored <- dbh_cored %>%
group_by(sp) %>%
summarize(mean = mean(dbh2018)) %>%
summarize(range = max(dbh2018) - min(dbh2018))
detach("package:dplyr", unload = TRUE)
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
install.packages("dplyr")
library(dplyr)
install.packages("dplyr")
library(RCurl)
library(tidyr)
library(data.table)
library(dplyr)
species <- read.csv("data/core_list_for_neil.csv", stringsAsFactors = FALSE)
table <- species[, c(1:3,6,17)]
positions <- read.csv(text=getURL("https://raw.githubusercontent.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/master/tree_dimensions/tree_crowns/cored_dendroband_crown_position_data/dendro_cored_full.csv"))
table$position_all <- positions$crown.position[match(table$tag, positions$tag)]
table$position_all <- gsub("D", "dominant", table$position_all)
table$position_all <- gsub("C", "co-dominant", table$position_all)
table$position_all <- gsub("I", "intermediate", table$position_all)
table$position_all <- gsub("S", "suppressed", table$position_all)
table1 <- table %>%
group_by(sp) %>%
summarize(n_cores=n())
table2 <- table %>%
group_by(sp, position_all) %>%
summarize(count=n())
table2 <- spread(table2, key=position_all, value=count)
setnames(table2, old="<NA>", new="prior dead")
table2$n_cores <- table1$n_cores[match(table2$sp, table1$sp)]
table2 <- table2[, c(1,7,3,2,4:6)]
table2 <- table2[!table2$sp %in% c("frni", "pist"), ]
#bring in trait values
trees_all <- read.csv("manuscript/tables_figures/trees_all.csv", stringsAsFactors = FALSE)
traits <- trees_all[,c(2,6:10)]
traits <- traits[!duplicated(traits$sp), ]
table2 <- merge(table2, traits, by="sp")
table2[,c(8:11)] <- round(table2[,c(8:11)], 2)
#bring in mean DBH and DBH range for each species
dbh_cored <- species[,c(1:9)]
View(dbh_cored)
dbh_cored <- dbh_cored %>%
group_by(sp) %>%
summarize(mean = mean(dbh2018)) %>%
summarize(range = max(dbh2018) - min(dbh2018))
head(dbh_cored)
str(dbh_cored)
mean(dbh_cored$dbh2018)
detach.packages("tidyr")
detach("package:tidyr", unload = TRUE)
dbh_cored <- dbh_cored %>%
group_by(sp) %>%
summarize(mean = mean(dbh2018)) %>%
summarize(range = max(dbh2018) - min(dbh2018))
table1 <- table %>%
group_by(sp) %>%
summarize(n_cores=n())
table2 <- table %>%
group_by(sp, position_all) %>%
summarize(count=n())
head(table)
install.packges('tidyr')
install.packages('tidyr')
install.packages("tidyr")
table1 <- table %>%
group_by(sp) %>%
summarize(n_cores=n())
library(dplyr)
table1 <- table %>%
group_by(sp) %>%
summarize(n_cores=n())
table1
dbh_cored <- dbh_cored %>%
group_by(sp)
dbh_cored <- dbh_cored %>%
group_by(sp) %>%
summarize(range = max(dbh2018) - min(dbh2018))
dbh_cored
dbh_cored <- dbh_cored %>%
group_by(sp) %>%
summarize(mean = mean(dbh2018))
dbh_cored <- dbh_cored %>%
group_by(sp) %>%
summarize(meyh = mean(dbh2018))
dbh_cored <- dbh_cored %>%
group_by(sp) %>%
summarise(mean = mean(dbh2018))
dbh_cored <- dbh_cored %>%
group_by(sp) %>%
summarise(mean = mean(dbh2018))
dbh_cored <- dbh_cored %>%
group_by(sp) %>%
summarize(range = max(dbh2018) - min(dbh2018))
dbh_cored <- dbh_cored %>%
group_by(sp) %>%
summarise(range = max(dbh2018) - min(dbh2018))
dbh_cored <- dbh_cored %>%
+   group_by(sp) %>%
+   summarize(range = max(dbh2018) - min(dbh2018))
dbh_cored <- dbh_cored %>%
group_by(sp) %>%
summarize(range = max(dbh2018) - min(dbh2018))
dbh_cored <- dbh_cored %>%
group_by(sp) %>%
summarize(range = max(dbh2018))
mtcars %>%
group_by(cyl) %>%
summarise(mean = mean(disp), n = n())
dbh_cored <- dbh_cored %>%
group_by(sp) %>%
summarise(mean = mean(dbh2018)) %>%
summarise(range = max(dbh2018) - min(dbh2018))
head(dbh_cored)
dbh_cored <- species[,c(1:9)]
dbh_cored2 <- dbh_cored %>%
group_by(sp) %>%
summarise(mean = mean(dbh2018)) %>%
summarise(range = max(dbh2018) - min(dbh2018))
dbh_cored2 <- dbh_cored %>%
group_by(sp) %>%
summarise(mean = mean(dbh2018))
dbh_cored2 <- dbh_cored %>%
group_by(sp) %>%
summarise(range = max(dbh2018) - min(dbh2018))
dbh_cored2 <- dbh_cored %>%
group_by(sp) %>%
summarise(range = max(dbh2018) - min(dbh2018)) %>%
summarise(mean = mean(dbh2018))
dbh_cored2 <- dbh_cored %>%
group_by(sp) %>%
summarise(c(range = max(dbh2018) - min(dbh2018),mean = mean(dbh2018)))
dbh_cored2 <- dbh_cored %>%
group_by(sp) %>%
summarise(range = max(dbh2018) - min(dbh2018))
dbh_cored2 <- dbh_cored %>%
group_by(sp) %>%
summarise(mean = mean(dbh2018))
dbh_cored2 <- dbh_cored %>%
group_by(sp) %>%
summarise(mean = mean(dbh2018)) %>%
summarise(range = max(dbh2018) - min(dbh2018))
dbh_cored2 <- dbh_cored %>%
group_by(sp) %>%
summarise(mean = stats::mean(dbh2018)) %>%
summarise(range = stats::max(dbh2018) - stats::min(dbh2018))
mean
?mean
dbh_cored2 <- dbh_cored %>%
group_by(sp) %>%
summarise(mean = base::mean(dbh2018)) %>%
summarise(range = base::max(dbh2018) - base::min(dbh2018))
?aggregate
aggregate(dbh_cored, by = list("sp"), mean)
aggregate(dbh_cored, by = list("sp"), mean("dbh2018"))
aggregate(dbh_cored[,c(2,9)], by = list("sp"), "mean")
detach(package::plyr)
detach(package:plyr)
library(tidyr)
detach(package:tidyr)
dbh_cored2 <- dbh_cored %>%
group_by(sp) %>%
summarise(mean = base::mean(dbh2018)) %>%
summarise(range = base::max(dbh2018) - base::min(dbh2018))
library(dplyr)
dbh_cored2 <- dbh_cored %>%
group_by(sp) %>%
summarise(mean = base::mean(dbh2018)) %>%
summarise(range = base::max(dbh2018) - base::min(dbh2018))
trees_all <- read.csv("tables_figures/trees_all.csv", stringsAsFactors = FALSE)
dbh_cored2 <- dbh_cored %>%
group_by(sp) %>%
summarise(mean = mean(dbh2018)) %>%
summarise(range = max(dbh2018) - min(dbh2018))
dbh_cored2 <- dbh_cored %>%
group_by(sp) %>%
summarise(mean = mean(dbh2018)) %>%
group_by(sp) %>%
summarise(range = max(dbh2018) - min(dbh2018))
dbh_cored2 <- dbh_cored %.%
group_by(sp) %.%
summarise(mean = mean(dbh2018)) %.%
summarise(range = max(dbh2018) - min(dbh2018))
dbh_cored2 <- dbh_cored %>%
group_by(sp) %>%
summarise(t1 = mean(dbh2018)) %>%
summarise(t2 = max(dbh2018) - min(dbh2018))
dbh_cored %>%
group_by(sp) %>%
summarise(mean = mean(dbh2018)) %>%
summarise(range = max(dbh2018) - min(dbh2018))
dbh_cored2 <- dbh_cored %>%
group_by(sp) %>%
summarise(mean = mean(dbh2018))
dbh_cored3 <- dbh_cored %>%
group_by(sp) %>%
summarise(range = max(dbh2018) - min(dbh2018))
aggregate(dbh_cored[,c(2,9)], by = list(sp), "mean")
aggregate(dbh_cored[,c(2,9)], by = list(dbh_cored$sp), "mean")
warnings()
aggregate(dbh_cored[,c(2,9)], by = list(dbh_cored$sp, dbh_cored$dbh2018), "mean")
?range
aggregate(dbh_cored[,c(2,9)], by = list(dbh_cored$sp), c("mean", "range"))
