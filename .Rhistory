var <- sum_mod_traits$variable[[i]]
models <- c(null_mod, test_mod)
if(var %in% c("year", "dbh.ln.cm", "height.ln.m", "elev.m", "distance.ln.m")){
lmm_all <- lapply(models, function(x){
fit1 <- lmer(x, data = trees_all_bio, REML=FALSE,
control = lmerControl(optimizer ="Nelder_Mead"))
return(fit1)
})
} else {
lmm_all <- lapply(models, function(x){
fit1 <- lmer(x, data = trees_all_full, REML=FALSE,
control = lmerControl(optimizer ="Nelder_Mead"))
return(fit1)
})
}
names(lmm_all) <- models
#sort=FALSE because we want the order to be consistent (in this case, null first, tested second)
var_aic <- aictab(lmm_all, second.ord=TRUE, sort=FALSE) #rank based on AICc
#put AIC value in table (null minus tested)
sum_mod_traits$dAIC_variable[[i]] <- var_aic$AICc[[1]] - var_aic$AICc[[2]]
sum_mod_traits$dAIC_variable[[i]] <- round(sum_mod_traits$dAIC_variable[[i]], 3)
for (z in seq(along = lmm_all)){
if (names(lmm_all[z]) == test_mod){
coeff <- data.frame(coef(summary(lmm_all[[z]]))[ , "Estimate"]) ##2
coeff[,2] <- rownames(coeff)
colnames(coeff) <- c("value", "model_var")
coeff$value <- round(coeff$value, 3)
coeff$combo <- paste0(coeff$model_var, " (", coeff$value, ")")
coeff <- coeff[grepl(sum_mod_traits$variable[[i]], coeff$combo), ]
coeff_vec <- coeff$combo
coeff_all <- rbind(coeff_all, coeff)
#put coefficients in table
sum_mod_traits$coef_direction[[i]] <- ifelse(any(coeff$value < 0), "-", "+")
sum_mod_traits$coef_variable[[i]] <- paste(coeff_vec, collapse = ", ")
}
}
}
i=8
coeff_all <- NULL
null_mod <- sum_mod_traits$null_model[[i]]
test_mod <- sum_mod_traits$tested_model[[i]]
var <- sum_mod_traits$variable[[i]]
models <- c(null_mod, test_mod)
lmm_all <- lapply(models, function(x){
fit1 <- lmer(x, data = trees_all_full, REML=FALSE,
control = lmerControl(optimizer ="Nelder_Mead"))
return(fit1)
})
names(lmm_all) <- models
#sort=FALSE because we want the order to be consistent (in this case, null first, tested second)
var_aic <- aictab(lmm_all, second.ord=TRUE, sort=FALSE) #rank based on AICc
View(var_aic)
##6b. determine the best full model ####
##all contenders here are those that had dAIC > 2 from 6ai
contenders <- sum_mod_traits[sum_mod_traits$dAIC_variable < 2 & !sum_mod_traits$variable == "dbh.ln.cm", ]
View(contenders)
##6b. determine the best full model ####
##all contenders here are those that had dAIC > 2 from 6ai
contenders <- sum_mod_traits[sum_mod_traits$dAIC_variable > 2 & !sum_mod_traits$variable == "dbh.ln.cm", ]
View(contenders)
##6b. determine the best full model ####
##all contenders here are those that had dAIC > 2 from 6ai
contenders <- sum_mod_traits[sum_mod_traits$dAIC_variable > 2 & !sum_mod_traits$variable %in% c("dbh.ln.cm", "year"), ]
View(contenders)
best_mod_traits[, c("null_model_year", "tested_model_year", "dAIC_1964.1966", "coef_1964.1966", "coef_var_1964.1966", "dAIC_1977", "coef_1977", "coef_var_1977", "dAIC_1999", "coef_1999", "coef_var_1999")] <- NA
sum_mod_traits[, c("null_model_year", "tested_model_year", "dAIC_1964.1966", "coef_1964.1966", "coef_var_1964.1966", "dAIC_1977", "coef_1977", "coef_var_1977", "dAIC_1999", "coef_1999", "coef_var_1999")] <- NA
View(sum_mod_traits)
##6aiii. test predictions for paper and put in table (all years) ####
sum_mod_traits <- data.frame(
"prediction" = c(1.1, 2.1, 2.2, 3.1, 3.2, 3.3, 3.4, 4.1, 4.2, 4.3, 4.4, 4.5),
"variable" = c("year", "dbh.ln.cm", "height.ln.m","elev.m", "distance.ln.m", "position_all",  "TWI", "rp", "PLA_dry_percent", "LMA_g_per_m2", "mean_TLP_Mpa", "WD_g_per_cm3"),
"variable_description" = c("drought.year", "ln[DBH]", "ln[height]", "elevation", "stream.distance", "crown.position", "topographic.wetness.index", "ring.porosity", "percent.leaf.area", "leaf.mass.area", "mean.turgor.loss.point", "wood.density"),
"null_model" =
c("resist.value ~ (1|sp/tree)",
"resist.value ~ year+(1|sp/tree)",
"resist.value ~ year+(1|sp/tree)",
"resist.value ~ height.ln.m+year+(1|sp/tree)",
"resist.value ~ height.ln.m+year+(1|sp/tree)",
"resist.value ~ height.ln.m+year+(1|sp/tree)",
"resist.value ~ height.ln.m+year+(1|sp/tree)",
"resist.value ~ height.ln.m+year+(1|sp/tree)",
"resist.value ~ height.ln.m+year+(1|sp/tree)",
"resist.value ~ height.ln.m+year+(1|sp/tree)",
"resist.value ~ height.ln.m+year+(1|sp/tree)",
"resist.value ~ height.ln.m+year+(1|sp/tree)"),
"tested_model" = NA)
sum_mod_traits[, c("null_model_year", "tested_model_year", "dAIC_all", "coef_all", "coef_var_all", "dAIC_1964.1966", "coef_1964.1966", "coef_var_1964.1966", "dAIC_1977", "coef_1977", "coef_var_1977", "dAIC_1999", "coef_1999", "coef_var_1999")] <- NA
View(sum_mod_traits)
# change factor columns to character
sum_mod_traits <- sum_mod_traits %>% mutate_if(is.factor, as.character)
sum_mod_traits$tested_model <- paste0(sum_mod_traits$null_model, "+", sum_mod_traits$variable)
null_mod <- sum_mod_traits$null_model[[i]] #all years
var <- sum_mod_traits$variable[[i]]
##6aiii. test predictions for paper and put in table (all years) ####
sum_mod_traits <- data.frame(
"prediction" = c(1.1, 2.1, 2.2, 3.1, 3.2, 3.3, 3.4, 4.1, 4.2, 4.3, 4.4, 4.5),
"variable" = c("year", "dbh.ln.cm", "height.ln.m","elev.m", "distance.ln.m", "position_all",  "TWI", "rp", "PLA_dry_percent", "LMA_g_per_m2", "mean_TLP_Mpa", "WD_g_per_cm3"),
"variable_description" = c("drought.year", "ln[DBH]", "ln[height]", "elevation", "stream.distance", "crown.position", "topographic.wetness.index", "ring.porosity", "percent.leaf.area", "leaf.mass.area", "mean.turgor.loss.point", "wood.density"),
"null_model" =
c("resist.value ~ (1|sp/tree)",
"resist.value ~ year+(1|sp/tree)",
"resist.value ~ year+(1|sp/tree)",
"resist.value ~ height.ln.m+year+(1|sp/tree)",
"resist.value ~ height.ln.m+year+(1|sp/tree)",
"resist.value ~ height.ln.m+year+(1|sp/tree)",
"resist.value ~ height.ln.m+year+(1|sp/tree)",
"resist.value ~ height.ln.m+year+(1|sp/tree)",
"resist.value ~ height.ln.m+year+(1|sp/tree)",
"resist.value ~ height.ln.m+year+(1|sp/tree)",
"resist.value ~ height.ln.m+year+(1|sp/tree)",
"resist.value ~ height.ln.m+year+(1|sp/tree)"),
"tested_model" = NA)
sum_mod_traits[, c("null_model_year", "tested_model_year", "dAIC_all", "coef_all", "coef_var_all", "dAIC_1964.1966", "coef_1964.1966", "coef_var_1964.1966", "dAIC_1977", "coef_1977", "coef_var_1977", "dAIC_1999", "coef_1999", "coef_var_1999")] <- NA
# change factor columns to character
sum_mod_traits <- sum_mod_traits %>% mutate_if(is.factor, as.character)
i=1
null_mod <- sum_mod_traits$null_model[[i]] #all years
var <- sum_mod_traits$variable[[i]]
#if the variable is in the null model, then take it out, otherwise add it in
sum_mod_traits$tested_model[[i]] <-
ifelse(grepl(var, null_mod),
gsub(paste0(var, "[[:punct:]]"), "", sum_mod_traits$null_model[[i]]),
paste0(null_mod, "+", var))
sum_mod_traits$tested_model_year[[i]] <-
gsub("year\\+|/tree", "", sum_mod_traits$tested_model[[i]])
sum_mod_traits$null_model_year[[i]] <-
gsub("year\\+|/tree", "", sum_mod_traits$null_model[[i]])
test_mod <- sum_mod_traits$tested_model[[i]] #all years
test_mod_yr <- sum_mod_traits$tested_model_year[[i]] #individual years
null_mod_yr <- sum_mod_traits$null_model_year[[i]] #individual years
models <- c(null_mod, test_mod) #all years
models_yr <- c(null_mod_yr, test_mod_yr) #ndividual years
x1966_bio <- trees_all_bio[trees_all_bio$year == 1966, ]
x1966_full <- trees_all_full[trees_all_full$year == 1966, ]
x1977_bio <- trees_all_bio[trees_all_bio$year == 1977, ]
x1977_full <- trees_all_full[trees_all_full$year == 1977, ]
x1999_bio <- trees_all_bio[trees_all_bio$year == 1999, ]
x1999_full <- trees_all_full[trees_all_full$year == 1999, ]
model_df <- list(trees_all_bio, trees_all_full, x1966_bio, x1966_full, x1977_bio, x1977_full, x1999_bio, x1999_full)
names(model_df) <- c("trees_all_bio", "trees_all_full", "x1966_bio", "x1966_full", "x1977_bio", "x1977_full", "x1999_bio", "x1999_full")
View(x1977_bio)
View(x1977_full)
setdiff(unique(trees_all_bio$tree), unique(trees_all_full$tree))
View(trees_all)
View(trees_all_full)
colnames(trees_all)
trees_all_sub <- trees_all[!colnames(trees_all) %in% c("p50.MPa", "p80.MPa", "dbh_old.mm",  "dbh_old.cm", "sap_ratio", "height.m"), ]
trees_all_sub <- trees_all[, !colnames(trees_all) %in% c("p50.MPa", "p80.MPa", "dbh_old.mm",  "dbh_old.cm", "sap_ratio", "height.m")]
View(trees_all_sub)
trees_all_sub <- trees_all_sub[complete.cases(trees_all_sub), ]
##5l. make subsets for individual years, combine all to list ####
x1966 <- trees_all_sub[trees_all_sub$year == 1966, ]
##5l. make subsets for individual years, combine all to list ####
x1966 <- trees_all_sub[trees_all_sub$year == 1966, ]
x1977 <- trees_all_sub[trees_all_sub$year == 1977, ]
x1999 <- trees_all_sub[trees_all_sub$year == 1999, ]
model_df <- list(trees_all_sub, x1966, x1977, x1999)
names(model_df) <- c("trees_all_sub", "x1966", "x1977", "x1999")
j=1
h=1
k=1
l=1
column <- colnames(sum_mod_traits[,c(8,11,14,17)][h])
column_cof <- colnames(sum_mod_traits[,c(9,12,15,18)][h])
column_cof_val <- colnames(sum_mod_traits[,c(10,13,16,19)])
column_cof_val <- colnames(sum_mod_traits[,c(10,13,16,19)][l])
j == 1 & h == 1 & k == 1 & l == 1
lmm_all <- lapply(models, function(x){
fit1 <- lmer(x, data = model_df[[j]], REML=FALSE,
control = lmerControl(optimizer ="Nelder_Mead"))
return(fit1)
})
names(lmm_all) <- models
var_aic <- aictab(lmm_all, second.ord=TRUE, sort=FALSE) #rank based on AICc
View(var_aic)
#put AIC value in table (#null - test)
sum_mod_traits[,column][[i]] <- var_aic$AICc[[1]] - var_aic$AICc[[2]]
sum_mod_traits[,column][[i]] <- round(sum_mod_traits[,column][[i]], 3)
z=1
grepl(var, null_mod)
grepl(var, test_mod)
names(lmm_all[z]) == test_mod
names(lmm_all[z])
View(lmm_all)
z=2
names(lmm_all[z]) == test_mod
coeff_all <- NULL
coeff <- data.frame(coef(summary(lmm_all[[z]]))[ , "Estimate"]) ##2
coeff[,2] <- rownames(coeff)
colnames(coeff) <- c("value", "model_var")
coeff$value <- round(coeff$value, 3)
coeff$combo <- paste0(coeff$model_var, " (", coeff$value, ")")
coeff <- coeff[grepl(sum_mod_traits$variable[[i]], coeff$combo), ]
View(coeff)
coeff_vec <- coeff$combo
coeff_all <- rbind(coeff_all, coeff)
View(coeff_all)
#put coefficients in table
sum_mod_traits$coef_direction[[i]] <- ifelse(any(coeff$value < 0), "-", "+")
sum_mod_traits$coef_variable[[i]] <- paste(coeff_vec, collapse = ", ")
#put coefficients in table
sum_mod_traits[,column_cof][[i]] <- ifelse(any(coeff$value < 0), "-", "+")
sum_mod_traits[,column_cof_val][[i]] <- paste(coeff_vec, collapse = ", ")
j=2
h=2
k=2
l=2
lmm_all <- lapply(models_yr, function(x){
fit1 <- lmer(x, data = model_df[[j]], REML=FALSE,
control = lmerControl(optimizer ="Nelder_Mead"))
return(fit1)
})
test_mod_yr <- sum_mod_traits$tested_model_year[[i]] #individual years
null_mod_yr <- sum_mod_traits$null_model_year[[i]] #individual years
models_yr <- c(null_mod_yr, test_mod_yr) #ndividual years
lmm_all <- lapply(models_yr, function(x){
fit1 <- lmer(x, data = model_df[[j]], REML=FALSE,
control = lmerControl(optimizer ="Nelder_Mead"))
return(fit1)
})
models_yr
View(x1966)
View(x1977)
View(x1999)
#obviously, the tested model of the "year" effect doesn't work over the individual years
if (i == 1){
sum_mod_traits$tested_model[[i]] <- sum_mod_traits$null_model_year
}
#obviously, the tested model of the "year" effect doesn't work over the individual years
if (i == 1){
sum_mod_traits$tested_model[[i]] <- sum_mod_traits$null_model_year[[i]]
}
#if the variable is in the null model, then take it out, otherwise add it in
sum_mod_traits$tested_model[[i]] <-
ifelse(grepl(var, null_mod),
gsub(paste0(var, "[[:punct:]]"), "", sum_mod_traits$null_model[[i]]),
paste0(null_mod, "+", var))
sum_mod_traits$null_model_year[[i]] <-
gsub("year\\+|/tree", "", sum_mod_traits$null_model[[i]])
sum_mod_traits$tested_model_year[[i]] <-
gsub("year\\+|/tree", "", sum_mod_traits$tested_model[[i]])
#obviously, the tested model of the "year" effect doesn't work over the individual years
if (i == 1){
sum_mod_traits$tested_model_year[[i]] <- sum_mod_traits$null_model_year[[i]]
}
lmm_all <- lapply(models_yr, function(x){
fit1 <- lmer(x, data = model_df[[j]], REML=FALSE,
control = lmerControl(optimizer ="Nelder_Mead"))
return(fit1)
})
test_mod <- sum_mod_traits$tested_model[[i]] #all years
test_mod_yr <- sum_mod_traits$tested_model_year[[i]] #individual years
null_mod_yr <- sum_mod_traits$null_model_year[[i]] #individual years
models <- c(null_mod, test_mod) #all years
models_yr <- c(null_mod_yr, test_mod_yr) #ndividual years
lmm_all <- lapply(models_yr, function(x){
fit1 <- lmer(x, data = model_df[[j]], REML=FALSE,
control = lmerControl(optimizer ="Nelder_Mead"))
return(fit1)
})
names(lmm_all) <- models_yr
var_aic <- aictab(lmm_all, second.ord=TRUE, sort=FALSE) #rank based on AICc
View(var_aic)
coeff <- data.frame(coef(summary(lmm_all[[z]]))[ , "Estimate"]) ##2
View(coeff)
coeff[,2] <- rownames(coeff)
colnames(coeff) <- c("value", "model_var")
coeff$value <- round(coeff$value, 3)
View(coeff)
coeff$combo <- paste0(coeff$model_var, " (", coeff$value, ")")
coeff <- coeff[grepl(sum_mod_traits$variable[[i]], coeff$combo), ]
coeff_vec <- coeff$combo
#this rbind is to get a full df showing all coefficient values from the entire for-loop
coeff_all <- rbind(coeff_all, coeff)
View(coeff_all)
if(i == 1){
sum_mod_traits[,column][[i]] <- NA
sum_mod_traits[,column_cof][[i]] <- NA
sum_mod_traits[,column_cof_val][[i]] <- NA
}
##6aiii. test predictions for paper and put in table (all years) ####
sum_mod_traits <- data.frame(
"prediction" = c(1.1, 2.1, 2.2, 3.1, 3.2, 3.3, 3.4, 4.1, 4.2, 4.3, 4.4, 4.5),
"variable" = c("year", "dbh.ln.cm", "height.ln.m","elev.m", "distance.ln.m", "position_all",  "TWI", "rp", "PLA_dry_percent", "LMA_g_per_m2", "mean_TLP_Mpa", "WD_g_per_cm3"),
"variable_description" = c("drought.year", "ln[DBH]", "ln[height]", "elevation", "stream.distance", "crown.position", "topographic.wetness.index", "ring.porosity", "percent.leaf.area", "leaf.mass.area", "mean.turgor.loss.point", "wood.density"),
"null_model" =
c("resist.value ~ (1|sp/tree)",
"resist.value ~ year+(1|sp/tree)",
"resist.value ~ year+(1|sp/tree)",
"resist.value ~ height.ln.m+year+(1|sp/tree)",
"resist.value ~ height.ln.m+year+(1|sp/tree)",
"resist.value ~ height.ln.m+year+(1|sp/tree)",
"resist.value ~ height.ln.m+year+(1|sp/tree)",
"resist.value ~ height.ln.m+year+(1|sp/tree)",
"resist.value ~ height.ln.m+year+(1|sp/tree)",
"resist.value ~ height.ln.m+year+(1|sp/tree)",
"resist.value ~ height.ln.m+year+(1|sp/tree)",
"resist.value ~ height.ln.m+year+(1|sp/tree)"),
"tested_model" = NA)
sum_mod_traits[, c("null_model_year", "tested_model_year", "dAIC_all", "coef_all", "coef_var_all", "dAIC_1964.1966", "coef_1964.1966", "coef_var_1964.1966", "dAIC_1977", "coef_1977", "coef_var_1977", "dAIC_1999", "coef_1999", "coef_var_1999")] <- NA
# change factor columns to character
sum_mod_traits <- sum_mod_traits %>% mutate_if(is.factor, as.character)
##loop to create table of individually-tested traits
coeff_all <- NULL
for (i in seq_along(1:12)){
null_mod <- sum_mod_traits$null_model[[i]] #all years
var <- sum_mod_traits$variable[[i]]
#if the variable is in the null model, then take it out, otherwise add it in
sum_mod_traits$tested_model[[i]] <-
ifelse(grepl(var, null_mod),
gsub(paste0(var, "[[:punct:]]"), "", sum_mod_traits$null_model[[i]]),
paste0(null_mod, "+", var))
sum_mod_traits$null_model_year[[i]] <-
gsub("year\\+|/tree", "", sum_mod_traits$null_model[[i]])
sum_mod_traits$tested_model_year[[i]] <-
gsub("year\\+|/tree", "", sum_mod_traits$tested_model[[i]])
#obviously, the tested model of the "year" effect doesn't work over the individual years
if (i == 1){
sum_mod_traits$tested_model_year[[i]] <- sum_mod_traits$null_model_year[[i]]
}
test_mod <- sum_mod_traits$tested_model[[i]] #all years
test_mod_yr <- sum_mod_traits$tested_model_year[[i]] #individual years
null_mod_yr <- sum_mod_traits$null_model_year[[i]] #individual years
models <- c(null_mod, test_mod) #all years
models_yr <- c(null_mod_yr, test_mod_yr) #ndividual years
for (j in seq(along=model_df)){
for (h in seq(along=sum_mod_traits[,c(8,11,14,17)])){ #dAIC
column <- colnames(sum_mod_traits[,c(8,11,14,17)][h])
for (k in seq(along=sum_mod_traits[,c(9,12,15,18)])){ #coefficients direction
column_cof <- colnames(sum_mod_traits[,c(9,12,15,18)][h])
for (l in seq(along=sum_mod_traits[,c(10,13,16,19)])){ #coefficient values
column_cof_val <- colnames(sum_mod_traits[,c(10,13,16,19)][l])
#ALL YEARS
if(j == 1 & h == 1 & k == 1 & l == 1){
lmm_all <- lapply(models, function(x){
fit1 <- lmer(x, data = model_df[[j]], REML=FALSE,
control = lmerControl(optimizer ="Nelder_Mead"))
return(fit1)
})
names(lmm_all) <- models
var_aic <- aictab(lmm_all, second.ord=TRUE, sort=FALSE) #rank based on AICc
#put AIC value in table (#null - test)
sum_mod_traits[,column][[i]] <- var_aic$AICc[[1]] - var_aic$AICc[[2]]
sum_mod_traits[,column][[i]] <- round(sum_mod_traits[,column][[i]], 3)
for (z in seq(along = lmm_all)){
if (grepl(var, test_mod)){
if (names(lmm_all[z]) == test_mod){
coeff <- data.frame(coef(summary(lmm_all[[z]]))[ , "Estimate"]) ##2
coeff[,2] <- rownames(coeff)
colnames(coeff) <- c("value", "model_var")
coeff$value <- round(coeff$value, 3)
coeff$combo <- paste0(coeff$model_var, " (", coeff$value, ")")
coeff <- coeff[grepl(sum_mod_traits$variable[[i]], coeff$combo), ]
coeff_vec <- coeff$combo
#this rbind is to get a full df showing all coefficient values from the entire for-loop
coeff_all <- rbind(coeff_all, coeff)
#put coefficients in table
sum_mod_traits[,column_cof][[i]] <- ifelse(any(coeff$value < 0), "-", "+")
sum_mod_traits[,column_cof_val][[i]] <- paste(coeff_vec, collapse = ", ")
}
}
}
#INDIVIDUAL YEARS
} else if (j == h & h == k & k == l){
if(i == 1){
sum_mod_traits[,column][[i]] <- NA
sum_mod_traits[,column_cof][[i]] <- NA
sum_mod_traits[,column_cof_val][[i]] <- NA
}
lmm_all <- lapply(models_yr, function(x){
fit1 <- lmer(x, data = model_df[[j]], REML=FALSE,
control = lmerControl(optimizer ="Nelder_Mead"))
return(fit1)
})
names(lmm_all) <- models_yr
var_aic <- aictab(lmm_all, second.ord=TRUE, sort=FALSE) #rank based on AICc
#put AIC value in table (null - tested)
sum_mod_traits[,column][[i]] <- var_aic$AICc[[1]] - var_aic$AICc[[2]]
sum_mod_traits[,column][[i]] <- round(sum_mod_traits[,column][[i]], 3)
for (z in seq(along = lmm_all)){
if (grepl(var, test_mod_yr)){
if (names(lmm_all[z]) == test_mod_yr){
coeff <- data.frame(coef(summary(lmm_all[[z]]))[ , "Estimate"]) ##2
coeff[,2] <- rownames(coeff)
colnames(coeff) <- c("value", "model_var")
coeff$value <- round(coeff$value, 3)
coeff$combo <- paste0(coeff$model_var, " (", coeff$value, ")")
coeff <- coeff[grepl(sum_mod_traits$variable[[i]], coeff$combo), ]
coeff_vec <- coeff$combo
#this rbind is to get a full df showing all coefficient values from the entire for-loop
coeff_all <- rbind(coeff_all, coeff)
#put coefficients in table
sum_mod_traits[,column_cof][[i]] <- ifelse(any(coeff$value < 0), "-", "+")
sum_mod_traits[,column_cof_val][[i]] <- paste(coeff_vec, collapse = ", ")
}
}
}
}
}
}
}
}
}
cand_1966 <- sum_mod_traits[sum_mod_traits$dAIC_1964.1966 > 2, ]
View(cand_1966)
cand_1966 <- cand_1966[,c(1:3,11:13)]
cand_1977 <- sum_mod_traits[sum_mod_traits$dAIC_1977 > 2, ]
cand_1999 <- sum_mod_traits[sum_mod_traits$dAIC_1999 > 2, ]
View(cand_1977)
View(cand_1999)
cand_1999 <- cand_1999[,c(1:3,17,18)]
cand_1966 <- sum_mod_traits[sum_mod_traits$dAIC_1964.1966 > 2, ]
cand_1966 <- cand_1966[,c(1:3,11:12)]
cand_1966 <- cand_1966$variable
View(model_df)
cand_full <- sum_mod_traits[sum_mod_traits$dAIC_all > 2, ]
cand_all <- cand_1966$variable
cand_all <- cand_all$variable
cand_all <- sum_mod_traits[sum_mod_traits$dAIC_all > 2, ]
cand_all <- cand_all$variable
cand_1966 <- sum_mod_traits[sum_mod_traits$dAIC_1964.1966 > 2, ]
cand_1966 <- cand_1966$variable
cand_1977 <- sum_mod_traits[sum_mod_traits$dAIC_1977 > 2, ]
cand_1977 <- cand_1977$variable
cand_1999 <- sum_mod_traits[sum_mod_traits$dAIC_1999 > 2, ]
cand_1999 <- cand_1999$variable
cand <- paste(cand_all, cand_1966, cand_1977, cand_1999, collapse=" ")
cand <- paste(cand_all, cand_1966, cand_1977, cand_1999, collapse=",")
cand <- paste(cand_all, cand_1966, cand_1977, cand_1999, collapse=",")
cand
cand <- paste(cand_all, cand_1966, cand_1977, cand_1999, collapse="")
cand_all <- sum_mod_traits[sum_mod_traits$dAIC_all > 2, ]
cand_all <- cand_all$variable
cand_1966 <- sum_mod_traits[sum_mod_traits$dAIC_1964.1966 > 2, ]
cand_1966 <- cand_1966$variable
cand_1977 <- sum_mod_traits[sum_mod_traits$dAIC_1977 > 2, ]
cand_1977 <- cand_1977$variable
cand_1999 <- sum_mod_traits[sum_mod_traits$dAIC_1999 > 2, ]
cand_1999 <- cand_1999$variable
cand <- paste(cand_all, cand_1966, cand_1977, cand_1999, collapse="")
cand <- NULL
cand <- paste(cand_all, cand_1966, cand_1977, cand_1999, collapse="")
cand <- c(cand_all, cand_1966, cand_1977, cand_1999)
cand <- unique(cand)
contenders <- sum_mod_traits[sum_mod_traits$variable %in% cand, ]
View(contenders)
cand_all <- sum_mod_traits[sum_mod_traits$dAIC_all > 2, ]
cand_1966 <- sum_mod_traits[sum_mod_traits$dAIC_1964.1966 > 2, ]
cand_1977 <- sum_mod_traits[sum_mod_traits$dAIC_1977 > 2, ]
cand_1999 <- sum_mod_traits[sum_mod_traits$dAIC_1999 > 2, ]
View(cand_1966)
View(cand_1977)
View(cand_1999)
View(cand_all)
View(cand_1999)
View(cand_1977)
View(cand_1966)
cand_all <- sum_mod_traits[sum_mod_traits$dAIC_all > 2 & !sum_mod_traits$variable %in% c("dbh.ln.cm"), ]
cand_1966 <- sum_mod_traits[sum_mod_traits$dAIC_1964.1966 > 2, c(1:3)]
View(cand_1966)
cand_1966$top_model <- 1966
cand_1977 <- sum_mod_traits[sum_mod_traits$dAIC_1977 > 2, c(1:3)]
cand_1977$top_model <- 1977
cand_1999 <- sum_mod_traits[sum_mod_traits$dAIC_1999 > 2, c(1:3)]
cand_1999$top_model <- 1999
i=1
column <- colnames(sum_mod_traits[,c(8,11,14,17)][[i]])
column <- colnames(sum_mod_traits[,c(8,11,14,17)])[[i]])
column <- colnames(sum_mod_traits[,c(8,11,14,17)])[[i]]
j=1
scen <- c("all", "1966", "1977", "1999")[[j]]
cand_scen <- sum_mod_traits[sum_mod_traits[,column] > 2 &
!sum_mod_traits$variable %in% c("dbh.ln.cm"), c(1:3)]
assign(paste0("cand", c("all", "1966", "1977", "1999")[[j]]),
sum_mod_traits[sum_mod_traits[,column] > 2 &
!sum_mod_traits$variable %in% c("dbh.ln.cm"), c(1:3)])
assign(paste0("cand_", c("all", "1966", "1977", "1999")[[j]]),
sum_mod_traits[sum_mod_traits[,column] > 2 &
!sum_mod_traits$variable %in% c("dbh.ln.cm"), c(1:3)])
cand <- sum_mod_traits[sum_mod_traits[,column] > 2 &
!sum_mod_traits$variable %in% c("dbh.ln.cm"), c(1:3)]
cand$top_model <- c("all", "1966", "1977", "1999")[[j]]
View(cand)
cand_full <- NULL
for (i in seq(along=sum_mod_traits[,c(8,11,14,17)])){
column <- colnames(sum_mod_traits[,c(8,11,14,17)])[[i]]
cand <- sum_mod_traits[sum_mod_traits[,column] > 2 &
!sum_mod_traits$variable %in% c("dbh.ln.cm"), c(1:3)]
cand$top_model <- c("all", "1966", "1977", "1999")[[i]]
cand_full <- rbind(cand_full, cand)
}
View(cand_full)
cand_full <- NULL
for (i in seq(along=sum_mod_traits[,c(8,11,14,17)])){
column <- colnames(sum_mod_traits[,c(8,11,14,17)])[[i]]
cand <- sum_mod_traits[sum_mod_traits[,column] > 2 &
!sum_mod_traits$variable %in% c("dbh.ln.cm"), c(1:3)]
cand$top_model <- c("all", "1966", "1977", "1999")[[i]]
cand_full <- rbind(cand_full, cand)
cand_full <- cand_full[order(cand_full$prediction)]
}
cand_full <- NULL
for (i in seq(along=sum_mod_traits[,c(8,11,14,17)])){
column <- colnames(sum_mod_traits[,c(8,11,14,17)])[[i]]
cand <- sum_mod_traits[sum_mod_traits[,column] > 2 &
!sum_mod_traits$variable %in% c("dbh.ln.cm"), c(1:3)]
cand$top_model <- c("all", "1966", "1977", "1999")[[i]]
cand_full <- rbind(cand_full, cand)
cand_full <- cand_full[order(cand_full$prediction), ]
}
View(cand_full)
write.csv(sum_mod_traits, "manuscript/tables_figures/tested_traits_all.csv", row.names=FALSE)
