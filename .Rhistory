heights <- read.csv(text=getURL("https://raw.githubusercontent.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/master/tree_dimensions/tree_heights/SCBI_tree_heights.csv"), stringsAsFactors = FALSE)
View(heights)
#create subsets and match dbh by stemID
heights_2013 <- heights[heights$height.year < 2018, ]
heights_2018 <- heights[heights$height.year >= 2018, ]
heights_2013$dbh.cm <- dbh_2013$dbh.cm[match(heights_2013$stemID, dbh_2013$stemID)]
heights_2013$dbh_year <- 2013
heights_2018$dbh.cm <- dbh_2018$DBHcm[match(heights_2018$stemID, dbh_2018$stemID)]
heights_2018$dbh_year <- 2018
heights <- rbind(heights_2013, heights_2018)
#check which ones need dbh from previous census because they died
check <- heights[is.na(heights$dbh) | heights$dbh ==0, ]
neil_list <- read.csv("data/core_list_for_neil.csv", stringsAsFactors = FALSE)
neil_sp <- unique(neil_list$sp)
paper_heights <- heights[heights$sp %in% neil_sp, ]
paper_heights <- paper_heights[complete.cases(paper_heights), ]
paper_heights <- paper_heights[order(paper_heights$sp), ]
unique(paper_heights$sp)
# create regression equations ####
heights <- read.csv(text=getURL("https://raw.githubusercontent.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/master/tree_dimensions/tree_heights/SCBI_tree_heights.csv"), stringsAsFactors = FALSE)
heights_2013 <- heights[heights$height.year < 2018, ]
heights_2018 <- heights[heights$height.year >= 2018, ]
heights_2013$dbh.cm <- dbh_2013$dbh.cm[match(heights_2013$stemID, dbh_2013$stemID)]
heights_2013$dbh_year <- 2013
heights_2018$dbh.cm <- dbh_2018$DBHcm[match(heights_2018$stemID, dbh_2018$stemID)]
heights_2018$dbh_year <- 2018
heights <- rbind(heights_2013, heights_2018)
neil_list <- read.csv("data/core_list_for_neil.csv", stringsAsFactors = FALSE)
neil_sp <- unique(neil_list$sp)
paper_heights <- heights[heights$sp %in% neil_sp, ]
paper_heights <- paper_heights[complete.cases(paper_heights), ]
paper_heights <- paper_heights[order(paper_heights$sp), ]
# create regression equations ####
heights <- read.csv(text=getURL("https://raw.githubusercontent.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/master/tree_dimensions/tree_heights/SCBI_tree_heights.csv"), stringsAsFactors = FALSE)
View(heights)
# create regression equations ####
heights <- read.csv(text=getURL("https://raw.githubusercontent.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/master/tree_dimensions/tree_heights/SCBI_tree_heights.csv"), stringsAsFactors = FALSE)
heights_2013 <- heights[heights$height.year < 2018, ]
heights_2018 <- heights[heights$height.year >= 2018, ]
heights_2013$dbh.cm <- dbh_2013$dbh.cm[match(heights_2013$stemID, dbh_2013$stemID)]
heights_2013$dbh_year <- 2013
heights_2018$dbh.cm <- dbh_2018$DBHcm[match(heights_2018$stemID, dbh_2018$stemID)]
heights_2018$dbh_year <- 2018
heights <- rbind(heights_2013, heights_2018)
neil_list <- read.csv("data/core_list_for_neil.csv", stringsAsFactors = FALSE)
neil_sp <- unique(neil_list$sp)
paper_heights <- heights[heights$sp %in% neil_sp, ]
paper_heights <- paper_heights[complete.cases(paper_heights), ]
paper_heights <- paper_heights[order(paper_heights$sp), ]
unique(paper_heights$sp) #shows the sp that we have data for
# create regression equations ####
heights <- read.csv(text=getURL("https://github.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/blob/master/tree_dimensions/tree_heights/SCBI_tree_heights.csv"), stringsAsFactors = FALSE)
# create regression equations ####
heights <- read.csv(text=getURL("https://raw.githubusercontent.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/master/tree_dimensions/tree_heights/SCBI_tree_heights.csv"), stringsAsFactors = FALSE)
View(heights)
library(data.table)
library(RCurl)
library(ggplot2)
library(devtools)
# create regression equations ####
heights <- read.csv(text=getURL("https://raw.githubusercontent.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/master/tree_dimensions/tree_heights/SCBI_tree_heights.csv"), stringsAsFactors = FALSE)
View(heights)
library(data.table)
library(RCurl)
library(ggplot2)
library(devtools)
# create regression equations ####
heights <- read.csv(text=getURL("https://raw.githubusercontent.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/master/tree_dimensions/tree_heights/SCBI_tree_heights.csv"), stringsAsFactors = FALSE)
View(heights)
dbh_2008 <- read.csv(text=getURL("https://raw.githubusercontent.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/master/tree_main_census/data/census-csv-files/scbi.stem1.csv"))
dbh_2008$dbh.cm <- dbh_2008$dbh/10 #cm
dbh_2013 <- read.csv(text=getURL("https://raw.githubusercontent.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/master/tree_main_census/data/census-csv-files/scbi.stem2.csv"))
dbh_2013$dbh.cm <- dbh_2013$dbh/10 #cm
dbh_2018 <- read.csv(text=getURL("https://raw.githubusercontent.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/master/tree_main_census/data/scbi.stem3_TEMPORARY.csv"), stringsAsFactors = FALSE)
# #get stemIDs for each stem (leaving this here if need be)
# heights$stemID <- ifelse(is.na(heights$stemID), dbh_2013$stemID[match(paste(heights$tag, heights$stemtag), paste(dbh_2013$tag, dbh_2013$StemTag))], heights$stemID)
#
# heights$tag <- ifelse(is.na(heights$tag), dbh_2013$tag[match(heights$stemID, dbh_2013$stemID)], heights$tag)
#separate stemID in 2018 data
dbh_2018$tag <- gsub("_.*$", "", dbh_2018$Tree_ID_Num)
dbh_2018$stemtag <- gsub("[[:digit:]]*_", "", dbh_2018$Tree_ID_Num)
dbh_2018$tag <- as.numeric(as.character(dbh_2018$tag))
dbh_2018$stemtag <- as.numeric(as.character(dbh_2018$stemtag))
#create subsets and match dbh by stemID
heights_2013 <- heights[heights$height.year < 2018, ]
heights_2018 <- heights[heights$height.year >= 2018, ]
heights_2013$dbh.cm <- dbh_2013$dbh.cm[match(heights_2013$stemID, dbh_2013$stemID)]
heights_2013$dbh_year <- 2013
heights_2018$dbh.cm <- dbh_2018$DBHcm[match(heights_2018$stemID, dbh_2018$stemID)]
heights_2018$dbh_year <- 2018
heights <- rbind(heights_2013, heights_2018)
#check which ones need dbh from previous census because they died
check <- heights[is.na(heights$dbh) | heights$dbh ==0, ]
unique(heights$sp)
neil_list <- read.csv("data/core_list_for_neil.csv", stringsAsFactors = FALSE)
neil_sp <- unique(neil_list$sp)
paper_heights <- heights[heights$sp %in% neil_sp, ]
paper_heights <- paper_heights[complete.cases(paper_heights), ]
paper_heights <- paper_heights[order(paper_heights$sp), ]
unique(paper_heights$sp) #shows the sp that we have data for
paper_heights <- heights[heights$sp %in% neil_sp, ]
View(paper_heights)
#consolidated dbh from height data
heights$dbh_regr.cm <- ifelse(!is.na(heights$DBH.2008.cm), heights$DBH.2008.cm,
ifelse(!is.na(heights$DBH.2013.cm), heights$DBH.2013.cm,
ifelse(!is.na(heights$DBH.TLS.2015.cm), heights$DBH.TLS.2015.cm,
ifelse(!is.na(heights$DBH.2018.cm), heights$DBH.2018.cm,
heights$dbh_regr.cm))))
!is.na(heights$DBH.2008.cm)
heights$dbh_regr.cm <- unite(heights$DBH.2008.cm, heights$DBH.2013.cm)
library(dplyr)
heights$dbh_regr.cm <- unite(heights$DBH.2008.cm, heights$DBH.2013.cm)
library(tidyr)
heights$dbh_regr.cm <- unite(heights$DBH.2008.cm, heights$DBH.2013.cm)
?unite
unite(heights, heights$dbh_regr.cm,
heights$DBH.2008.cm, heights$DBH.2013.cm, heights$DBH.TLS.2015.cm, heights$DBH.2018.cm, remove=FALSE)
unite(heights, col=heights$dbh_regr.cm,
heights$DBH.2008.cm, heights$DBH.2013.cm, heights$DBH.TLS.2015.cm, heights$DBH.2018.cm, remove=FALSE)
heights$dbh_regr.cm <- unite(heights, col=heights$dbh_regr.cm,
heights$DBH.2008.cm, heights$DBH.2013.cm, heights$DBH.TLS.2015.cm, heights$DBH.2018.cm, remove=FALSE)
unite(heights, "dbh_regr.cm",
heights$DBH.2008.cm, heights$DBH.2013.cm, heights$DBH.TLS.2015.cm, heights$DBH.2018.cm, remove=FALSE)
unite(heights, "dbh_regr.cm",
DBH.2008.cm, DBH.2013.cm, DBH.TLS.2015.cm, DBH.2018.cm, remove=FALSE)
unite(heights, "dbh_regr.cm",
DBH.2008.cm, DBH.2013.cm, DBH.TLS.2015.cm, DBH.2018.cm, na.rm=TRUE remove=FALSE)
unite(heights, "dbh_regr.cm",
DBH.2008.cm, DBH.2013.cm, DBH.TLS.2015.cm, DBH.2018.cm, na.rm=TRUE, remove=FALSE)
devtools::install_github("tidyverse/tidyr")
unite(heights, "dbh_regr.cm",
DBH.2008.cm, DBH.2013.cm, DBH.TLS.2015.cm, DBH.2018.cm, na.rm=TRUE, remove=FALSE)
library(tidyr)
unite(heights, "dbh_regr.cm",
DBH.2008.cm, DBH.2013.cm, DBH.TLS.2015.cm, DBH.2018.cm, na.rm=TRUE, remove=FALSE)
find_rtools()
devtools::install_github("tidyverse/tidyr")
View(heights)
#can add na.rm = TRUE, but argument only exists in dev version of tidyr
heights$dbh_regr.cm <- unite(heights, "dbh_regr.cm",
DBH.2008.cm, DBH.2013.cm, DBH.TLS.2015.cm, DBH.2018.cm, remove=FALSE)
View(heights)
#can add na.rm = TRUE, but argument only exists in dev version of tidyr
heights %>%
unite(heights, "dbh_regr.cm",
DBH.2008.cm, DBH.2013.cm, DBH.TLS.2015.cm, DBH.2018.cm, remove=FALSE)
library(data.table)
library(RCurl)
library(ggplot2)
library(devtools)
# create regression equations ####
heights <- read.csv(text=getURL("https://raw.githubusercontent.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/master/tree_dimensions/tree_heights/SCBI_tree_heights.csv"), stringsAsFactors = FALSE)
library(data.table)
library(RCurl)
library(ggplot2)
library(devtools)
# create regression equations ####
heights <- read.csv(text=getURL("https://raw.githubusercontent.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/master/tree_dimensions/tree_heights/SCBI_tree_heights.csv"), stringsAsFactors = FALSE)
dbh_2008 <- read.csv(text=getURL("https://raw.githubusercontent.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/master/tree_main_census/data/census-csv-files/scbi.stem1.csv"))
dbh_2008$dbh.cm <- dbh_2008$dbh/10 #cm
dbh_2013 <- read.csv(text=getURL("https://raw.githubusercontent.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/master/tree_main_census/data/census-csv-files/scbi.stem2.csv"))
dbh_2013$dbh.cm <- dbh_2013$dbh/10 #cm
dbh_2018 <- read.csv(text=getURL("https://raw.githubusercontent.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/master/tree_main_census/data/scbi.stem3_TEMPORARY.csv"), stringsAsFactors = FALSE)
# #get stemIDs for each stem (leaving this here if need be)
# heights$stemID <- ifelse(is.na(heights$stemID), dbh_2013$stemID[match(paste(heights$tag, heights$stemtag), paste(dbh_2013$tag, dbh_2013$StemTag))], heights$stemID)
#
# heights$tag <- ifelse(is.na(heights$tag), dbh_2013$tag[match(heights$stemID, dbh_2013$stemID)], heights$tag)
#separate stemID in 2018 data
dbh_2018$tag <- gsub("_.*$", "", dbh_2018$Tree_ID_Num)
dbh_2018$stemtag <- gsub("[[:digit:]]*_", "", dbh_2018$Tree_ID_Num)
dbh_2018$tag <- as.numeric(as.character(dbh_2018$tag))
dbh_2018$stemtag <- as.numeric(as.character(dbh_2018$stemtag))
#create subsets and match dbh by stemID
heights_2013 <- heights[heights$height.year < 2018, ]
heights_2018 <- heights[heights$height.year >= 2018, ]
heights_2013$dbh.cm <- dbh_2013$dbh.cm[match(heights_2013$stemID, dbh_2013$stemID)]
heights_2013$dbh_year <- 2013
heights_2018$dbh.cm <- dbh_2018$DBHcm[match(heights_2018$stemID, dbh_2018$stemID)]
heights_2018$dbh_year <- 2018
heights <- rbind(heights_2013, heights_2018)
library(data.table)
library(RCurl)
library(ggplot2)
library(devtools)
# create regression equations ####
heights <- read.csv(text=getURL("https://raw.githubusercontent.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/master/tree_dimensions/tree_heights/SCBI_tree_heights.csv"), stringsAsFactors = FALSE)
dbh_2008 <- read.csv(text=getURL("https://raw.githubusercontent.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/master/tree_main_census/data/census-csv-files/scbi.stem1.csv"))
dbh_2008$dbh.cm <- dbh_2008$dbh/10 #cm
dbh_2013 <- read.csv(text=getURL("https://raw.githubusercontent.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/master/tree_main_census/data/census-csv-files/scbi.stem2.csv"))
dbh_2013$dbh.cm <- dbh_2013$dbh/10 #cm
dbh_2018 <- read.csv(text=getURL("https://raw.githubusercontent.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/master/tree_main_census/data/scbi.stem3_TEMPORARY.csv"), stringsAsFactors = FALSE)
# #get stemIDs for each stem (leaving this here if need be)
# heights$stemID <- ifelse(is.na(heights$stemID), dbh_2013$stemID[match(paste(heights$tag, heights$stemtag), paste(dbh_2013$tag, dbh_2013$StemTag))], heights$stemID)
#
# heights$tag <- ifelse(is.na(heights$tag), dbh_2013$tag[match(heights$stemID, dbh_2013$stemID)], heights$tag)
#separate stemID in 2018 data
dbh_2018$tag <- gsub("_.*$", "", dbh_2018$Tree_ID_Num)
dbh_2018$stemtag <- gsub("[[:digit:]]*_", "", dbh_2018$Tree_ID_Num)
dbh_2018$tag <- as.numeric(as.character(dbh_2018$tag))
dbh_2018$stemtag <- as.numeric(as.character(dbh_2018$stemtag))
heights_2013 <- heights[heights$height.year < 2018, ]
heights_2018 <- heights[heights$height.year >= 2018, ]
heights_2013$dbh.cm <- dbh_2013$dbh.cm[match(heights_2013$stemID, dbh_2013$stemID)]
heights_2013$dbh_year <- 2013
heights_2018$dbh.cm <- dbh_2018$DBHcm[match(heights_2018$stemID, dbh_2018$stemID)]
heights_2018$dbh_year <- 2018
heights <- rbind(heights_2013, heights_2018)
#consolidated dbh from height data
heights$dbh_regr.cm <- ifelse(!is.na(heights$DBH.2008.cm), heights$DBH.2008.cm,
ifelse(!is.na(heights$DBH.2013.cm), heights$DBH.2013.cm,
ifelse(!is.na(heights$DBH.TLS.2015.cm), heights$DBH.TLS.2015.cm,
ifelse(!is.na(heights$DBH.2018.cm), heights$DBH.2018.cm,
heights$dbh_regr.cm))))
library(tidyr)
#can add na.rm = TRUE, but argument only exists in dev version of tidyr
#this may make computer be very slow
heights <- unite(heights, "dbh_regr.cm",
DBH.2008.cm, DBH.2013.cm, DBH.TLS.2015.cm, DBH.2018.cm, remove=FALSE)
install.packages(c("evaluate", "zoo"))
install.packages("zoo")
install.packages("dplyr")
library(tidyr)
#can add na.rm = TRUE, but argument only exists in dev version of tidyr
#this may make computer be very slow
heights <- unite(heights, "dbh_regr.cm",
DBH.2008.cm, DBH.2013.cm, DBH.TLS.2015.cm, DBH.2018.cm, remove=FALSE)
install.packages("tidyr")
library(tidyr)
#can add na.rm = TRUE, but argument only exists in dev version of tidyr
#this may make computer be very slow
heights <- unite(heights, "dbh_regr.cm",
DBH.2008.cm, DBH.2013.cm, DBH.TLS.2015.cm, DBH.2018.cm, remove=FALSE)
install.packages("rlang")
detach("package:base", unload = TRUE)
library(base)
library(tidyr)
install.packages("rlang")
library(tidyr)
#can add na.rm = TRUE, but argument only exists in dev version of tidyr
#this may make computer be very slow
heights <- unite(heights, "dbh_regr.cm",
DBH.2008.cm, DBH.2013.cm, DBH.TLS.2015.cm, DBH.2018.cm, remove=FALSE)
View(heights)
?any
heights$dbh_regr.cm <- gsub(any(c("_", "NA")), "", heights$dbh_regr.cm)
View(heights)
#can add na.rm = TRUE, but argument only exists in dev version of tidyr
#this may make computer be very slow
heights <- unite(heights, "dbh_regr.cm",
DBH.2008.cm, DBH.2013.cm, DBH.TLS.2015.cm, DBH.2018.cm, remove=FALSE)
heights$dbh_regr.cm <- gsub("_", "", heights$dbh_regr.cm)
heights$dbh_regr.cm <- gsub("NA", "", heights$dbh_regr.cm)
View(heights)
heights$dbh_regr.cm
library(data.table)
library(RCurl)
library(ggplot2)
library(devtools)
# create regression equations ####
heights <- read.csv(text=getURL("https://raw.githubusercontent.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/master/tree_dimensions/tree_heights/SCBI_tree_heights.csv"), stringsAsFactors = FALSE)
dbh_2008 <- read.csv(text=getURL("https://raw.githubusercontent.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/master/tree_main_census/data/census-csv-files/scbi.stem1.csv"))
dbh_2008$dbh.cm <- dbh_2008$dbh/10 #cm
dbh_2013 <- read.csv(text=getURL("https://raw.githubusercontent.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/master/tree_main_census/data/census-csv-files/scbi.stem2.csv"))
dbh_2013$dbh.cm <- dbh_2013$dbh/10 #cm
dbh_2018 <- read.csv(text=getURL("https://raw.githubusercontent.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/master/tree_main_census/data/scbi.stem3_TEMPORARY.csv"), stringsAsFactors = FALSE)
# #get stemIDs for each stem (leaving this here if need be)
# heights$stemID <- ifelse(is.na(heights$stemID), dbh_2013$stemID[match(paste(heights$tag, heights$stemtag), paste(dbh_2013$tag, dbh_2013$StemTag))], heights$stemID)
#
# heights$tag <- ifelse(is.na(heights$tag), dbh_2013$tag[match(heights$stemID, dbh_2013$stemID)], heights$tag)
#separate stemID in 2018 data
dbh_2018$tag <- gsub("_.*$", "", dbh_2018$Tree_ID_Num)
dbh_2018$stemtag <- gsub("[[:digit:]]*_", "", dbh_2018$Tree_ID_Num)
dbh_2018$tag <- as.numeric(as.character(dbh_2018$tag))
dbh_2018$stemtag <- as.numeric(as.character(dbh_2018$stemtag))
#create subsets and match dbh by stemID
heights_2013 <- heights[heights$height.year < 2018, ]
heights_2018 <- heights[heights$height.year >= 2018, ]
heights_2013$dbh.cm <- dbh_2013$dbh.cm[match(heights_2013$stemID, dbh_2013$stemID)]
heights_2013$dbh_year <- 2013
heights_2018$dbh.cm <- dbh_2018$DBHcm[match(heights_2018$stemID, dbh_2018$stemID)]
heights_2018$dbh_year <- 2018
heights <- rbind(heights_2013, heights_2018)
#consolidated dbh from height data
heights$dbh_regr.cm <- ifelse(!is.na(heights$DBH.2008.cm), heights$DBH.2008.cm,
ifelse(!is.na(heights$DBH.2013.cm), heights$DBH.2013.cm,
ifelse(!is.na(heights$DBH.TLS.2015.cm), heights$DBH.TLS.2015.cm,
ifelse(!is.na(heights$DBH.2018.cm), heights$DBH.2018.cm,
heights$dbh_regr.cm))))
library(tidyr)
#can add na.rm = TRUE, but argument only exists in dev version of tidyr
#this may make computer be very slow
heights <- unite(heights, "dbh_regr.cm",
DBH.2008.cm, DBH.2013.cm, DBH.TLS.2015.cm, DBH.2018.cm, remove=FALSE)
heights$dbh_regr.cm <- gsub("_", "", heights$dbh_regr.cm)
heights$dbh_regr.cm <- gsub("NA", "", heights$dbh_regr.cm)
# create regression equations ####
heights <- read.csv(text=getURL("https://raw.githubusercontent.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/master/tree_dimensions/tree_heights/SCBI_tree_heights.csv"), stringsAsFactors = FALSE)
View(heights)
# create regression equations ####
heights <- read.csv(text=getURL("https://raw.githubusercontent.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/master/tree_dimensions/tree_heights/SCBI_tree_heights.csv"), stringsAsFactors = FALSE)
View(heights)
# create regression equations ####
heights <- read.csv(text=getURL("https://raw.githubusercontent.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/master/tree_dimensions/tree_heights/SCBI_tree_heights.csv"), stringsAsFactors = FALSE)
View(heights)
library(RCurl)
# create regression equations ####
heights <- read.csv(text=getURL("https://raw.githubusercontent.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/master/tree_dimensions/tree_heights/SCBI_tree_heights.csv"), stringsAsFactors = FALSE)
View(heights)
# create regression equations ####
heights <- read.csv(text=getURL("https://raw.githubusercontent.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/master/tree_dimensions/tree_heights/SCBI_tree_heights.csv"), stringsAsFactors = FALSE)
View(heights)
# create regression equations ####
heights <- read.csv(text=getURL("https://raw.githubusercontent.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/master/tree_dimensions/tree_heights/SCBI_tree_heights.csv"), stringsAsFactors = FALSE)
View(heights)
library(data.table)
library(RCurl)
library(ggplot2)
library(devtools)
dbh_2008 <- read.csv(text=getURL("https://raw.githubusercontent.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/master/tree_main_census/data/census-csv-files/scbi.stem1.csv"))
dbh_2008$dbh.cm <- dbh_2008$dbh/10 #cm
dbh_2013 <- read.csv(text=getURL("https://raw.githubusercontent.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/master/tree_main_census/data/census-csv-files/scbi.stem2.csv"))
dbh_2013$dbh.cm <- dbh_2013$dbh/10 #cm
dbh_2018 <- read.csv(text=getURL("https://raw.githubusercontent.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/master/tree_main_census/data/scbi.stem3_TEMPORARY.csv"), stringsAsFactors = FALSE)
# #get stemIDs for each stem (leaving this here if need be)
# heights$stemID <- ifelse(is.na(heights$stemID), dbh_2013$stemID[match(paste(heights$tag, heights$stemtag), paste(dbh_2013$tag, dbh_2013$StemTag))], heights$stemID)
#
# heights$tag <- ifelse(is.na(heights$tag), dbh_2013$tag[match(heights$stemID, dbh_2013$stemID)], heights$tag)
#separate stemID in 2018 data
dbh_2018$tag <- gsub("_.*$", "", dbh_2018$Tree_ID_Num)
dbh_2018$stemtag <- gsub("[[:digit:]]*_", "", dbh_2018$Tree_ID_Num)
dbh_2018$tag <- as.numeric(as.character(dbh_2018$tag))
dbh_2018$stemtag <- as.numeric(as.character(dbh_2018$stemtag))
#create subsets and match dbh by stemID
heights_2013 <- heights[heights$height.year < 2018, ]
heights_2018 <- heights[heights$height.year >= 2018, ]
heights_2013$dbh.cm <- dbh_2013$dbh.cm[match(heights_2013$stemID, dbh_2013$stemID)]
heights_2013$dbh_year <- 2013
heights_2018$dbh.cm <- dbh_2018$DBHcm[match(heights_2018$stemID, dbh_2018$stemID)]
heights_2018$dbh_year <- 2018
heights <- rbind(heights_2013, heights_2018)
#consolidated dbh from height data
heights$dbh_regr.cm <- ifelse(!is.na(heights$DBH.2008.cm), heights$DBH.2008.cm,
ifelse(!is.na(heights$DBH.2013.cm), heights$DBH.2013.cm,
ifelse(!is.na(heights$DBH.TLS.2015.cm), heights$DBH.TLS.2015.cm,
ifelse(!is.na(heights$DBH.2018.cm), heights$DBH.2018.cm,
heights$dbh_regr.cm))))
library(tidyr)
#can add na.rm = TRUE, but argument only exists in dev version of tidyr
#this may make computer be very slow
heights <- unite(heights, "dbh_regr.cm",
DBH.2008.cm, DBH.2013.cm, DBH.TLS.2015.cm, DBH.2018.cm, remove=FALSE)
heights$dbh_regr.cm <- gsub("_", "", heights$dbh_regr.cm)
heights$dbh_regr.cm <- gsub("NA", "", heights$dbh_regr.cm)
dbh_2008 <- read.csv(text=getURL("https://raw.githubusercontent.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/master/tree_main_census/data/census-csv-files/scbi.stem1.csv"))
dbh_2008$dbh.cm <- dbh_2008$dbh/10 #cm
dbh_2013 <- read.csv(text=getURL("https://raw.githubusercontent.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/master/tree_main_census/data/census-csv-files/scbi.stem2.csv"))
dbh_2013$dbh.cm <- dbh_2013$dbh/10 #cm
dbh_2018 <- read.csv(text=getURL("https://raw.githubusercontent.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/master/tree_main_census/data/scbi.stem3_TEMPORARY.csv"), stringsAsFactors = FALSE)
# #get stemIDs for each stem (leaving this here if need be)
# heights$stemID <- ifelse(is.na(heights$stemID), dbh_2013$stemID[match(paste(heights$tag, heights$stemtag), paste(dbh_2013$tag, dbh_2013$StemTag))], heights$stemID)
#
# heights$tag <- ifelse(is.na(heights$tag), dbh_2013$tag[match(heights$stemID, dbh_2013$stemID)], heights$tag)
#separate stemID in 2018 data
dbh_2018$tag <- gsub("_.*$", "", dbh_2018$Tree_ID_Num)
dbh_2018$stemtag <- gsub("[[:digit:]]*_", "", dbh_2018$Tree_ID_Num)
dbh_2018$tag <- as.numeric(as.character(dbh_2018$tag))
dbh_2018$stemtag <- as.numeric(as.character(dbh_2018$stemtag))
#create subsets and match dbh by stemID
heights_2013 <- heights[heights$height.year < 2018, ]
heights_2018 <- heights[heights$height.year >= 2018, ]
heights_2013$dbh.cm <- dbh_2013$dbh.cm[match(heights_2013$stemID, dbh_2013$stemID)]
heights_2013$dbh_year <- 2013
heights_2018$dbh.cm <- dbh_2018$DBHcm[match(heights_2018$stemID, dbh_2018$stemID)]
heights_2018$dbh_year <- 2018
heights <- rbind(heights_2013, heights_2018)
#consolidated dbh from height data
heights$dbh_regr.cm <- ifelse(!is.na(heights$DBH.2008.cm), heights$DBH.2008.cm,
ifelse(!is.na(heights$DBH.2013.cm), heights$DBH.2013.cm,
ifelse(!is.na(heights$DBH.TLS.2015.cm), heights$DBH.TLS.2015.cm,
ifelse(!is.na(heights$DBH.2018.cm), heights$DBH.2018.cm,
heights$dbh_regr.cm))))
library(tidyr)
#can add na.rm = TRUE, but argument only exists in dev version of tidyr
#this may make computer be very slow
heights <- unite(heights, "dbh_regr.cm",
DBH.2008.cm, DBH.2013.cm, DBH.TLS.2015.cm, DBH.2018.cm, remove=FALSE)
heights$dbh_regr.cm <- gsub("_", "", heights$dbh_regr.cm)
heights$dbh_regr.cm <- gsub("NA", "", heights$dbh_regr.cm)
heights$dbh_regr.cm
heights$dbh_regr.cm <- as.numeric(heights$dbh_regr.cm)
View(heights)
# create regression equations ####
heights <- read.csv(text=getURL("https://raw.githubusercontent.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/master/tree_dimensions/tree_heights/SCBI_tree_heights.csv"), stringsAsFactors = FALSE)
#can add na.rm = TRUE, but argument only exists in dev version of tidyr
#this may make computer be very slow
heights$dbh_regr.cm <- NA
heights <- unite(heights, "dbh_regr.cm",
DBH.2008.cm, DBH.2013.cm, DBH.TLS.2015.cm, DBH.2018.cm, remove=FALSE)
heights$dbh_regr.cm <- gsub("_", "", heights$dbh_regr.cm)
heights$dbh_regr.cm <- gsub("NA", "", heights$dbh_regr.cm)
heights$dbh_regr.cm <- as.numeric(heights$dbh_regr.cm)
View(heights)
for (i in seq(along=heights$tag)){
heights$dbh_year <- ifelse(heights$dbh_regr.cm == heights$DBH.2008.cm, "2008",
ifelse(heights$dbh_regr.cm == heights$DBH.2013.cm, "2013",
ifelse(heights$dbh_regr.cm == heights$DBH.TLS.2015.cm, "2015",
ifelse(heights$dbh_regr.cm == heights$DBH.2018.cm, "2018",
heights$dbh_year))))
}
View(heights)
heights$dbh_regr.cm == heights$DBH.2013.cm
for (i in seq(along=heights$tag)){
heights$dbh_year <- ifelse(heights$dbh_regr.cm == heights$DBH.2008.cm, 2008,
ifelse(heights$dbh_regr.cm == heights$DBH.2013.cm, 2013,
ifelse(heights$dbh_regr.cm == heights$DBH.TLS.2015.cm, 2015,
ifelse(heights$dbh_regr.cm == heights$DBH.2018.cm, 2018,
heights$dbh_year))))
}
View(heights)
heights$dbh_year <- ifelse(heights$dbh_regr.cm == heights$DBH.2008.cm, 2008,
ifelse(heights$dbh_regr.cm == heights$DBH.2013.cm, 2013,
ifelse(heights$dbh_regr.cm == heights$DBH.TLS.2015.cm, 2015,
ifelse(heights$dbh_regr.cm == heights$DBH.2018.cm, 2018,
heights$dbh_year))))
View(heights)
library(data.table)
library(RCurl)
library(ggplot2)
library(devtools)
# create regression equations ####
heights <- read.csv(text=getURL("https://raw.githubusercontent.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/master/tree_dimensions/tree_heights/SCBI_tree_heights.csv"), stringsAsFactors = FALSE)
dbh_2008 <- read.csv(text=getURL("https://raw.githubusercontent.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/master/tree_main_census/data/census-csv-files/scbi.stem1.csv"))
dbh_2008$dbh.cm <- dbh_2008$dbh/10 #cm
dbh_2013 <- read.csv(text=getURL("https://raw.githubusercontent.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/master/tree_main_census/data/census-csv-files/scbi.stem2.csv"))
dbh_2013$dbh.cm <- dbh_2013$dbh/10 #cm
dbh_2018 <- read.csv(text=getURL("https://raw.githubusercontent.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/master/tree_main_census/data/scbi.stem3_TEMPORARY.csv"), stringsAsFactors = FALSE)
# #get stemIDs for each stem (leaving this here if need be)
# heights$stemID <- ifelse(is.na(heights$stemID), dbh_2013$stemID[match(paste(heights$tag, heights$stemtag), paste(dbh_2013$tag, dbh_2013$StemTag))], heights$stemID)
#
# heights$tag <- ifelse(is.na(heights$tag), dbh_2013$tag[match(heights$stemID, dbh_2013$stemID)], heights$tag)
#separate stemID in 2018 data
dbh_2018$tag <- gsub("_.*$", "", dbh_2018$Tree_ID_Num)
dbh_2018$stemtag <- gsub("[[:digit:]]*_", "", dbh_2018$Tree_ID_Num)
dbh_2018$tag <- as.numeric(as.character(dbh_2018$tag))
dbh_2018$stemtag <- as.numeric(as.character(dbh_2018$stemtag))
#create subsets and match dbh by stemID
heights_2013 <- heights[heights$height.year < 2018, ]
heights_2018 <- heights[heights$height.year >= 2018, ]
heights_2013$dbh.cm <- dbh_2013$dbh.cm[match(heights_2013$stemID, dbh_2013$stemID)]
heights_2013$dbh_year <- 2013
heights_2018$dbh.cm <- dbh_2018$DBHcm[match(heights_2018$stemID, dbh_2018$stemID)]
heights_2018$dbh_year <- 2018
heights <- rbind(heights_2013, heights_2018)
#consolidated dbh from height data
heights$dbh_regr.cm <- ifelse(!is.na(heights$DBH.2008.cm), heights$DBH.2008.cm,
ifelse(!is.na(heights$DBH.2013.cm), heights$DBH.2013.cm,
ifelse(!is.na(heights$DBH.TLS.2015.cm), heights$DBH.TLS.2015.cm,
ifelse(!is.na(heights$DBH.2018.cm), heights$DBH.2018.cm,
heights$dbh_regr.cm))))
library(tidyr)
#can add na.rm = TRUE, but argument only exists in dev version of tidyr
#this may make computer be very slow
heights$dbh_regr.cm <- NA
heights <- unite(heights, "dbh_regr.cm",
DBH.2008.cm, DBH.2013.cm, DBH.TLS.2015.cm, DBH.2018.cm, remove=FALSE)
heights$dbh_regr.cm <- gsub("_", "", heights$dbh_regr.cm)
heights$dbh_regr.cm <- gsub("NA", "", heights$dbh_regr.cm)
heights$dbh_regr.cm <- as.numeric(heights$dbh_regr.cm)
heights$dbh_year <- ifelse(heights$dbh_regr.cm == heights$DBH.2008.cm, 2008,
ifelse(heights$dbh_regr.cm == heights$DBH.2013.cm, 2013,
ifelse(heights$dbh_regr.cm == heights$DBH.TLS.2015.cm, 2015,
ifelse(heights$dbh_regr.cm == heights$DBH.2018.cm, 2018,
heights$dbh_year))))
View(heights)
heights$dbh_year
heights$dbh_regr.cm == heights$DBH.TLS.2015.cm
heights$dbh_year <- NA
heights$dbh_year <- ifelse(heights$dbh_regr.cm == heights$DBH.2008.cm, 2008,
ifelse(heights$dbh_regr.cm == heights$DBH.2013.cm, 2013,
ifelse(heights$dbh_regr.cm == heights$DBH.TLS.2015.cm, 2015,
ifelse(heights$dbh_regr.cm == heights$DBH.2018.cm, 2018,
heights$dbh_year))))
heights$dbh_year
View(heights)
heights$dbh_regr.cm - heights$DBH.2008.cm = 0
?sapply
ifelse(heights$dbh_regr.cm == heights$DBH.2008.cm, 2008,
ifelse(heights$dbh_regr.cm == heights$DBH.2013.cm, 2013,
ifelse(heights$dbh_regr.cm == heights$DBH.TLS.2015.cm, 2015,
ifelse(heights$dbh_regr.cm == heights$DBH.2018.cm, 2018,
heights$dbh_year))))
ifelse(heights$dbh_regr.cm == heights$DBH.2008.cm, 2008,
ifelse(heights$dbh_regr.cm == heights$DBH.2013.cm, 2013,
ifelse(heights$dbh_regr.cm == heights$DBH.TLS.2015.cm, 2015,
ifelse(heights$dbh_regr.cm == heights$DBH.2018.cm, 2018,
NA))))
ifelse(heights$dbh_regr.cm == heights$DBH.2008.cm, 2008,NA)
ifelse(heights$dbh_regr.cm == heights$DBH.2013.cm, 2013,NA)
ifelse(heights$dbh_regr.cm == heights$DBH.2008.cm, 2008,
ifelse(heights$dbh_regr.cm == heights$DBH.2013.cm, 2013,
ifelse(heights$dbh_regr.cm == heights$DBH.TLS.2015.cm, 2015,
ifelse(heights$dbh_regr.cm == heights$DBH.2018.cm, 2018,
heights$dbh_year))))
?ifelse
ifelse(heights$dbh_regr.cm == heights$DBH.TLS.2015.cm, 2015,
ifelse(heights$dbh_regr.cm == heights$DBH.2018.cm, 2018,
heights$dbh_year))))
ifelse(heights$dbh_regr.cm == heights$DBH.TLS.2015.cm, 2015,
ifelse(heights$dbh_regr.cm == heights$DBH.2018.cm, 2018,
heights$dbh_year))
ifelse(heights$dbh_regr.cm == heights$DBH.2018.cm, 2018,
heights$dbh_year)
