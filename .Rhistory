ifelse(neon_ht$sp == "prses", "prse",
ifelse(neon_ht$sp == "qumo4", "qupr",
ifelse(neon_ht$sp == "pivi2", "pivi",
ifelse(neon_ht$sp == "cofl2", "cofl",
ifelse(neon_ht$sp == "pato2", "pato", neon_ht$sp)))))))))))))))
View(neon_ht)
neon_ht$measurementHeight <100
View(neon_ht)
#filter out saplings and weird dbh
neon_ht <- neon_ht[!(neon_ht$dbh_height.cm <100) & !(neon_ht$dbh_height.cm >140), ]
neon_ht_sub <- neon_ht[c(2,5,7,8)]
heights_sub <- heights[c(4,8,24,25)]
View(heights_sub)
View(neon_ht_sub)
heights_all <- rbind(heights_sub, neon_ht_sub)
source_gist("524eade46135f6348140")
ggplot(data = heights_all, aes(x = log(dbh_regr.cm), y = log(height.m), label = log(height.m))) +
stat_smooth_func(geom="text",method="lm",hjust=0.16, vjust=-1.5,parse=TRUE) +
geom_smooth(method="lm", se=FALSE, color="black") +
geom_point(color = "#0c4c8a") +
theme_minimal() +
facet_wrap(vars(sp))
#equations for all species together
ggplot(data = heights_regr, aes(x = log(dbh_regr.cm), y = log(height.m), label = log(height.m))) +
stat_smooth_func(geom="text",method="lm",hjust=0.16, vjust=-1.5,parse=TRUE) +
geom_smooth(method="lm", se=FALSE, color="black") +
geom_point(color = "#0c4c8a") +
theme_minimal()
#equations for all species together
ggplot(data = heights_all, aes(x = log(dbh_regr.cm), y = log(height.m), label = log(height.m))) +
stat_smooth_func(geom="text",method="lm",hjust=0.16, vjust=-1.5,parse=TRUE) +
geom_smooth(method="lm", se=FALSE, color="black") +
geom_point(color = "#0c4c8a") +
theme_minimal()
heights$DBH.2013.cm <- ifelse(heights$researcher == "Jonathan Thompson", dbh_2013$dbh[match(heights$stemID, dbh_2013$stemID)]
)
heights$DBH.2013.cm <- ifelse(heights$researcher == "Jonathan Thompson",
dbh_2013$dbh[match(heights$stemID, dbh_2013$stemID)],
heights$DBH.2013.cm)
View(heights)
heights$DBH.2013.cm <- ifelse(heights$researcher == "Jonathan Thompson",
dbh_2013$dbh.cm[match(heights$stemID, dbh_2013$stemID)],
heights$DBH.2013.cm)
View(heights)
write.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data/tree_dimensions/tree_heights/SCBI_tree_heights.csv", row.names=FALSE)
write.csv(heights, "C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data/tree_dimensions/tree_heights/SCBI_tree_heights.csv", row.names=FALSE)
#get neon height data ####
dirs <- dir("data/heights/NEON/neon_heights")
#get neon height data ####
dirs_map <- dir("data/heights/NEON/neon_heights", pattern="mapping_and_tagging.*$")
dirs_ht <- dir("data/heights/NEON/neon_heights", pattern="neon_ht.*$")
j=1
gsub("[[:alnum:]]", "", dirs_ht[[j]])
gsub("[[:alpha:]]", "", dirs_ht[[j]])
gsub("[[:alpha:]]_\.", "", dirs_ht[[j]])
gsub("[[:alpha:]]_\\.", "", dirs_ht[[j]])
gsub("[[:alpha:]]_", "", dirs_ht[[j]])
gsub("[[:alpha:]]*_", "", dirs_ht[[j]])
grepl("[[:digit:]]", dirs_ht[[j]])
grep("[[:digit:]]", dirs_ht[[j]])
?grep
gsub("[[:alpha:]]*_ | \.csv", "", dirs_ht[[j]])
gsub("[[:alpha:]]*_ | .csv", "", dirs_ht[[j]])
gsub("[[:alpha:]]*_ | \\.csv", "", dirs_ht[[j]])
gsub("[[:alpha:]]*_ & [.]csv", "", dirs_ht[[j]])
?str_extract
library(stringr)
?str_extract
str_extract(dirs_ht[[j]], "[[:digit:]]*-[[:digit:]]*")
gsub("-", ".", 2015-09)
gsub("-", ".", "2015-09")
library(data.table)
library(RCurl)
library(ggplot2)
library(devtools)
library(stringr)
# create regression equations ####
heights <- read.csv(text=getURL("https://raw.githubusercontent.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/master/tree_dimensions/tree_heights/SCBI_tree_heights.csv"), stringsAsFactors = FALSE)
dbh_2008 <- read.csv(text=getURL("https://raw.githubusercontent.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/master/tree_main_census/data/census-csv-files/scbi.stem1.csv"))
dbh_2008$dbh.cm <- dbh_2008$dbh/10 #cm
dbh_2013 <- read.csv(text=getURL("https://raw.githubusercontent.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/master/tree_main_census/data/census-csv-files/scbi.stem2.csv"))
dbh_2013$dbh.cm <- dbh_2013$dbh/10 #cm
dbh_2018 <- read.csv(text=getURL("https://raw.githubusercontent.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/master/tree_main_census/data/scbi.stem3_TEMPORARY.csv"), stringsAsFactors = FALSE)
# #get stemIDs for each stem (leaving this here if need be)
# heights$stemID <- ifelse(is.na(heights$stemID), dbh_2013$stemID[match(paste(heights$tag, heights$stemtag), paste(dbh_2013$tag, dbh_2013$StemTag))], heights$stemID)
#
# heights$tag <- ifelse(is.na(heights$tag), dbh_2013$tag[match(heights$stemID, dbh_2013$stemID)], heights$tag)
#separate stemID in 2018 data
dbh_2018$tag <- gsub("_.*$", "", dbh_2018$Tree_ID_Num)
dbh_2018$stemtag <- gsub("[[:digit:]]*_", "", dbh_2018$Tree_ID_Num)
dbh_2018$tag <- as.numeric(as.character(dbh_2018$tag))
dbh_2018$stemtag <- as.numeric(as.character(dbh_2018$stemtag))
heights$dbh_regr.cm <- paste0(heights$DBH.2008.cm, heights$DBH.2013.cm, heights$DBH.TLS.2015.cm, heights$DBH.2018.cm)
heights$dbh_regr.cm <- gsub("NA", "", heights$dbh_regr.cm)
heights$dbh_regr.cm <- as.numeric(heights$dbh_regr.cm)
heights$dbh_year <- NA
heights$dbh_year <- ifelse(heights$dbh_regr.cm %in% heights$DBH.2008.cm, 2008,
ifelse(heights$dbh_regr.cm %in% heights$DBH.2013.cm, 2013,
ifelse(heights$dbh_regr.cm %in% heights$DBH.TLS.2015.cm, 2015,
ifelse(heights$dbh_regr.cm %in% heights$DBH.2018.cm, 2018,
heights$dbh_year))))
heights_regr <- heights[c(1:4,6,8,15:17,24:25)]
#get neon height data ####
dirs_map <- dir("data/heights/NEON/neon_heights", pattern="mapping_and_tagging.*$")
dirs_ht <- dir("data/heights/NEON/neon_heights", pattern="neon_ht.*$")
neon_all <- NULL
for (i in seq(along=dirs_map)){
for (j in seq(along=dirs_ht)){
if (i == j){
neon_id <- read.csv(dirs_map[[i]], stringsAsFactors = FALSE)
neon_ht <- read.csv(dirs_ht[[j]], stringsAsFactors = FALSE)
id <- neon_id$individualID
neon_id <- neon_id[c("individualID", "taxonID", "scientificName")]
neon_ht$sp <- neon_id$taxonID[match(neon_ht$individualID, neon_id$individualID)]
neon_ht <- neon_ht[c("plotID", "sp", "individualID", "plantStatus", "stemDiameter", "measurementHeight", "height")]
neon_ht$sp <- tolower(neon_ht$sp)
neon_ht$dbh_year <- str_extract(dirs_ht[[j]], "[[:digit:]]*-[[:digit:]]*")
neon_ht$dbh_year <- gsub("-", ".", neon_ht$dbh_year)
setnames(neon_ht, old=c("stemDiameter", "measurementHeight", "height"), new=c("dbh_regr.cm", "dbh_height.cm", "height.m"))
#exclude unknown id (2plant, 2plant-h), vines/shrubs (syor, vitis, ceor7, tora2, paqu2, romu, loma6, loja, rual, ruph), and non-sp-specific (carya, querc, fraxi, ulmus, vibur, pyrus, diosp, rubus)
neon_ht <- neon_ht[!(neon_ht$sp %in% c("2plant", "2plant-h", "syor", "vitis", "ceor7", "tora2", "paqu2", "romu", "loma6", "loja", "rual", "ruph", "carya", "querc", "fraxi", "ulmus", "vibur", "pyrus", "diosp", "rubus")), ]
neon_ht$sp <- ifelse(neon_ht$sp == "asimi", "astr",
ifelse(neon_ht$sp == "fram2", "fram",
ifelse(neon_ht$sp == "cagl8", "cagl",
ifelse(neon_ht$sp == "caov3", "caovl",
ifelse(neon_ht$sp == "sassa", "saal",
ifelse(neon_ht$sp == "cato6", "cato",
ifelse(neon_ht$sp == "libe3", "libe",
ifelse(neon_ht$sp == "cecac", "ceca",
ifelse(neon_ht$sp == "caco15", "caco",
ifelse(neon_ht$sp == "acnen", "acne",
ifelse(neon_ht$sp == "prses", "prse",
ifelse(neon_ht$sp == "qumo4", "qupr",
ifelse(neon_ht$sp == "pivi2", "pivi",
ifelse(neon_ht$sp == "cofl2", "cofl",
ifelse(neon_ht$sp == "pato2", "pato", neon_ht$sp)))))))))))))))
#filter out saplings and weird dbh
neon_ht <- neon_ht[!(neon_ht$dbh_height.cm <100) & !(neon_ht$dbh_height.cm >140), ]
#rbind to have full dataset ####
neon_ht_sub <- neon_ht[c(2,5,7,8)]
neon_all <- rbind(neon_all, neon_ht_sub)
}
#get neon height data ####
dirs_map <- file.path("data/heights/NEON/neon_heights", pattern="mapping_and_tagging.*$")
#get neon height data ####
file_path <- file.path("data/heights/NEON/neon_heights")
dirs_map <- file("data/heights/NEON/neon_heights", pattern="mapping_and_tagging.*$")
dirs_map <- file("data/heights/NEON/neon_heights", pattern="mapping_and_tagging")
dirs_map <- dir("data/heights/NEON/neon_heights", pattern="mapping_and_tagging")
dirs_ht <- dir("data/heights/NEON/neon_heights", pattern="neon_ht.*$")
neon_all <- NULL
for (i in seq(along=dirs_map)){
for (j in seq(along=dirs_ht)){
if (i == j){
neon_id <- read.csv(paste0(file_path, dirs_map[[i]]), stringsAsFactors = FALSE)
neon_ht <- read.csv(paste0(file_path, dirs_ht[[j]]), stringsAsFactors = FALSE)
id <- neon_id$individualID
neon_id <- neon_id[c("individualID", "taxonID", "scientificName")]
neon_ht$sp <- neon_id$taxonID[match(neon_ht$individualID, neon_id$individualID)]
neon_ht <- neon_ht[c("plotID", "sp", "individualID", "plantStatus", "stemDiameter", "measurementHeight", "height")]
neon_ht$sp <- tolower(neon_ht$sp)
neon_ht$dbh_year <- str_extract(dirs_ht[[j]], "[[:digit:]]*-[[:digit:]]*")
neon_ht$dbh_year <- gsub("-", ".", neon_ht$dbh_year)
setnames(neon_ht, old=c("stemDiameter", "measurementHeight", "height"), new=c("dbh_regr.cm", "dbh_height.cm", "height.m"))
#exclude unknown id (2plant, 2plant-h), vines/shrubs (syor, vitis, ceor7, tora2, paqu2, romu, loma6, loja, rual, ruph), and non-sp-specific (carya, querc, fraxi, ulmus, vibur, pyrus, diosp, rubus)
neon_ht <- neon_ht[!(neon_ht$sp %in% c("2plant", "2plant-h", "syor", "vitis", "ceor7", "tora2", "paqu2", "romu", "loma6", "loja", "rual", "ruph", "carya", "querc", "fraxi", "ulmus", "vibur", "pyrus", "diosp", "rubus")), ]
neon_ht$sp <- ifelse(neon_ht$sp == "asimi", "astr",
ifelse(neon_ht$sp == "fram2", "fram",
ifelse(neon_ht$sp == "cagl8", "cagl",
ifelse(neon_ht$sp == "caov3", "caovl",
ifelse(neon_ht$sp == "sassa", "saal",
ifelse(neon_ht$sp == "cato6", "cato",
ifelse(neon_ht$sp == "libe3", "libe",
ifelse(neon_ht$sp == "cecac", "ceca",
ifelse(neon_ht$sp == "caco15", "caco",
ifelse(neon_ht$sp == "acnen", "acne",
ifelse(neon_ht$sp == "prses", "prse",
ifelse(neon_ht$sp == "qumo4", "qupr",
ifelse(neon_ht$sp == "pivi2", "pivi",
ifelse(neon_ht$sp == "cofl2", "cofl",
ifelse(neon_ht$sp == "pato2", "pato", neon_ht$sp)))))))))))))))
#filter out saplings and weird dbh
neon_ht <- neon_ht[!(neon_ht$dbh_height.cm <100) & !(neon_ht$dbh_height.cm >140), ]
#rbind to have full dataset ####
neon_ht_sub <- neon_ht[c(2,5,7,8)]
neon_all <- rbind(neon_all, neon_ht_sub)
}
#get neon height data ####
file_path <- file.path("data/heights/NEON/neon_heights/")
#get neon height data ####
file_path <- file.path("data/heights/NEON/neon_heights/")
#get neon height data ####
file_path <- file.path("data/heights/NEON/neon_heights/")
?file.path
dirs <- dir("data/heights/NEON/neon_heights")
dirs_map <- dir("data/heights/NEON/neon_heights", pattern="mapping_and_tagging.*$")
dirs_ht <- dir("data/heights/NEON/neon_heights", pattern="neon_ht.*$")
i=1
neon_id <- read.csv(paste(dirs_map[[i]], sep="//"), stringsAsFactors = FALSE)
neon_id <- read.csv(paste(file_path, dirs_map[[i]], sep="//"), stringsAsFactors = FALSE)
library(data.table)
library(RCurl)
library(ggplot2)
library(devtools)
library(stringr)
# create regression equations ####
heights <- read.csv(text=getURL("https://raw.githubusercontent.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/master/tree_dimensions/tree_heights/SCBI_tree_heights.csv"), stringsAsFactors = FALSE)
dbh_2008 <- read.csv(text=getURL("https://raw.githubusercontent.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/master/tree_main_census/data/census-csv-files/scbi.stem1.csv"))
dbh_2008$dbh.cm <- dbh_2008$dbh/10 #cm
dbh_2013 <- read.csv(text=getURL("https://raw.githubusercontent.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/master/tree_main_census/data/census-csv-files/scbi.stem2.csv"))
dbh_2013$dbh.cm <- dbh_2013$dbh/10 #cm
dbh_2018 <- read.csv(text=getURL("https://raw.githubusercontent.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/master/tree_main_census/data/scbi.stem3_TEMPORARY.csv"), stringsAsFactors = FALSE)
# #get stemIDs for each stem (leaving this here if need be)
# heights$stemID <- ifelse(is.na(heights$stemID), dbh_2013$stemID[match(paste(heights$tag, heights$stemtag), paste(dbh_2013$tag, dbh_2013$StemTag))], heights$stemID)
#
# heights$tag <- ifelse(is.na(heights$tag), dbh_2013$tag[match(heights$stemID, dbh_2013$stemID)], heights$tag)
#separate stemID in 2018 data
dbh_2018$tag <- gsub("_.*$", "", dbh_2018$Tree_ID_Num)
dbh_2018$stemtag <- gsub("[[:digit:]]*_", "", dbh_2018$Tree_ID_Num)
dbh_2018$tag <- as.numeric(as.character(dbh_2018$tag))
dbh_2018$stemtag <- as.numeric(as.character(dbh_2018$stemtag))
heights$dbh_regr.cm <- paste0(heights$DBH.2008.cm, heights$DBH.2013.cm, heights$DBH.TLS.2015.cm, heights$DBH.2018.cm)
heights$dbh_regr.cm <- gsub("NA", "", heights$dbh_regr.cm)
heights$dbh_regr.cm <- as.numeric(heights$dbh_regr.cm)
heights$dbh_year <- NA
heights$dbh_year <- ifelse(heights$dbh_regr.cm %in% heights$DBH.2008.cm, 2008,
ifelse(heights$dbh_regr.cm %in% heights$DBH.2013.cm, 2013,
ifelse(heights$dbh_regr.cm %in% heights$DBH.TLS.2015.cm, 2015,
ifelse(heights$dbh_regr.cm %in% heights$DBH.2018.cm, 2018,
heights$dbh_year))))
heights_regr <- heights[c(1:4,6,8,15:17,24:25)]
#get neon height data ####
file_path <- file.path("data/heights/NEON/neon_heights/")
dirs_map <- dir("data/heights/NEON/neon_heights", pattern="mapping_and_tagging.*$")
dirs_ht <- dir("data/heights/NEON/neon_heights", pattern="neon_ht.*$")
neon_all <- NULL
for (i in seq(along=dirs_map)){
for (j in seq(along=dirs_ht)){
if (i == j){
neon_id <- read.csv(paste(file_path, dirs_map[[i]], sep="//"), stringsAsFactors = FALSE)
neon_ht <- read.csv(paste0(file_path, dirs_ht[[j]], sep="//"), stringsAsFactors = FALSE)
id <- neon_id$individualID
neon_id <- neon_id[c("individualID", "taxonID", "scientificName")]
neon_ht$sp <- neon_id$taxonID[match(neon_ht$individualID, neon_id$individualID)]
neon_ht <- neon_ht[c("plotID", "sp", "individualID", "plantStatus", "stemDiameter", "measurementHeight", "height")]
neon_ht$sp <- tolower(neon_ht$sp)
neon_ht$dbh_year <- str_extract(dirs_ht[[j]], "[[:digit:]]*-[[:digit:]]*")
neon_ht$dbh_year <- gsub("-", ".", neon_ht$dbh_year)
setnames(neon_ht, old=c("stemDiameter", "measurementHeight", "height"), new=c("dbh_regr.cm", "dbh_height.cm", "height.m"))
#exclude unknown id (2plant, 2plant-h), vines/shrubs (syor, vitis, ceor7, tora2, paqu2, romu, loma6, loja, rual, ruph), and non-sp-specific (carya, querc, fraxi, ulmus, vibur, pyrus, diosp, rubus)
neon_ht <- neon_ht[!(neon_ht$sp %in% c("2plant", "2plant-h", "syor", "vitis", "ceor7", "tora2", "paqu2", "romu", "loma6", "loja", "rual", "ruph", "carya", "querc", "fraxi", "ulmus", "vibur", "pyrus", "diosp", "rubus")), ]
neon_ht$sp <- ifelse(neon_ht$sp == "asimi", "astr",
ifelse(neon_ht$sp == "fram2", "fram",
ifelse(neon_ht$sp == "cagl8", "cagl",
ifelse(neon_ht$sp == "caov3", "caovl",
ifelse(neon_ht$sp == "sassa", "saal",
ifelse(neon_ht$sp == "cato6", "cato",
ifelse(neon_ht$sp == "libe3", "libe",
ifelse(neon_ht$sp == "cecac", "ceca",
ifelse(neon_ht$sp == "caco15", "caco",
ifelse(neon_ht$sp == "acnen", "acne",
ifelse(neon_ht$sp == "prses", "prse",
ifelse(neon_ht$sp == "qumo4", "qupr",
ifelse(neon_ht$sp == "pivi2", "pivi",
ifelse(neon_ht$sp == "cofl2", "cofl",
ifelse(neon_ht$sp == "pato2", "pato", neon_ht$sp)))))))))))))))
#filter out saplings and weird dbh
neon_ht <- neon_ht[!(neon_ht$dbh_height.cm <100) & !(neon_ht$dbh_height.cm >140), ]
#rbind to have full dataset ####
neon_ht_sub <- neon_ht[c(2,5,7,8)]
neon_all <- rbind(neon_all, neon_ht_sub)
}
neon_all <- NULL
for (i in seq(along=dirs_map)){
for (j in seq(along=dirs_ht)){
if (i == j){
neon_id <- read.csv(paste(file_path, dirs_map[[i]], sep="//"), stringsAsFactors = FALSE)
neon_ht <- read.csv(paste(file_path, dirs_ht[[j]], sep="//"), stringsAsFactors = FALSE)
id <- neon_id$individualID
neon_id <- neon_id[c("individualID", "taxonID", "scientificName")]
neon_ht$sp <- neon_id$taxonID[match(neon_ht$individualID, neon_id$individualID)]
neon_ht <- neon_ht[c("plotID", "sp", "individualID", "plantStatus", "stemDiameter", "measurementHeight", "height")]
neon_ht$sp <- tolower(neon_ht$sp)
neon_ht$dbh_year <- str_extract(dirs_ht[[j]], "[[:digit:]]*-[[:digit:]]*")
neon_ht$dbh_year <- gsub("-", ".", neon_ht$dbh_year)
setnames(neon_ht, old=c("stemDiameter", "measurementHeight", "height"), new=c("dbh_regr.cm", "dbh_height.cm", "height.m"))
#exclude unknown id (2plant, 2plant-h), vines/shrubs (syor, vitis, ceor7, tora2, paqu2, romu, loma6, loja, rual, ruph), and non-sp-specific (carya, querc, fraxi, ulmus, vibur, pyrus, diosp, rubus)
neon_ht <- neon_ht[!(neon_ht$sp %in% c("2plant", "2plant-h", "syor", "vitis", "ceor7", "tora2", "paqu2", "romu", "loma6", "loja", "rual", "ruph", "carya", "querc", "fraxi", "ulmus", "vibur", "pyrus", "diosp", "rubus")), ]
neon_ht$sp <- ifelse(neon_ht$sp == "asimi", "astr",
ifelse(neon_ht$sp == "fram2", "fram",
ifelse(neon_ht$sp == "cagl8", "cagl",
ifelse(neon_ht$sp == "caov3", "caovl",
ifelse(neon_ht$sp == "sassa", "saal",
ifelse(neon_ht$sp == "cato6", "cato",
ifelse(neon_ht$sp == "libe3", "libe",
ifelse(neon_ht$sp == "cecac", "ceca",
ifelse(neon_ht$sp == "caco15", "caco",
ifelse(neon_ht$sp == "acnen", "acne",
ifelse(neon_ht$sp == "prses", "prse",
ifelse(neon_ht$sp == "qumo4", "qupr",
ifelse(neon_ht$sp == "pivi2", "pivi",
ifelse(neon_ht$sp == "cofl2", "cofl",
ifelse(neon_ht$sp == "pato2", "pato", neon_ht$sp)))))))))))))))
#filter out saplings and weird dbh
neon_ht <- neon_ht[!(neon_ht$dbh_height.cm <100) & !(neon_ht$dbh_height.cm >140), ]
#rbind to have full dataset ####
neon_ht_sub <- neon_ht[c(2,5,7,8)]
neon_all <- rbind(neon_all, neon_ht_sub)
}
View(neon_all)
i=3
j=3
neon_id <- read.csv(paste(file_path, dirs_map[[i]], sep="//"), stringsAsFactors = FALSE)
neon_ht <- read.csv(paste(file_path, dirs_ht[[j]], sep="//"), stringsAsFactors = FALSE)
View(neon_ht)
id <- neon_id$individualID
neon_id <- neon_id[c("individualID", "taxonID", "scientificName")]
neon_ht$sp <- neon_id$taxonID[match(neon_ht$individualID, neon_id$individualID)]
neon_ht <- neon_ht[c("plotID", "sp", "individualID", "plantStatus", "stemDiameter", "measurementHeight", "height")]
neon_ht$sp <- tolower(neon_ht$sp)
neon_ht$dbh_year <- str_extract(dirs_ht[[j]], "[[:digit:]]*-[[:digit:]]*")
neon_ht$dbh_year <- gsub("-", ".", neon_ht$dbh_year)
setnames(neon_ht, old=c("stemDiameter", "measurementHeight", "height"), new=c("dbh_regr.cm", "dbh_height.cm", "height.m"))
neon_ht <- neon_ht[!(neon_ht$sp %in% c("2plant", "2plant-h", "syor", "vitis", "ceor7", "tora2", "paqu2", "romu", "loma6", "loja", "rual", "ruph", "carya", "querc", "fraxi", "ulmus", "vibur", "pyrus", "diosp", "rubus")), ]
neon_ht$sp <- ifelse(neon_ht$sp == "asimi", "astr",
ifelse(neon_ht$sp == "fram2", "fram",
ifelse(neon_ht$sp == "cagl8", "cagl",
ifelse(neon_ht$sp == "caov3", "caovl",
ifelse(neon_ht$sp == "sassa", "saal",
ifelse(neon_ht$sp == "cato6", "cato",
ifelse(neon_ht$sp == "libe3", "libe",
ifelse(neon_ht$sp == "cecac", "ceca",
ifelse(neon_ht$sp == "caco15", "caco",
ifelse(neon_ht$sp == "acnen", "acne",
ifelse(neon_ht$sp == "prses", "prse",
ifelse(neon_ht$sp == "qumo4", "qupr",
ifelse(neon_ht$sp == "pivi2", "pivi",
ifelse(neon_ht$sp == "cofl2", "cofl",
ifelse(neon_ht$sp == "pato2", "pato", neon_ht$sp)))))))))))))))
#filter out saplings and weird dbh
neon_ht <- neon_ht[!(neon_ht$dbh_height.cm <100) & !(neon_ht$dbh_height.cm >140), ]
View(neon_ht)
neon_id <- read.csv(paste(file_path, dirs_map[[i]], sep="//"), stringsAsFactors = FALSE)
neon_ht <- read.csv(paste(file_path, dirs_ht[[j]], sep="//"), stringsAsFactors = FALSE)
id <- neon_id$individualID
neon_id <- neon_id[c("individualID", "taxonID", "scientificName")]
neon_ht$sp <- neon_id$taxonID[match(neon_ht$individualID, neon_id$individualID)]
neon_ht <- neon_ht[c("plotID", "sp", "individualID", "plantStatus", "stemDiameter", "measurementHeight", "height")]
neon_ht$sp <- tolower(neon_ht$sp)
neon_ht$dbh_year <- str_extract(dirs_ht[[j]], "[[:digit:]]*-[[:digit:]]*")
neon_ht$dbh_year <- gsub("-", ".", neon_ht$dbh_year)
setnames(neon_ht, old=c("stemDiameter", "measurementHeight", "height"), new=c("dbh_regr.cm", "dbh_height.cm", "height.m"))
View(neon_ht)
#exclude unknown id (2plant, 2plant-h), vines/shrubs (syor, vitis, ceor7, tora2, paqu2, romu, loma6, loja, rual, ruph), and non-sp-specific (carya, querc, fraxi, ulmus, vibur, pyrus, diosp, rubus)
neon_ht <- neon_ht[!(neon_ht$sp %in% c("2plant", "2plant-h", "syor", "vitis", "ceor7", "tora2", "paqu2", "romu", "loma6", "loja", "rual", "ruph", "carya", "querc", "fraxi", "ulmus", "vibur", "pyrus", "diosp", "rubus")), ]
View(neon_ht)
neon_ht$sp <- ifelse(neon_ht$sp == "asimi", "astr",
ifelse(neon_ht$sp == "fram2", "fram",
ifelse(neon_ht$sp == "cagl8", "cagl",
ifelse(neon_ht$sp == "caov3", "caovl",
ifelse(neon_ht$sp == "sassa", "saal",
ifelse(neon_ht$sp == "cato6", "cato",
ifelse(neon_ht$sp == "libe3", "libe",
ifelse(neon_ht$sp == "cecac", "ceca",
ifelse(neon_ht$sp == "caco15", "caco",
ifelse(neon_ht$sp == "acnen", "acne",
ifelse(neon_ht$sp == "prses", "prse",
ifelse(neon_ht$sp == "qumo4", "qupr",
ifelse(neon_ht$sp == "pivi2", "pivi",
ifelse(neon_ht$sp == "cofl2", "cofl",
ifelse(neon_ht$sp == "pato2", "pato", neon_ht$sp)))))))))))))))
View(neon_ht)
#filter out saplings and weird dbh
neon_ht <- neon_ht[!(neon_ht$dbh_height.cm <100) & !(neon_ht$dbh_height.cm >140), ]
View(neon_ht)
neon_id <- read.csv(paste(file_path, dirs_map[[i]], sep="//"), stringsAsFactors = FALSE)
neon_ht <- read.csv(paste(file_path, dirs_ht[[j]], sep="//"), stringsAsFactors = FALSE)
id <- neon_id$individualID
neon_id <- neon_id[c("individualID", "taxonID", "scientificName")]
neon_ht$sp <- neon_id$taxonID[match(neon_ht$individualID, neon_id$individualID)]
neon_ht <- neon_ht[c("plotID", "sp", "individualID", "plantStatus", "stemDiameter", "measurementHeight", "height")]
neon_ht$sp <- tolower(neon_ht$sp)
neon_ht$dbh_year <- str_extract(dirs_ht[[j]], "[[:digit:]]*-[[:digit:]]*")
neon_ht$dbh_year <- gsub("-", ".", neon_ht$dbh_year)
setnames(neon_ht, old=c("stemDiameter", "measurementHeight", "height"), new=c("dbh_regr.cm", "dbh_height.cm", "height.m"))
#exclude unknown id (2plant, 2plant-h), vines/shrubs (syor, vitis, ceor7, tora2, paqu2, romu, loma6, loja, rual, ruph), and non-sp-specific (carya, querc, fraxi, ulmus, vibur, pyrus, diosp, rubus)
neon_ht <- neon_ht[!(neon_ht$sp %in% c("2plant", "2plant-h", "syor", "vitis", "ceor7", "tora2", "paqu2", "romu", "loma6", "loja", "rual", "ruph", "carya", "querc", "fraxi", "ulmus", "vibur", "pyrus", "diosp", "rubus")), ]
neon_ht$sp <- ifelse(neon_ht$sp == "asimi", "astr",
ifelse(neon_ht$sp == "fram2", "fram",
ifelse(neon_ht$sp == "cagl8", "cagl",
ifelse(neon_ht$sp == "caov3", "caovl",
ifelse(neon_ht$sp == "sassa", "saal",
ifelse(neon_ht$sp == "cato6", "cato",
ifelse(neon_ht$sp == "libe3", "libe",
ifelse(neon_ht$sp == "cecac", "ceca",
ifelse(neon_ht$sp == "caco15", "caco",
ifelse(neon_ht$sp == "acnen", "acne",
ifelse(neon_ht$sp == "prses", "prse",
ifelse(neon_ht$sp == "qumo4", "qupr",
ifelse(neon_ht$sp == "pivi2", "pivi",
ifelse(neon_ht$sp == "cofl2", "cofl",
ifelse(neon_ht$sp == "pato2", "pato", neon_ht$sp)))))))))))))))
View(neon_ht)
#filter out saplings and weird dbh
neon_ht_test <- neon_ht[!(is.na(neon_ht$dbh_height.cm)) & !(neon_ht$dbh_height.cm <110) & !(neon_ht$dbh_height.cm >150), ]
View(neon_ht_test)
View(neon_all)
neon_all <- NULL
for (i in seq(along=dirs_map)){
for (j in seq(along=dirs_ht)){
if (i == j){
neon_id <- read.csv(paste(file_path, dirs_map[[i]], sep="//"), stringsAsFactors = FALSE)
neon_ht <- read.csv(paste(file_path, dirs_ht[[j]], sep="//"), stringsAsFactors = FALSE)
id <- neon_id$individualID
neon_id <- neon_id[c("individualID", "taxonID", "scientificName")]
neon_ht$sp <- neon_id$taxonID[match(neon_ht$individualID, neon_id$individualID)]
neon_ht <- neon_ht[c("plotID", "sp", "individualID", "plantStatus", "stemDiameter", "measurementHeight", "height")]
neon_ht$sp <- tolower(neon_ht$sp)
neon_ht$dbh_year <- str_extract(dirs_ht[[j]], "[[:digit:]]*-[[:digit:]]*")
neon_ht$dbh_year <- gsub("-", ".", neon_ht$dbh_year)
setnames(neon_ht, old=c("stemDiameter", "measurementHeight", "height"), new=c("dbh_regr.cm", "dbh_height.cm", "height.m"))
#exclude unknown id (2plant, 2plant-h), vines/shrubs (syor, vitis, ceor7, tora2, paqu2, romu, loma6, loja, rual, ruph), and non-sp-specific (carya, querc, fraxi, ulmus, vibur, pyrus, diosp, rubus)
neon_ht <- neon_ht[!(neon_ht$sp %in% c("2plant", "2plant-h", "syor", "vitis", "ceor7", "tora2", "paqu2", "romu", "loma6", "loja", "rual", "ruph", "carya", "querc", "fraxi", "ulmus", "vibur", "pyrus", "diosp", "rubus")), ]
neon_ht$sp <- ifelse(neon_ht$sp == "asimi", "astr",
ifelse(neon_ht$sp == "fram2", "fram",
ifelse(neon_ht$sp == "cagl8", "cagl",
ifelse(neon_ht$sp == "caov3", "caovl",
ifelse(neon_ht$sp == "sassa", "saal",
ifelse(neon_ht$sp == "cato6", "cato",
ifelse(neon_ht$sp == "libe3", "libe",
ifelse(neon_ht$sp == "cecac", "ceca",
ifelse(neon_ht$sp == "caco15", "caco",
ifelse(neon_ht$sp == "acnen", "acne",
ifelse(neon_ht$sp == "prses", "prse",
ifelse(neon_ht$sp == "qumo4", "qupr",
ifelse(neon_ht$sp == "pivi2", "pivi",
ifelse(neon_ht$sp == "cofl2", "cofl",
ifelse(neon_ht$sp == "pato2", "pato", neon_ht$sp)))))))))))))))
#filter out saplings and weird dbh
neon_ht <- neon_ht[!(is.na(neon_ht$dbh_height.cm)) & !(neon_ht$dbh_height.cm <110) & !(neon_ht$dbh_height.cm >150), ]
#rbind to have full dataset ####
neon_ht_sub <- neon_ht[c(2,5,7,8)]
neon_all <- rbind(neon_all, neon_ht_sub)
}
View(neon_all)
neon_all <- neon_all[complete.cases(neon_all)]
neon_all <- neon_all[complete.cases(neon_all), ]
View(neon_all)
#rbind with general height data and determine equations ####
heights_sub <- heights[c(4,8,24,25)]
heights_all <- rbind(heights_sub, neon_all)
source_gist("524eade46135f6348140")
ggplot(data = heights_all, aes(x = log(dbh_regr.cm), y = log(height.m), label = log(height.m))) +
stat_smooth_func(geom="text",method="lm",hjust=0.16, vjust=-1.5,parse=TRUE) +
geom_smooth(method="lm", se=FALSE, color="black") +
geom_point(color = "#0c4c8a") +
theme_minimal() +
facet_wrap(vars(sp))
#check which ones need dbh from previous census because they died
check <- heights_all[is.na(heights_all$dbh) | heights_all$dbh ==0, ]
#make regression equations ####
#bring in list of cored species we're using
neil_list <- read.csv("data/core_list_for_neil.csv", stringsAsFactors = FALSE)
neil_sp <- unique(neil_list$sp)
paper_heights <- heights_all[heights_all$sp %in% neil_sp, ]
paper_heights <- paper_heights[order(paper_heights$sp), ]
unique(heights_all$sp) #shows all sp that we have height data for
unique(paper_heights$sp) #shows the cored sp that we have data for
#make regression equations ####
#bring in list of cored species we're using
neil_list <- read.csv("data/core_list_for_neil.csv", stringsAsFactors = FALSE)
neil_sp <- unique(neil_list$sp)
paper_heights <- heights_all[heights_all$sp %in% neil_sp, ]
unique(heights_all$sp) #shows all sp that we have height data for
unique(paper_heights$sp) #shows the cored sp that we have data for
ggplot(data = paper_heights, aes(x = log(dbh_regr.cm), y = log(height.m), label = log(height.m))) +
stat_smooth_func(geom="text",method="lm",hjust=0.16, vjust=-1.5,parse=TRUE) +
geom_smooth(method="lm", se=FALSE, color="black") +
geom_point(color = "#0c4c8a") +
theme_minimal() +
facet_wrap(vars(sp))
ggplot(data = paper_heights, aes(x = log(dbh_regr.cm), y = log(height.m), label = log(height.m))) +
stat_smooth_func(geom="text",method="lm",hjust=0.16, vjust=-1,parse=TRUE) +
geom_smooth(method="lm", se=FALSE, color="black") +
geom_point(color = "#0c4c8a") +
theme_minimal() +
facet_wrap(vars(sp))
#equations for all species together
ggplot(data = paper_heights, aes(x = log(dbh_regr.cm), y = log(height.m), label = log(height.m))) +
stat_smooth_func(geom="text",method="lm",hjust=0.16, vjust=-1.5,parse=TRUE) +
geom_smooth(method="lm", se=FALSE, color="black") +
geom_point(color = "#0c4c8a") +
theme_minimal()
install.packages("knitr")
install.packages("pandoc")
install.packages("rmarkdown")
install.packages("tinytex")
install.packages("bookdown")
library(knitr)
install.packages("pandoc")
library(installr)
install.packages(installr)
install.packages("installr")
library(installr)
install.pandoc()
choco install pandoc
library(installr)
install.pandoc()
setInternet2(TRUE)
"Defunct"
help("Defunct")
install.pandoc()
