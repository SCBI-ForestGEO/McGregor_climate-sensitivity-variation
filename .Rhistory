return(dbh2)
}
#1b. this loop says the following:
##1. Assigns the first dbh of the growth column as the first dbh.
##2. Says the following:
##2i.If new.band=0 (no band change), we have a measure, and we have a previous dbh2, use Condit's function to determine next dbh2 based on caliper measurement.
##2ii. If new.band=0, we have a measure, and the previous dbh2 is NA, use Condit's function by comparing the new measure with the most recent non-NA dbh2.
##2iii. If new.band=0 and the previous measure is NA, give dbh2 a value of NA.
##2iv. If new.band=1 (band and measurement change), we have a measure, and there's a new dbh, assign that dbh to dbh2.
##2v. If new.band=1, we have a measure, and there's no new dbh (indicating a new dbh wasn't recorded when the band was changed), dbh2 is the sum of the differences of the previous dbh2's added to the most recent dbh2.
##2vi. UNCOMMON If new.band=1 , measure is NA, and the dbh in the original column is unchanged , dbh2 is the sum of the differences of the previous dbh2's added to the most recent dbh2.
##2vii. UNCOMMON If new.band=1, measure is NA, and dbh is different, dbh2 is the new dbh plus the mean of the differences of the previous dbh2's.
library(zoo)
for(stems in names(all_stems)) {
tree.n <- all_stems[[stems]]
tree.n$dbh2 <- NA
tree.n$dbh2[1] <- tree.n$dbh[1]
tree.n$dbh2 <- as.numeric(tree.n$dbh2)
tree.n$measure <- as.numeric(tree.n$measure)
tree.n$dbh <- as.numeric(tree.n$dbh)
q <- mean(unlist(tapply(tree.n$measure, tree.n$dendroID, diff)), na.rm=TRUE)
for(i in 2:(nrow(tree.n))){
tree.n$dbh2[[i]] <-
ifelse(tree.n$new.band[[i]] == 0 & tree.n$survey.ID[[i]] == 2014.01 & !identical(tree.n$dbh[[i]], tree.n$dbh[[i-1]]),
tree.n$dbh[[i]],
ifelse(tree.n$new.band[[i]] == 0 & !is.na(tree.n$measure[[i]]) & !is.na(tree.n$dbh2[[i-1]]),
findDendroDBH(tree.n$dbh2[[i-1]], tree.n$measure[[i-1]], tree.n$measure[[i]]),
ifelse(tree.n$new.band[[i]] == 0 & !is.na(tree.n$measure[[i]]) & is.na(tree.n$dbh2[[i-1]]),
findDendroDBH(tail(na.locf(tree.n$dbh2[1:i-1]), n=1), tail(na.locf(tree.n$measure[1:i-1]), n=1), tree.n$measure[[i]]),
ifelse(tree.n$new.band[[i]] == 0 & is.na(tree.n$measure[[i]]), NA,
ifelse(tree.n$new.band[[i]]==1 & !is.na(tree.n$measure[[i]]) & !identical(tree.n$dbh[[i]], tree.n$dbh[[i-1]]),
tree.n$dbh[[i]],
ifelse(tree.n$new.band[[i]] == 1 & !is.na(tree.n$measure[[i]]) & identical(tree.n$dbh[[i]], tree.n$dbh[[i-1]]),
max(tree.n$dbh2[1: i-1], na.rm = T) + mean(diff(tree.n$dbh2[1: i-1]), na.rm = T),
ifelse(tree.n$new.band[[i]] == 1 & is.na(tree.n$measure[[i]]) & identical(tree.n$dbh[[i]], tree.n$dbh[[i-1]]),
max(tree.n$dbh2[1: i-1], na.rm = T) + mean(diff(tree.n$dbh2[1:(i-1)]), na.rm=T),
ifelse(tree.n$new.band[[i]] == 1 & is.na(tree.n$measure[[i]]) & !identical(tree.n$dbh[[i]], tree.n$dbh[[i-1]]),
tree.n$dbh[i] + mean(diff(tree.n$dbh2[1:(i-1)]), na.rm=TRUE),
tree.n$dbh2))))))))
}
all_stems[[stems]] <- tree.n
}
#correction factor for 2013 census data
for(stems in names(all_stems)) {
tree.n <- all_stems[[stems]]
tree.nsub <- tree.n[tree.n$survey.ID %in% c(2010:2014.01), ]
tree.n$dbh2 <- ifelse(unique(tree.nsub$dbh2[!tail(tree.nsub$dbh2, n=1)]), tree.n$dbh2,
ifelse(tree.n$survey.ID == 2013.16 & tree.n$survey.ID == 2014.01,
abs(diff(tail(tree.n$dbh, n=2))) + tree.n$dbh2)....
#Dendrobands: if dbh 2010:2013.16 same, then take difference of 2014.01 and 2013.06, and add to entire 2010:2013.16 measurements.
all_stems[[stems]] <- tree.n
}
######################################################################################
##1c. troubleshoot with individual tags
dendro_2018 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2018.csv")
intra <- dendro_2018[dendro_2018$intraannual==1, ]
test <- intra[intra$tag==12025, ] #12025 has band replaced
View(test)
dendro_2017 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2017.csv")
intra <- dendro_2017[dendro_2017$intraannual==1, ]
test <- intra[intra$tag==60459, ] #60459 has band replaced but with NAs for a few measurements. The following code should be tried with 10671 as well.
View(test)
test <- intra[intra$tag==10671, ] #60459 has band replaced but with NAs for a few measurements. The following code should be tried with 10671 as well.
View(test)
test <- intra[intra$tag==60459, ] #60459 has band replaced but with NAs for a few measurements. The following code should be tried with 10671 as well.
View(test)
View(all_stems)
View(all_stems$stemID_10045)
View(all_stems$stemID_82360)
View(all_stems$stemID_10198)
getwd()
write.csv(all_stems$stemID_10198, "sample_growth.csv", row.names=FALSE)
cru1901 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/climate_sensitivity_cores/results/canopy_vs_subcanopy/1901_2009/tables/monthly_correlation/correlation_with_CRU_SCBI_1901_2016_climate_data.csv")
library(ggplot2)
library(ggpubr)
#subset out caco, cato, and frni because they don't have pair of canopy and subcanopy
cru1901 <- cru1901[!(cru1901$Species %in% c("CACO_subcanopy", "CATO_subcanopy", "FRNI_subcanopy")), ]
cru1901_loop <- cru1901
#create separate identifier
cru1901_loop$position <- ifelse(grepl("subcanopy", cru1901$Species), "subcanopy", "canopy")
cru1901_loop$Species <- gsub("_[[:alpha:]]+$", "", cru1901$Species)
setwd("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/tree-growth-and-traits")
cru1901_loop$variable <- as.character(cru1901_loop$variable)
clim <- unique(cru1901_loop$variable)
species <- unique(cru1901_loop$Species)
months <- c("curr.may", "curr.jun", "curr.jul", "curr.aug")
?t.test
j=1
i=1
cru1901_sub <- cru1901_loop[cru1901_loop$variable %in% clim[[j]] & cru1901_loop$month %in% months[[i]], ]
View(cru1901_sub)
cru1901_sub <- cru1901_loop[cru1901_loop$variable %in% clim[[j]], ]
cru1901_sub <- group_by(cru1901_sub, month)
q <- ggplot(data = cru1901_sub) +
geom_boxplot(aes(x = position, y = coef, fill = position)) +
labs(title = paste0("Canopy vs subcanopy: ", clim[[j]]),
y = "Correlation") +
stat_compare_means(aes(x=position, y=coef), method="t.test", label.x.npc = 0, label.y.npc = 0.97) +
facet_wrap( ~ month, scales="free", nrow=4) +
theme_minimal()
print(q)
cru1901_sub <- cru1901_loop[cru1901_loop$variable %in% clim[[j]] & cru1901_loop$month %in% months, ]
cru1901_sub <- group_by(cru1901_sub, month)
q <- ggplot(data = cru1901_sub) +
geom_boxplot(aes(x = position, y = coef, fill = position)) +
labs(title = paste0("Canopy vs subcanopy: ", clim[[j]]),
y = "Correlation") +
stat_compare_means(aes(x=position, y=coef), method="t.test", label.x.npc = 0, label.y.npc = 0.97) +
facet_wrap( ~ month, scales="free", nrow=4) +
theme_minimal()
print(q)
for (j in seq(along=clim)){
cru1901_sub <- cru1901_loop[cru1901_loop$variable %in% clim[[j]] & cru1901_loop$month %in% months, ]
cru1901_sub <- group_by(cru1901_sub, month)
q <- ggplot(data = cru1901_sub) +
geom_boxplot(aes(x = position, y = coef, fill = position)) +
labs(title = paste0("Canopy vs subcanopy: ", clim[[j]]),
y = "Correlation") +
stat_compare_means(aes(x=position, y=coef), method="t.test", label.x.npc = 0.4, label.y.npc = 0.97) +
facet_wrap( ~ month, scales="free", nrow=4) +
theme_minimal()
print(q)
}
pdf("Canopy_subcanopy_correlation.pdf", width=10)
#creates a lattice graph showing box plot of variables grouped by species
ggplot(data = cru1901) +
aes(x = Species, y = coef, fill = variable) +
geom_boxplot() +
labs(title = "Correlation by species and variable",
y = "Correlation") +
facet_wrap( ~ Species, scales="free", nrow=4) +
theme_minimal()
cru1901_loop$Species <- as.factor(cru1901_loop$Species)
for (j in seq(along=clim)){
cru1901_sub <- cru1901_loop[cru1901_loop$variable %in% clim[[j]] & cru1901_loop$month %in% months, ]
cru1901_sub <- group_by(cru1901_sub, month)
q <- ggplot(data = cru1901_sub) +
geom_boxplot(aes(x = position, y = coef, fill = position)) +
labs(title = paste0("Canopy vs subcanopy: ", clim[[j]]),
y = "Correlation") +
stat_compare_means(aes(x=position, y=coef), method="t.test", label.x.npc = 0.4, label.y.npc = 0.97) +
facet_wrap( ~ month, scales="free", nrow=4) +
theme_minimal()
print(q)
}
dev.off()
for (j in seq(along=clim)){
cru1901_sub <- cru1901_loop[cru1901_loop$variable %in% clim[[j]] & cru1901_loop$month %in% months, ]
cru1901_sub <- group_by(cru1901_sub, month)
q <- ggplot(data = cru1901_sub) +
geom_boxplot(aes(x = position, y = coef, fill = position)) +
labs(title = paste0("Canopy vs subcanopy: ", clim[[j]]),
y = "Correlation") +
stat_compare_means(aes(x=position, y=coef), method="t.test", label.x.npc = 0.4, label.y.npc = 0.97) +
facet_wrap( ~ variable, scales="free", nrow=4) +
theme_minimal()
print(q)
}
pdf("Canopy_subcanopy_correlation.pdf", width=10)
#creates a lattice graph showing box plot of variables grouped by species
ggplot(data = cru1901) +
aes(x = Species, y = coef, fill = variable) +
geom_boxplot() +
labs(title = "Correlation by species and variable",
y = "Correlation") +
facet_wrap( ~ Species, scales="free", nrow=4) +
theme_minimal()
cru1901_loop$Species <- as.factor(cru1901_loop$Species)
for (j in seq(along=clim)){
cru1901_sub <- cru1901_loop[cru1901_loop$variable %in% clim[[j]] & cru1901_loop$month %in% months, ]
cru1901_sub <- group_by(cru1901_sub, month)
q <- ggplot(data = cru1901_sub) +
geom_boxplot(aes(x = position, y = coef, fill = position)) +
labs(title = paste0("Canopy vs subcanopy: ", clim[[j]]),
y = "Correlation") +
stat_compare_means(aes(x=position, y=coef), method="t.test", label.x.npc = 0.4, label.y.npc = 0.97) +
facet_wrap( ~ variable, scales="free", nrow=4) +
theme_minimal()
print(q)
}
dev.off()
?facet_wrap
for (j in seq(along=clim)){
cru1901_sub <- cru1901_loop[cru1901_loop$variable %in% clim[[j]] & cru1901_loop$month %in% months, ]
cru1901_sub <- group_by(cru1901_sub, month)
q <- ggplot(data = cru1901_sub) +
geom_boxplot(aes(x = position, y = coef, fill = position)) +
labs(title = paste0("Canopy vs subcanopy: ", clim[[j]]),
y = "Correlation") +
stat_compare_means(aes(x=position, y=coef), method="t.test", label.x.npc = 0.4, label.y.npc = 0.97) +
facet_wrap( ~ variable, scales="free") +
theme_minimal()
print(q)
}
print(q)
pdf("Canopy_subcanopy_correlation.pdf", width=10)
cru1901_loop$Species <- as.factor(cru1901_loop$Species)
for (j in seq(along=clim)){
cru1901_sub <- cru1901_loop[cru1901_loop$variable %in% clim[[j]] & cru1901_loop$month %in% months, ]
cru1901_sub <- group_by(cru1901_sub, month)
q <- ggplot(data = cru1901_sub) +
geom_boxplot(aes(x = position, y = coef, fill = position)) +
labs(title = paste0("Canopy vs subcanopy: ", clim[[j]]),
y = "Correlation") +
stat_compare_means(aes(x=position, y=coef), method="t.test", label.x.npc = 0.4, label.y.npc = 0.97) +
facet_wrap( ~ variable, scales="free") +
theme_minimal()
print(q)
}
dev.off()
pdf("Canopy_subcanopy_correlation.pdf", width=10)
cru1901_loop$Species <- as.factor(cru1901_loop$Species)
for (j in seq(along=clim)){
cru1901_sub <- cru1901_loop[cru1901_loop$variable %in% clim[[j]] & cru1901_loop$month %in% months, ]
cru1901_sub <- group_by(cru1901_sub, month)
q <- ggplot(data = cru1901_sub) +
geom_boxplot(aes(x = position, y = coef, fill = position)) +
labs(title = paste0("Canopy vs subcanopy: ", clim[[j]]),
y = "Correlation") +
stat_compare_means(aes(x=position, y=coef), method="t.test", label.x.npc = 0.4, label.y.npc = 0.97) +
facet_wrap( ~ variable, scales="free", nrow=4, dir="v") +
theme_minimal()
print(q)
}
dev.off()
pdf("Canopy_subcanopy_correlation.pdf", width=10)
cru1901_loop$Species <- as.factor(cru1901_loop$Species)
for (j in seq(along=clim)){
cru1901_sub <- cru1901_loop[cru1901_loop$variable %in% clim[[j]] & cru1901_loop$month %in% months, ]
cru1901_sub <- group_by(cru1901_sub, month)
q <- ggplot(data = cru1901_sub) +
geom_boxplot(aes(x = position, y = coef, fill = position)) +
labs(title = paste0("Canopy vs subcanopy: ", clim[[j]]),
y = "Correlation") +
stat_compare_means(aes(x=position, y=coef), method="t.test", label.x.npc = 0.4, label.y.npc = 0.97) +
facet_wrap( ~ variable, scales="free", nrow=4) +
theme_minimal()
print(q)
}
dev.off()
cru1901 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/climate_sensitivity_cores/results/canopy_vs_subcanopy/1901_2009/tables/monthly_correlation/correlation_with_CRU_SCBI_1901_2016_climate_data.csv")
library(ggplot2)
library(ggpubr)
#subset out caco, cato, and frni because they don't have pair of canopy and subcanopy
cru1901 <- cru1901[!(cru1901$Species %in% c("CACO_subcanopy", "CATO_subcanopy", "FRNI_subcanopy")), ]
cru1901_loop <- cru1901
#create separate identifier
cru1901_loop$position <- ifelse(grepl("subcanopy", cru1901$Species), "subcanopy", "canopy")
cru1901_loop$Species <- gsub("_[[:alpha:]]+$", "", cru1901$Species)
setwd("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/tree-growth-and-traits")
cru1901_loop$variable <- as.character(cru1901_loop$variable)
clim <- unique(cru1901_loop$variable)
species <- unique(cru1901_loop$Species)
months <- c("curr.may", "curr.jun", "curr.jul", "curr.aug")
pdf("Canopy_subcanopy_correlation.pdf", width=10)
cru1901_loop$Species <- as.factor(cru1901_loop$Species)
for (j in seq(along=clim)){
cru1901_sub <- cru1901_loop[cru1901_loop$variable %in% clim[[j]] & cru1901_loop$month %in% months, ]
cru1901_sub <- group_by(cru1901_sub, month)
q <- ggplot(data = cru1901_sub) +
geom_boxplot(aes(x = position, y = coef, fill = position)) +
labs(title = paste0("Canopy vs subcanopy: ", clim[[j]]),
y = "Correlation") +
stat_compare_means(aes(x=position, y=coef), method="t.test", label.x.npc = 0.4, label.y.npc = 0.97) +
facet_wrap( ~ variable, scales="free", nrow=4) +
theme_minimal()
print(q)
}
dev.off()
View(cru1901_sub)
pdf("Canopy_subcanopy_correlation.pdf", width=10)
cru1901_loop$Species <- as.factor(cru1901_loop$Species)
for (j in seq(along=clim)){
cru1901_sub <- cru1901_loop[cru1901_loop$variable %in% clim[[j]] & cru1901_loop$month %in% months, ]
cru1901_sub <- group_by(cru1901_sub, month)
q <- ggplot(data = cru1901_sub) +
geom_boxplot(aes(x = position, y = coef, fill = position)) +
labs(title = paste0("Canopy vs subcanopy: ", clim[[j]]),
y = "Correlation") +
stat_compare_means(aes(x=position, y=coef), method="t.test", label.x.npc = 0.4, label.y.npc = 0.97) +
facet_wrap( ~ month, scales="free", nrow=4) +
theme_minimal()
print(q)
}
dev.off()
pdf("Canopy_subcanopy_correlation.pdf", width=10)
cru1901_loop$Species <- as.factor(cru1901_loop$Species)
for (j in seq(along=clim)){
cru1901_sub <- cru1901_loop[cru1901_loop$variable %in% clim[[j]], ]
cru1901_sub <- group_by(cru1901_sub, month)
q <- ggplot(data = cru1901_sub) +
geom_boxplot(aes(x = position, y = coef, fill = position)) +
labs(title = paste0("Canopy vs subcanopy: ", clim[[j]]),
y = "Correlation") +
stat_compare_means(aes(x=position, y=coef), method="t.test", label.x.npc = 0.4, label.y.npc = 0.97) +
facet_wrap( ~ month, scales="free", nrow=4) +
theme_minimal()
print(q)
}
dev.off()
?facet_wrap
pdf("Canopy_subcanopy_correlation.pdf", width=10)
cru1901_loop$Species <- as.factor(cru1901_loop$Species)
for (j in seq(along=clim)){
cru1901_sub <- cru1901_loop[cru1901_loop$variable %in% clim[[j]], ]
cru1901_sub <- group_by(cru1901_sub, month)
q <- ggplot(data = cru1901_sub) +
geom_boxplot(aes(x = position, y = coef, fill = position)) +
labs(title = paste0("Canopy vs subcanopy: ", clim[[j]]),
y = "Correlation") +
stat_compare_means(aes(x=position, y=coef), method="t.test", label.x.npc = 0.4, label.y.npc = 0.97) +
facet_wrap(order(month), scales="free", nrow=4) +
theme_minimal()
print(q)
}
dev.off()
pdf("Canopy_subcanopy_correlation.pdf", width=10)
cru1901_loop$Species <- as.factor(cru1901_loop$Species)
for (j in seq(along=clim)){
cru1901_sub <- cru1901_loop[cru1901_loop$variable %in% clim[[j]], ]
cru1901_sub <- group_by(cru1901_sub, month)
q <- ggplot(data = cru1901_sub) +
geom_boxplot(aes(x = position, y = coef, fill = position)) +
labs(title = paste0("Canopy vs subcanopy: ", clim[[j]]),
y = "Correlation") +
stat_compare_means(aes(x=position, y=coef), method="t.test", label.x.npc = 0.4, label.y.npc = 0.97) +
facet_wrap(order("month"), scales="free", nrow=4) +
theme_minimal()
print(q)
}
dev.off()
pdf("Canopy_subcanopy_correlation.pdf", width=10)
cru1901_loop$Species <- as.factor(cru1901_loop$Species)
for (j in seq(along=clim)){
cru1901_sub <- cru1901_loop[cru1901_loop$variable %in% clim[[j]], ]
cru1901_sub <- group_by(cru1901_sub, month)
q <- ggplot(data = cru1901_sub) +
geom_boxplot(aes(x = position, y = coef, fill = position)) +
labs(title = paste0("Canopy vs subcanopy: ", clim[[j]]),
y = "Correlation") +
stat_compare_means(aes(x=position, y=coef), method="t.test", label.x.npc = 0.4, label.y.npc = 0.97) +
facet_wrap(~ order("month"), scales="free", nrow=4) +
theme_minimal()
print(q)
}
dev.off()
with(cru1901_loop, levels(month))
cru1901_loop <- within(cru1901_loop, month <- factor(month, levels=sample(levels(month))))
with(cru1901_loop, levels(month))
cru1901_loop <- within(cru1901_loop, month <- factor(month, levels=order(levels(month))))
with(cru1901_loop, levels(month))
cru1901_loop <- within(cru1901_loop, month <- factor(month, levels=sample(levels(month))))
with(cru1901_loop, levels(month))
cru1901_loop$month <- as.factor(cru1901_loop$month)
cru1901_loop <- within(cru1901_loop, month <- factor(month, levels=sample(levels(month))))
with(cru1901_loop, levels(month))
cru1901_loop$month <- as.character(cru1901_loop$month)
cru1901_loop <- within(cru1901_loop, month <- factor(month, levels=sample(levels(month))))
with(cru1901_loop, levels(month))
cru1901_loop$month
cru1901 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/climate_sensitivity_cores/results/canopy_vs_subcanopy/1901_2009/tables/monthly_correlation/correlation_with_CRU_SCBI_1901_2016_climate_data.csv")
library(ggplot2)
library(ggpubr)
#subset out caco, cato, and frni because they don't have pair of canopy and subcanopy
cru1901 <- cru1901[!(cru1901$Species %in% c("CACO_subcanopy", "CATO_subcanopy", "FRNI_subcanopy")), ]
cru1901_loop <- cru1901
#create separate identifier
cru1901_loop$position <- ifelse(grepl("subcanopy", cru1901$Species), "subcanopy", "canopy")
cru1901_loop$Species <- gsub("_[[:alpha:]]+$", "", cru1901$Species)
setwd("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/tree-growth-and-traits")
cru1901_loop$variable <- as.character(cru1901_loop$variable)
clim <- unique(cru1901_loop$variable)
species <- unique(cru1901_loop$Species)
months <- c("curr.may", "curr.jun", "curr.jul", "curr.aug")
cru1901_loop <- within(cru1901_loop, month <- factor(month, levels=sample(levels(month))))
with(cru1901_loop, levels(month))
pdf("Canopy_subcanopy_correlation.pdf", width=10)
for (j in seq(along=clim)){
cru1901_sub <- cru1901_loop[cru1901_loop$variable %in% clim[[j]], ]
cru1901_sub <- group_by(cru1901_sub, month)
q <- ggplot(data = cru1901_sub) +
geom_boxplot(aes(x = position, y = coef, fill = position)) +
labs(title = paste0("Canopy vs subcanopy: ", clim[[j]]),
y = "Correlation") +
stat_compare_means(aes(x=position, y=coef), method="t.test", label.x.npc = 0.4, label.y.npc = 0.97) +
facet_wrap(~ order("month"), scales="free", nrow=4) +
theme_minimal()
print(q)
}
dev.off()
pdf("Canopy_subcanopy_correlation.pdf", width=10)
for (j in seq(along=clim)){
cru1901_sub <- cru1901_loop[cru1901_loop$variable %in% clim[[j]], ]
cru1901_sub <- group_by(cru1901_sub, month)
q <- ggplot(data = cru1901_sub) +
geom_boxplot(aes(x = position, y = coef, fill = position)) +
labs(title = paste0("Canopy vs subcanopy: ", clim[[j]]),
y = "Correlation") +
stat_compare_means(aes(x=position, y=coef), method="t.test", label.x.npc = 0.4, label.y.npc = 0.97) +
facet_wrap(~ month, scales="free", nrow=4) +
theme_minimal()
print(q)
}
dev.off()
unique(levels(cru1901$month))
cru1901_loop <- cru1901
cru1901_loop$position <- ifelse(grepl("subcanopy", cru1901$Species), "subcanopy", "canopy")
cru1901_loop$Species <- gsub("_[[:alpha:]]+$", "", cru1901$Species)
setwd("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/tree-growth-and-traits")
cru1901_loop$variable <- as.character(cru1901_loop$variable)
clim <- unique(cru1901_loop$variable)
species <- unique(cru1901_loop$Species)
months <- c("curr.may", "curr.jun", "curr.jul", "curr.aug")
unique(levels(cru1901$month))
order(unique(levels(cru1901$month)))
cru1901$month
cru1901$month[1:17, ]
cru1901_loop <- within(cru1901_loop, month <- factor(month, levels=cru1901$month[c(1:17), ]))
cru1901_loop$month[c(1:17), ]
View(cru1901_sub)
cru1901_loop$month
cru1901_loop$month[1:17]
cru1901_loop <- within(cru1901_loop, month <- factor(month, levels=cru1901_loop$month[1:17]))
with(cru1901_loop, levels(month))
pdf("Canopy_subcanopy_correlation.pdf", width=10)
for (j in seq(along=clim)){
cru1901_sub <- cru1901_loop[cru1901_loop$variable %in% clim[[j]], ]
cru1901_sub <- group_by(cru1901_sub, month)
q <- ggplot(data = cru1901_sub) +
geom_boxplot(aes(x = position, y = coef, fill = position)) +
labs(title = paste0("Canopy vs subcanopy: ", clim[[j]]),
y = "Correlation") +
stat_compare_means(aes(x=position, y=coef), method="t.test", label.x.npc = 0, label.y.npc = 0.97) +
facet_wrap(~ month, scales="free", nrow=4) +
theme_minimal()
print(q)
}
dev.off()
library(pointRes)
library(dplR)
##3a. canopy ####
setwd("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data/tree_cores/chronologies/current_chronologies/complete/separated by canopy position/canopy_cores")
dirs_can <- dir("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data/tree_cores/chronologies/current_chronologies/complete/separated by canopy position/canopy_cores", pattern = "_canopy.rwl")
dirs_can <- dirs_can[dirs_can != "frni_canopy.rwl" & dirs_can != "frni_drop_canopy.rwl" & dirs_can != "caco_drop_canopy.rwl"]
sp_can <- gsub("_drop_canopy.rwl", "", dirs_can)
canopy <- list()
canopy_table <- NULL
for (i in seq(along=dirs_can)){
for (j in seq(along=sp_can)){
if (i==j){
file <- dirs_can[[i]]
rings <- read.rwl(file) #read in rwl file
area <- bai.in(rings) #convert to bai.in
testr <- res.comp(area, nb.yrs=5, res.thresh.neg = 30, series.thresh = 50) #get resilience metrics
canopy[[i]] <- testr
testr_table <- data.frame(testr$out)
testr_table <- testr_table[testr_table$nb.series > 4, ] #remove where there are < 4 series
testr_table$sp <- sp_can[[j]]
testr_table$position <- "canopy"
canopy_table <- rbind(canopy_table, testr_table)
}
values <- paste0(sp_can, "_can_res")
names(canopy) <- values
##3b. subcanopy ####
setwd("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data/tree_cores/chronologies/current_chronologies/complete/separated by canopy position/subcanopy_cores")
dirs_subcan <- dir("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data/tree_cores/chronologies/current_chronologies/complete/separated by canopy position/subcanopy_cores", pattern = "_subcanopy.rwl")
dirs_subcan <- dirs_subcan[dirs_subcan != "frni_drop_subcanopy.rwl" & dirs_subcan != "caco_drop_subcanopy.rwl"]
sp_subcan <- gsub("_drop_subcanopy.rwl", "", dirs_subcan)
subcanopy <- list()
subcanopy_table <- NULL
for (i in seq(along=dirs_subcan)){
for (j in seq(along=sp_subcan)){
if (i==j){
file <- dirs_subcan[[i]]
rings <- read.rwl(file) #read in rwl file
area <- bai.in(rings) #convert to bai.in
test <- res.comp(area, nb.yrs=5, res.thresh.neg = 20, series.thresh = 50) #get resilience metrics
subcanopy[[i]] <- test
test_table <- data.frame(test$out)
test_table <- test_table[test_table$nb.series > 4, ] #remove where there are < 4 series
test_table$sp <- sp_subcan[[j]]
test_table$position <- "subcanopy"
subcanopy_table <- rbind(subcanopy_table, test_table)
}
values_sub <- paste0(sp_subcan, "_can_res")
names(subcanopy) <- values_sub
full_ind <- rbind(canopy_table, subcanopy_table) #full table of indices for canopy and subcanopy cores
pointers <-
pointers_can <- canopy_table[canopy_table$nature == -1, ]
pointers_sub <- subcanopy_table[subcanopy_table$nature == -1, ]
years <- data.frame(unique(sort(point_years$year)))
colnames(years) <- "yr"
library(dplyr)
for (i in seq(along=years$yr)){
index <- years$yr[[i]]
years$n.occur.can <- ifelse(pointers_can$year == index, , 0)
years$n.occur.sub <- ifelse(pointers_sub$year == index, count(pointers_sub, vars=year), 0)
}
pos <- full_ind$position
q <- as.data.frame(table(pointers_can$year))
colnames(q) <- c("yr", "canopy")
z <- as.data.frame(table(pointers_sub$year))
colnames(z) <- c("yr", "subcanopy")
comb <- merge(q,z, all=TRUE)
comb$yr <- as.numeric(comb$yr)
comb <- comb[sort(comb$yr), ]
setwd("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/tree-growth-and-traits")
write.csv(comb, "occurrence_of_pointer_yrs_by_canopy_position.csv", row.names=FALSE)
comb <- merge(q,z, all=TRUE)
write.csv(comb, "occurrence_of_pointer_yrs_by_canopy_position.csv", row.names=FALSE)
i
write.csv(comb, "occurrence_of_pointer_yrs_by_canopy_position.csv", row.names=FALSE)
