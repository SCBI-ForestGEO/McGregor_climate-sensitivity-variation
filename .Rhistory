legend.box = "vertical",
legend.position = c(0.75, 0.45),
legend.background = element_rect(fill=alpha("white", 0.01)),
legend.text=element_text(size=12),
legend.key.size=unit(4,"mm"),
legend.spacing=unit(-0.5,"cm")
)
NEON_list[[i]] +
theme(legend.title = element_blank(),
legend.box = "vertical",
legend.position = c(0.75, 0.35),
legend.background = element_rect(fill=alpha("white", 0.01)),
legend.text=element_text(size=12),
legend.key.size=unit(4,"mm"),
legend.spacing=unit(-0.5,"cm")
)
for (i in seq(along=1:3)){
NEON_list[[i]] <-
NEON_list[[i]] +
theme_bw(base_size = 16) +
# theme_bw(base_family = "serif") + #for TNR font
geom_hline(aes(yintercept = yintercept), linetype = "longdash", quant) +
annotate(geom="text", x=NEON_order_x[[i]], y=NEON_order_y[[i]],
label = NEON_order[[i]], fontface="bold", size=7)
if(i==1){
NEON_list[[i]] <-
NEON_list[[i]] +
theme(legend.title = element_blank(),
legend.box = "vertical",
legend.position = c(0.75, 0.35),
legend.background = element_rect(fill=alpha("white", 0.01)),
legend.text=element_text(size=12),
legend.key.size=unit(4,"mm"),
legend.spacing=unit(-0.5,"cm")
)
}
if(!i==4){
NEON_list[[i]] <-
NEON_list[[i]] +
theme(legend.position = "none")
}
if(!i==1){
NEON_list[[i]] <-
NEON_list[[i]] +
theme(axis.title.y = element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
}
}
NEON <- ggarrange(NEON_list$wind_plot, NEON_list$RH_plot, NEON_list$SAAT_plot,  nrow=1, ncol=3, align="h")
NEON
plots_bw <- list(heights, plot_pla_ht, plot_tlp_ht)
names(plots_bw) <- c("heights", "plot_pla_ht", "plot_tlp_ht")
plots_bw_order <- c("(e)", "(f)", "(g)")
plots_bw_order_x <- c(0.7, 9, -2.75)
plots_bw_order_y <- c(57.5, 57.5, 57.5)
for (i in seq(along=1:3)){
plots_bw[[i]] <- #all graphs
plots_bw[[i]] +
theme_bw(base_size = 16) +
# theme_bw(base_family = "serif") + #for TNR font
geom_hline(aes(yintercept = yintercept), linetype = "longdash", quant) +
annotate(geom="text", x=plots_bw_order_x[[i]], y=plots_bw_order_y[[i]],
label = plots_bw_order[[i]], fontface="bold", size=7)
if(!i == 1){ #only trait graphs
plots_bw[[i]] <-
plots_bw[[i]] +
theme(axis.text.y=element_blank(),
axis.title.y=element_blank(),
axis.ticks = element_blank(),
legend.position = "none")
}
}
heights_other <- ggarrange(plots_bw$heights, plots_bw$plot_pla_ht, plots_bw$plot_tlp_ht, nrow=1, ncol=3)
ggarrange(NEON, heights_other, nrow=2, ncol=1)
NEON_list <- list(wind_plot, RH_plot, SAAT_plot) #,"biotemp_plot")
names(NEON_list) <- c("wind_plot", "RH_plot", "SAAT_plot") #,"biotemp_plot
i=1
NEON_list[[i]] +
theme(legend.title = element_blank(),
legend.box = "vertical",
legend.position = c(0.75, 0.35),
legend.background = element_rect(fill=alpha("white", 0.01)),
legend.text=element_text(size=12),
legend.key.size=unit(4,"mm"),
legend.spacing=unit(-0.5,"cm")
)
NEON_list[[i]] <-
NEON_list[[i]] +
theme(legend.title = element_blank(),
legend.box = "vertical",
legend.position = c(0.75, 0.35),
legend.background = element_rect(fill=alpha("white", 0.01)),
legend.text=element_text(size=12),
legend.key.size=unit(4,"mm"),
legend.spacing=unit(-0.5,"cm")
)
NEON_list[1]
for (i in seq(along=1:3)){
NEON_list[[i]] <-
NEON_list[[i]] +
theme_bw(base_size = 16) +
# theme_bw(base_family = "serif") + #for TNR font
geom_hline(aes(yintercept = yintercept), linetype = "longdash", quant) +
annotate(geom="text", x=NEON_order_x[[i]], y=NEON_order_y[[i]],
label = NEON_order[[i]], fontface="bold", size=7)
if(i==1){
NEON_list[[i]] <-
NEON_list[[i]] +
theme(legend.title = element_blank(),
legend.box = "vertical",
legend.position = c(0.75, 0.35),
legend.background = element_rect(fill=alpha("white", 0.01)),
legend.text=element_text(size=12),
legend.key.size=unit(4,"mm"),
legend.spacing=unit(-0.5,"cm")
)
}
if(!i==1){
NEON_list[[i]] <-
NEON_list[[i]] +
theme(legend.position = "none")
}
if(!i==1){
NEON_list[[i]] <-
NEON_list[[i]] +
theme(axis.title.y = element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
}
}
NEON <- ggarrange(NEON_list$wind_plot, NEON_list$RH_plot, NEON_list$SAAT_plot,  nrow=1, ncol=3, align="h")
NEON
ggarrange(NEON, heights_other, nrow=2, ncol=1)
png("manuscript/tables_figures/Figure2_test.png", width=11, height=11, units="in", res=300)
ggarrange(NEON, heights_other, nrow=2, ncol=1)
dev.off()
for (i in seq(along=1:3)){
NEON_list[[i]] <-
NEON_list[[i]] +
theme_bw(base_size = 16) +
# theme_bw(base_family = "serif") + #for TNR font
geom_hline(aes(yintercept = yintercept), linetype = "longdash", quant) +
annotate(geom="text", x=NEON_order_x[[i]], y=NEON_order_y[[i]],
label = NEON_order[[i]], fontface="bold", size=7)
if(i==1){
NEON_list[[i]] <-
NEON_list[[i]] +
theme(legend.title = element_blank(),
legend.box = "vertical",
legend.position = c(0.8, 0.35),
legend.background = element_rect(fill=alpha("white", 0.01)),
legend.text=element_text(size=12),
legend.key.size=unit(4,"mm"),
legend.spacing=unit(-0.5,"cm")
)
}
if(!i==1){
NEON_list[[i]] <-
NEON_list[[i]] +
theme(legend.position = "none")
}
if(!i==1){
NEON_list[[i]] <-
NEON_list[[i]] +
theme(axis.title.y = element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
}
}
NEON <- ggarrange(NEON_list$wind_plot, NEON_list$RH_plot, NEON_list$SAAT_plot,  nrow=1, ncol=3, align="h")
png("manuscript/tables_figures/Figure2_test.png", width=11, height=11, units="in", res=300)
ggarrange(NEON, heights_other, nrow=2, ncol=1)
dev.off()
plots_bw <- list(heights, plot_pla_ht, plot_tlp_ht)
names(plots_bw) <- c("heights", "plot_pla_ht", "plot_tlp_ht")
plots_bw_order <- c("(d)", "(e)", "(f)")
plots_bw_order_x <- c(0.7, 9, -2.75)
plots_bw_order_y <- c(57.5, 57.5, 57.5)
for (i in seq(along=1:3)){
plots_bw[[i]] <- #all graphs
plots_bw[[i]] +
theme_bw(base_size = 16) +
# theme_bw(base_family = "serif") + #for TNR font
geom_hline(aes(yintercept = yintercept), linetype = "longdash", quant) +
annotate(geom="text", x=plots_bw_order_x[[i]], y=plots_bw_order_y[[i]],
label = plots_bw_order[[i]], fontface="bold", size=7)
if(!i == 1){ #only trait graphs
plots_bw[[i]] <-
plots_bw[[i]] +
theme(axis.text.y=element_blank(),
axis.title.y=element_blank(),
axis.ticks = element_blank(),
legend.position = "none")
}
}
heights_other <- ggarrange(plots_bw$heights, plots_bw$plot_pla_ht, plots_bw$plot_tlp_ht, nrow=1, ncol=3)
png("manuscript/tables_figures/Figure2_test.png", width=11, height=11, units="in", res=300)
ggarrange(NEON, heights_other, nrow=2, ncol=1)
dev.off()
plots_bw <- list(heights, plot_pla_ht, plot_tlp_ht)
names(plots_bw) <- c("heights", "plot_pla_ht", "plot_tlp_ht")
plots_bw_order <- c("(d)", "(e)", "(f)")
plots_bw_order_x <- c(0.8, 9, -2.75)
plots_bw_order_y <- c(57.5, 57.5, 57.5)
for (i in seq(along=1:3)){
plots_bw[[i]] <- #all graphs
plots_bw[[i]] +
theme_bw(base_size = 16) +
# theme_bw(base_family = "serif") + #for TNR font
geom_hline(aes(yintercept = yintercept), linetype = "longdash", quant) +
annotate(geom="text", x=plots_bw_order_x[[i]], y=plots_bw_order_y[[i]],
label = plots_bw_order[[i]], fontface="bold", size=7)
if(!i == 1){ #only trait graphs
plots_bw[[i]] <-
plots_bw[[i]] +
theme(axis.text.y=element_blank(),
axis.title.y=element_blank(),
axis.ticks = element_blank(),
legend.position = "none")
}
}
heights_other <- ggarrange(plots_bw$heights, plots_bw$plot_pla_ht, plots_bw$plot_tlp_ht, nrow=1, ncol=3)
png("manuscript/tables_figures/Figure2_test.png", width=11, height=11, units="in", res=300)
ggarrange(NEON, heights_other, nrow=2, ncol=1)
dev.off()
png("manuscript/tables_figures/Figure2.png", width=11, height=11, units="in", res=300)
ggarrange(NEON, heights_other, nrow=2, ncol=1)
dev.off()
install.packages("tidyverse")
library(reprex)
reprex(
data(nhtemp)
)
data(nhtemp)
data <- nhtemp
data(trees)
force(trees)
View(trees)
library(reshape2)
trees <- melt(trees)
View(trees)
?runif
dat <- data.frame(variable = "turgor loss point",
unit = "",
value = runif(10))
View(dat)
?samp
?sample
dat <- data.frame(variable = c("turgor loss point", "volume"),
unit = c("", "cm^3"),
value = runif(10), sample(20:30, 10))
View(dat)
value = c(runif(10), sample(20:30, 10))
dat <- data.frame(variable = c("turgor loss point", "volume"),
unit = c("", "cm^3"),
value = c(runif(10), sample(20:30, 10)))
View(dat)
dat <- data.frame(variable = c("turgor loss point", "volume"),
unit = c("", "cm^3"),
value = runif(10), sample(20:30, 10))
View(dat)
dat <- data.frame(variable = c("turgor loss point", "volume"),
unit = c("", "cm^3"),
value = c(runif(10), sample(20:30, 10)))
View(dat)
dat <- data.frame(variable = c("turgor loss point", "volume"),
unit = rep("", 10), rep("cm^3", 10),
value = c(runif(10), sample(20:30, 10)))
View(dat)
dat <- data.frame(variable = c("turgor loss point", "volume"),
unit = c(rep("", 10), rep("cm^3", 10)),
value = c(runif(10), sample(20:30, 10)))
View(dat)
dat <- data.frame(variable = c("turgor loss point", "volume"),
unit = c(rep("", 10), rep("cm^3", 10)),
value = c(round(runif(10), 1), sample(20:30, 10)))
View(dat)
dat <- data.frame(variable = c("turgor loss point", "volume"),
unit = c(rep("", 10), rep("cm^3", 10)),
value = c(round(runif(10), 2), runif(10, 20,30)))
View(dat)
dat <- data.frame(variable = c("turgor loss point", "volume"),
unit = c(rep("", 10), rep("cm^3", 10)),
value = c(round(runif(10), 2), round(runif(10, 20,30)),2))
value = c(round(runif(10), 2), round(runif(10,20,30),2))
View(dat)
dat <- data.frame(variable = c("turgor loss point", "volume"),
unit = c(rep("", 10), rep("cm^3", 10)),
value = c(round(runif(10), 2), round(runif(10,20,30),2)))
View(dat)
dat <- data.frame(variable = c(rep("turgor loss point", 10), rep("volume", 10),
dat <- data.frame(variable = c(rep("turgor loss point", 10), rep("volume", 10)),
unit = c(rep("", 10), rep("cm^3", 10)),
value = c(round(runif(10), 2), round(runif(10,20,30),2)))
View(dat)
dat <- data.frame(variable = c(rep("turgor loss point", 10), rep("volume", 10)),
unit = c(rep("$\\pi_{tlp}$", 10), rep("cm^3", 10)),
value = c(round(runif(10), 2), round(runif(10,20,30),2)))
View(dat)
library(kableExtra)
kable(dat, booktabs = TRUE, caption = "**Summary of variables**", format = 'latex', escape = TRUE) %>%
kable_styling(latex_options = c("scale_down", "hold_position"), font_size = 12, protect_latex = TRUE) %>%
add_header_above(c(" "," "," "," "," "," ", "observed values" = 3, " ")) %>%
column_spec(4, width = "7cm") %>%
pack_rows("Dependent variable", 1, 1, latex_gap_space = "1em", colnum = 1, hline_before = FALSE) %>%
pack_rows("Independent variables", 2, 18, latex_gap_space = ".4em", colnum = 1, hline_before = FALSE) %>%
pack_rows("tree size", 5, 6, latex_gap_space = ".4em", colnum = 1, hline_before = FALSE, bold = FALSE, italic = TRUE) %>%
pack_rows("microhabitat", 7, 11, latex_gap_space = ".4em", colnum = 1, hline_before = FALSE, bold = FALSE, italic = TRUE) %>%
pack_rows("species' traits", 12, 18, latex_gap_space = ".4em", colnum = 1, hline_before = FALSE, bold = FALSE, italic = TRUE) %>%
kable_styling()
?reprex
reprex(
library(kableExtra)
library(knitr)
dat <- data.frame(variable = c(rep("turgor loss point", 10), rep("volume", 10)),
unit = c(rep("$\\pi_{tlp}$", 10), rep("cm^3", 10)),
value = c(round(runif(10), 2), round(runif(10,20,30),2)))
kable(dat, booktabs = TRUE, caption = "**Summary of variables**", format = 'latex', escape = TRUE) %>%
kable_styling(latex_options = c("scale_down", "hold_position"), font_size = 12, protect_latex = TRUE) %>%
add_header_above(c(" "," "," "," "," "," ", "observed values" = 3, " ")) %>%
column_spec(4, width = "7cm") %>%
pack_rows("Dependent variable", 1, 1, latex_gap_space = "1em", colnum = 1, hline_before = FALSE) %>%
pack_rows("Independent variables", 2, 18, latex_gap_space = ".4em", colnum = 1, hline_before = FALSE) %>%
pack_rows("tree size", 5, 6, latex_gap_space = ".4em", colnum = 1, hline_before = FALSE, bold = FALSE, italic = TRUE) %>%
pack_rows("microhabitat", 7, 11, latex_gap_space = ".4em", colnum = 1, hline_before = FALSE, bold = FALSE, italic = TRUE) %>%
pack_rows("species' traits", 12, 18, latex_gap_space = ".4em", colnum = 1, hline_before = FALSE, bold = FALSE, italic = TRUE) %>%
kable_styling()
)
reprex(
library(kableExtra)
library(knitr)
dat <- data.frame(variable = c(rep("turgor loss point", 10), rep("volume", 10)),
unit = c(rep("$\\pi_{tlp}$", 10), rep("cm^3", 10)),
value = c(round(runif(10), 2), round(runif(10,20,30),2)))
kable(dat, booktabs = TRUE, caption = "**Summary of variables**", format = 'latex', escape = TRUE) %>%
kable_styling(latex_options = c("scale_down", "hold_position"), font_size = 12, protect_latex = TRUE) %>%
add_header_above(c(" "," "," "," "," "," ", "observed values" = 3, " ")) %>%
column_spec(4, width = "7cm") %>%
pack_rows("Dependent variable", 1, 1, latex_gap_space = "1em", colnum = 1, hline_before = FALSE) %>%
pack_rows("Independent variables", 2, 18, latex_gap_space = ".4em", colnum = 1, hline_before = FALSE) %>%
pack_rows("tree size", 5, 6, latex_gap_space = ".4em", colnum = 1, hline_before = FALSE, bold = FALSE, italic = TRUE) %>%
pack_rows("microhabitat", 7, 11, latex_gap_space = ".4em", colnum = 1, hline_before = FALSE, bold = FALSE, italic = TRUE) %>%
pack_rows("species' traits", 12, 18, latex_gap_space = ".4em", colnum = 1, hline_before = FALSE, bold = FALSE, italic = TRUE) %>%
kable_styling()
)
reprex(
# library(kableExtra)
# library(knitr)
dat <- data.frame(variable = c(rep("turgor loss point", 10), rep("volume", 10)),
unit = c(rep("$\\pi_{tlp}$", 10), rep("cm^3", 10)),
value = c(round(runif(10), 2), round(runif(10,20,30),2)))
kable(dat, booktabs = TRUE, caption = "**Summary of variables**", format = 'latex', escape = TRUE) %>%
kable_styling(latex_options = c("scale_down", "hold_position"), font_size = 12, protect_latex = TRUE) %>%
add_header_above(c(" "," "," "," "," "," ", "observed values" = 3, " ")) %>%
column_spec(4, width = "7cm") %>%
pack_rows("Dependent variable", 1, 1, latex_gap_space = "1em", colnum = 1, hline_before = FALSE) %>%
pack_rows("Independent variables", 2, 18, latex_gap_space = ".4em", colnum = 1, hline_before = FALSE) %>%
pack_rows("tree size", 5, 6, latex_gap_space = ".4em", colnum = 1, hline_before = FALSE, bold = FALSE, italic = TRUE) %>%
pack_rows("microhabitat", 7, 11, latex_gap_space = ".4em", colnum = 1, hline_before = FALSE, bold = FALSE, italic = TRUE) %>%
pack_rows("species' traits", 12, 18, latex_gap_space = ".4em", colnum = 1, hline_before = FALSE, bold = FALSE, italic = TRUE) %>%
kable_styling()
)
library(kableExtra)
library(knitr)
reprex(
# library(kableExtra)
# library(knitr)
dat <- data.frame(variable = c(rep("turgor loss point", 10), rep("volume", 10)),
unit = c(rep("$\\pi_{tlp}$", 10), rep("cm^3", 10)),
value = c(round(runif(10), 2), round(runif(10,20,30),2)))
kable(dat, booktabs = TRUE, caption = "**Summary of variables**", format = 'latex', escape = TRUE) %>%
kable_styling(latex_options = c("scale_down", "hold_position"), font_size = 12, protect_latex = TRUE) %>%
add_header_above(c(" "," "," "," "," "," ", "observed values" = 3, " ")) %>%
column_spec(4, width = "7cm") %>%
pack_rows("Dependent variable", 1, 1, latex_gap_space = "1em", colnum = 1, hline_before = FALSE) %>%
pack_rows("Independent variables", 2, 18, latex_gap_space = ".4em", colnum = 1, hline_before = FALSE) %>%
pack_rows("tree size", 5, 6, latex_gap_space = ".4em", colnum = 1, hline_before = FALSE, bold = FALSE, italic = TRUE) %>%
pack_rows("microhabitat", 7, 11, latex_gap_space = ".4em", colnum = 1, hline_before = FALSE, bold = FALSE, italic = TRUE) %>%
pack_rows("species' traits", 12, 18, latex_gap_space = ".4em", colnum = 1, hline_before = FALSE, bold = FALSE, italic = TRUE) %>%
kable_styling()
)
?kable_styling
reprex(
# library(kableExtra)
# library(knitr)
dat <- data.frame(variable = c(rep("turgor loss point", 10), rep("volume", 10)),
unit = c(rep("$\\pi_{tlp}$", 10), rep("cm^3", 10)),
value = c(round(runif(10), 2), round(runif(10,20,30),2)))
# kable(dat, booktabs = TRUE, caption = "**Summary of variables**", format = 'latex', escape = TRUE) %>%
#   kable_styling(latex_options = c("scale_down", "hold_position"), font_size = 12, protect_latex = TRUE) %>%
#   add_header_above(c(" "," "," "," "," "," ", "observed values" = 3, " ")) %>%
#   column_spec(4, width = "7cm") %>%
#   pack_rows("Dependent variable", 1, 1, latex_gap_space = "1em", colnum = 1, hline_before = FALSE) %>%
#   pack_rows("Independent variables", 2, 18, latex_gap_space = ".4em", colnum = 1, hline_before = FALSE) %>%
#   pack_rows("tree size", 5, 6, latex_gap_space = ".4em", colnum = 1, hline_before = FALSE, bold = FALSE, italic = TRUE) %>%
#   pack_rows("microhabitat", 7, 11, latex_gap_space = ".4em", colnum = 1, hline_before = FALSE, bold = FALSE, italic = TRUE) %>%
#   pack_rows("species' traits", 12, 18, latex_gap_space = ".4em", colnum = 1, hline_before = FALSE, bold = FALSE, italic = TRUE) %>%
#   kable_styling()
)
reprex(
library(kableExtra)
library(knitr)
dat <- data.frame(variable = c(rep("turgor loss point", 10), rep("volume", 10)),
unit = c(rep("$\\pi_{tlp}$", 10), rep("cm^3", 10)),
value = c(round(runif(10), 2), round(runif(10,20,30),2)))
# kable(dat, booktabs = TRUE, caption = "**Summary of variables**", format = 'latex', escape = TRUE) %>%
#   kable_styling(latex_options = c("scale_down", "hold_position"), font_size = 12, protect_latex = TRUE) %>%
#   add_header_above(c(" "," "," "," "," "," ", "observed values" = 3, " ")) %>%
#   column_spec(4, width = "7cm") %>%
#   pack_rows("Dependent variable", 1, 1, latex_gap_space = "1em", colnum = 1, hline_before = FALSE) %>%
#   pack_rows("Independent variables", 2, 18, latex_gap_space = ".4em", colnum = 1, hline_before = FALSE) %>%
#   pack_rows("tree size", 5, 6, latex_gap_space = ".4em", colnum = 1, hline_before = FALSE, bold = FALSE, italic = TRUE) %>%
#   pack_rows("microhabitat", 7, 11, latex_gap_space = ".4em", colnum = 1, hline_before = FALSE, bold = FALSE, italic = TRUE) %>%
#   pack_rows("species' traits", 12, 18, latex_gap_space = ".4em", colnum = 1, hline_before = FALSE, bold = FALSE, italic = TRUE) %>%
#   kable_styling()
)
kable(dat, booktabs = TRUE, caption = "**Summary of variables**",
format = 'latex', escape = TRUE)
kable(dat, booktabs = TRUE, caption = "**Summary of variables**",
format = 'latex', escape = TRUE) %>%
kable_styling()
kable(dat, booktabs = TRUE, caption = "**Summary of variables**",
format = 'latex')
library(knitr)
library(kableExtra)
kable(dat, booktabs = TRUE, caption = "**Summary of variables**",
format = 'latex')
dat <- data.frame(variable = c(rep("turgor loss point", 10), rep("volume", 10)),
unit = c(rep("$\\pi_{tlp}$", 10), rep("cm^3", 10)),
value = c(round(runif(10), 2), round(runif(10,20,30),2)))
kable(dat, booktabs = TRUE, caption = "**Summary of variables**",
format = 'latex')
dat <- data.frame(variable = c(rep("turgor loss point", 10), rep("volume", 10)),
unit = c(rep("$\\pi_{tlp}$", 10), rep("cm^3", 10)),
value = c(round(runif(10), 2), round(runif(10,20,30),2)))
kableExtra::kable(dat, booktabs = TRUE, caption = "**Summary of variables**",
format = 'latex')
kableExtra::kable(dat, booktabs = TRUE, caption = "**Summary of variables**",
format = 'latex')
kableExtra::kable(dat, booktabs = TRUE, format = 'latex')
library(neonUtilities)
library(lubridate)
library(dplyr)
library(tidyr)
library(stringr)
library(data.table)
library(grid)
library(gridExtra)
dp <- data.frame("data" = c("SAAT", "wind", "biotemp", "RH", "SR"),
"id" = c("DP1.00002.001", "DP1.00001.001", "DP1.00005.001", "DP1.00098.001", "DP1.00014.001"),
"value" = c("tempSingleMean", "windSpeedMean", "bioTempMean", "RHMean", "difRadMean"),
"xlabs" = c("Mean Air Temperature [°C]", "Wind [m/s]", "Mean Infrared Biological Temperature [°C]", "RH [%]", "Mean shortwave downward radiation [W/m^2]"))
dp <- dp[c(2,4,1,3,5), ]
dp[] <- lapply(dp, as.character)
dp$value <- as.character(dp$value)
date <- data.frame("year" = c(rep(2018, 4), rep(2017, 4), rep(2016, 4), rep(2015, 4)),
"month" = c(rep(5:8, 4)))
years <- c("2016", "2017", "2018")
View(date)
View(dp)
i=1
neon_data_all <- NULL
value <- dp$value[[i]]
for (j in seq(along=years)){
if (value != "RHMean" | j != 1){
neon_tower <- loadByProduct(dpID=dp$id[[i]],
site=c("SCBI"),
package="basic", avg=30,
check.size = FALSE,
#(use TRUE outside loop to see how big the dowloads are)
startdate=paste0(years[[j]], "-05"),
enddate=paste0(years[[j]], "-08"))
neon_data <- neon_tower[[1]]
neon_data_sub <- neon_data[colnames(neon_data) %in% c("verticalPosition", "startDateTime", value, "dirRadMean", "sunPres")]
#reformat dates
neon_data_sub$startDateTime <- as.character(neon_data_sub$startDateTime)
neon_data_sub$startDateTime <- gsub("T", " ", neon_data_sub$startDateTime)
neon_data_sub$startDateTime <- as.POSIXct(neon_data_sub$startDateTime, format = "%Y-%m-%d %H:%M:%OS")
#get rid of erroneous April datapoints
neon_data_sub <- neon_data_sub[!grepl("04-30", neon_data_sub$startDateTime), ]
## make consolidated graph over different months for each variable ####
neon_data_sub$day <- substr(neon_data_sub$startDateTime, 1, nchar(neon_data_sub$startDateTime)-0)
#want to preserve the dfs, so put them in a list
# neon_vars[[i]] <- neon_data_sub
# names(neon_vars)[i] <- paste0("neon_", dp$data[[i]])
neon_data_all <- rbind(neon_data_all, neon_data_sub)
} else if(value == "RHMean" & j == 1){ #no RH data for 2016, so have to recreate the df to make sure code runs
neon_data_sub[, 3] <- NULL
neon_data_sub[, value] <- NA
neon_data_sub <- neon_data_sub[, c(1:2,4,3)]
neon_data_sub$verticalPosition <- ifelse(neon_data_sub$verticalPosition == 20,
60,
neon_data_sub$verticalPosition)
neon_data_sub <- neon_data_sub[neon_data_sub$verticalPosition %in% c(0, 60), ]
neon_data_sub$day <- str_replace(neon_data_sub$day, "2018", "2016")
neon_data_all <- rbind(neon_data_all, neon_data_sub)
}
}
View(neon_data_sub)
library(ggplot2)
#1. NEON vertical height profiles
source('scripts/vertical_height_neon.R', echo=TRUE)
NEON_list <- list(wind_plot, RH_plot, SAAT_plot) #,"biotemp_plot")
names(NEON_list) <- c("wind_plot", "RH_plot", "SAAT_plot") #,"biotemp_plot
warnings()
library(ggplot2)
#1. NEON vertical height profiles
source('scripts/vertical_height_neon.R', echo=TRUE)
NEON_list <- list(wind_plot, RH_plot, SAAT_plot) #,"biotemp_plot")
names(NEON_list) <- c("wind_plot", "RH_plot", "SAAT_plot") #,"biotemp_plot
NEON_list$wind_plot
